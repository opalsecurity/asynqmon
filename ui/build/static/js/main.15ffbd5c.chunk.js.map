{"version":3,"sources":["api.ts","actions/tasksActions.ts","paths.ts","actions/settingsActions.ts","components/TablePaginationActions.tsx","actions/queuesActions.ts","actions/queueStatsActions.ts","components/QueueSizeChart.tsx","components/ProcessedTasksChart.tsx","components/DeleteQueueConfirmationDialog.tsx","types/table.ts","components/QueuesOverviewTable.tsx","components/Tooltip.tsx","components/SplitButton.tsx","hooks/index.tsx","components/DailyStatsChart.tsx","views/DashboardView.tsx","reducers/settingsReducer.ts","theme.tsx","actions/snackbarActions.ts","components/ListItemLink.tsx","components/SyntaxHighlighter.tsx","actions/schedulerEntriesActions.ts","reducers/schedulerEntriesReducer.ts","components/SchedulerEnqueueEventsTable.tsx","components/SchedulerEntriesTable.tsx","views/SchedulersView.tsx","components/TableActions.tsx","components/TasksFilterProgressDialog.tsx","components/TasksTable.tsx","components/ActiveTasksTable.tsx","components/PendingTasksTable.tsx","components/ScheduledTasksTable.tsx","components/RetryTasksTable.tsx","components/ArchivedTasksTable.tsx","components/CompletedTasksTable.tsx","actions/groupsActions.ts","components/AggregatingTasksTable.tsx","components/GroupSelect.tsx","components/AggregatingTasksTableContainer.tsx","components/TasksFilterDialog.tsx","components/TasksTableContainer.tsx","components/QueueInfoBanner.tsx","components/QueueBreadcrumb.tsx","views/TasksView.tsx","views/TaskDetailsView.tsx","views/SettingsView.tsx","components/ServersTable.tsx","actions/serversActions.ts","views/ServersView.tsx","actions/redisInfoActions.ts","components/QueueLocationTable.tsx","views/RedisInfoView.tsx","actions/metricsActions.ts","components/QueueMetricsChart.tsx","components/MetricsFetchControls.tsx","views/MetricsView.tsx","views/PageNotFoundView.tsx","images/logo-color.svg","images/logo-white.svg","App.tsx","reducers/queuesReducer.ts","reducers/filterReducer.ts","reducers/tasksReducer.ts","reducers/groupsReducer.ts","reducers/serversReducer.ts","reducers/snackbarReducer.ts","reducers/queueStatsReducer.ts","reducers/redisInfoReducer.ts","reducers/metricsReducer.ts","localStorage.ts","store.ts","serviceWorker.ts","parseFlags.ts","index.tsx","utils.ts"],"names":["getBaseUrl","window","ROOT_PATH","listQueues","a","axios","method","url","resp","data","deleteQueue","qname","pauseQueue","resumeQueue","listQueueStats","listGroups","getTaskInfo","id","listActiveTasks","pageOpts","queryString","stringify","cancelActiveTask","taskId","cancelAllActiveTasks","batchCancelActiveTasks","taskIds","task_ids","listPendingTasks","listScheduledTasks","listRetryTasks","listArchivedTasks","listCompletedTasks","listAggregatingTasks","gname","archivePendingTask","batchArchivePendingTasks","archiveAllPendingTasks","deletePendingTask","batchDeletePendingTasks","deleteAllPendingTasks","deleteAggregatingTask","batchDeleteAggregatingTasks","deleteAllAggregatingTasks","runAggregatingTask","batchRunAggregatingTasks","runAllAggregatingTasks","archiveAggregatingTask","batchArchiveAggregatingTasks","archiveAllAggregatingTasks","runScheduledTask","archiveScheduledTask","deleteScheduledTask","batchDeleteScheduledTasks","deleteAllScheduledTasks","batchRunScheduledTasks","runAllScheduledTasks","batchArchiveScheduledTasks","archiveAllScheduledTasks","runRetryTask","archiveRetryTask","deleteRetryTask","batchDeleteRetryTasks","deleteAllRetryTasks","batchRunRetryTasks","runAllRetryTasks","batchArchiveRetryTasks","archiveAllRetryTasks","runArchivedTask","deleteArchivedTask","batchDeleteArchivedTasks","deleteAllArchivedTasks","batchRunArchivedTasks","runAllArchivedTasks","deleteCompletedTask","batchDeleteCompletedTasks","deleteAllCompletedTasks","listServers","listSchedulerEntries","listSchedulerEnqueueEvents","entryId","getRedisInfo","getMetrics","endTime","duration","queues","params","endtime","length","join","GET_TASK_INFO_BEGIN","GET_TASK_INFO_SUCCESS","GET_TASK_INFO_ERROR","LIST_ACTIVE_TASKS_BEGIN","LIST_ACTIVE_TASKS_SUCCESS","LIST_ACTIVE_TASKS_ERROR","LIST_PENDING_TASKS_BEGIN","LIST_PENDING_TASKS_SUCCESS","LIST_PENDING_TASKS_ERROR","LIST_SCHEDULED_TASKS_BEGIN","LIST_SCHEDULED_TASKS_SUCCESS","LIST_SCHEDULED_TASKS_ERROR","LIST_RETRY_TASKS_BEGIN","LIST_RETRY_TASKS_SUCCESS","LIST_RETRY_TASKS_ERROR","LIST_ARCHIVED_TASKS_BEGIN","LIST_ARCHIVED_TASKS_SUCCESS","LIST_ARCHIVED_TASKS_ERROR","LIST_COMPLETED_TASKS_BEGIN","LIST_COMPLETED_TASKS_SUCCESS","LIST_COMPLETED_TASKS_ERROR","LIST_AGGREGATING_TASKS_BEGIN","LIST_AGGREGATING_TASKS_SUCCESS","LIST_AGGREGATING_TASKS_ERROR","FILTER_TASKS_BEGIN","FILTER_TASKS_PROGRESS","FILTER_TASKS_SUCCESS","FILTER_TASKS_ERROR","FILTER_TASKS_CANCEL","CANCEL_ACTIVE_TASK_BEGIN","CANCEL_ACTIVE_TASK_SUCCESS","CANCEL_ACTIVE_TASK_ERROR","CANCEL_ALL_ACTIVE_TASKS_BEGIN","CANCEL_ALL_ACTIVE_TASKS_SUCCESS","CANCEL_ALL_ACTIVE_TASKS_ERROR","BATCH_CANCEL_ACTIVE_TASKS_BEGIN","BATCH_CANCEL_ACTIVE_TASKS_SUCCESS","BATCH_CANCEL_ACTIVE_TASKS_ERROR","RUN_SCHEDULED_TASK_BEGIN","RUN_SCHEDULED_TASK_SUCCESS","RUN_SCHEDULED_TASK_ERROR","RUN_RETRY_TASK_BEGIN","RUN_RETRY_TASK_SUCCESS","RUN_RETRY_TASK_ERROR","RUN_ARCHIVED_TASK_BEGIN","RUN_ARCHIVED_TASK_SUCCESS","RUN_ARCHIVED_TASK_ERROR","DELETE_PENDING_TASK_BEGIN","DELETE_PENDING_TASK_SUCCESS","DELETE_PENDING_TASK_ERROR","ARCHIVE_PENDING_TASK_BEGIN","ARCHIVE_PENDING_TASK_SUCCESS","ARCHIVE_PENDING_TASK_ERROR","DELETE_SCHEDULED_TASK_BEGIN","DELETE_SCHEDULED_TASK_SUCCESS","DELETE_SCHEDULED_TASK_ERROR","ARCHIVE_SCHEDULED_TASK_BEGIN","ARCHIVE_SCHEDULED_TASK_SUCCESS","ARCHIVE_SCHEDULED_TASK_ERROR","ARCHIVE_RETRY_TASK_BEGIN","ARCHIVE_RETRY_TASK_SUCCESS","ARCHIVE_RETRY_TASK_ERROR","RUN_AGGREGATING_TASK_BEGIN","RUN_AGGREGATING_TASK_SUCCESS","RUN_AGGREGATING_TASK_ERROR","DELETE_AGGREGATING_TASK_BEGIN","DELETE_AGGREGATING_TASK_SUCCESS","DELETE_AGGREGATING_TASK_ERROR","ARCHIVE_AGGREGATING_TASK_BEGIN","ARCHIVE_AGGREGATING_TASK_SUCCESS","ARCHIVE_AGGREGATING_TASK_ERROR","BATCH_ARCHIVE_PENDING_TASKS_BEGIN","BATCH_ARCHIVE_PENDING_TASKS_SUCCESS","BATCH_ARCHIVE_PENDING_TASKS_ERROR","BATCH_DELETE_PENDING_TASKS_BEGIN","BATCH_DELETE_PENDING_TASKS_SUCCESS","BATCH_DELETE_PENDING_TASKS_ERROR","DELETE_ALL_PENDING_TASKS_BEGIN","DELETE_ALL_PENDING_TASKS_SUCCESS","DELETE_ALL_PENDING_TASKS_ERROR","ARCHIVE_ALL_PENDING_TASKS_BEGIN","ARCHIVE_ALL_PENDING_TASKS_SUCCESS","ARCHIVE_ALL_PENDING_TASKS_ERROR","BATCH_RUN_SCHEDULED_TASKS_BEGIN","BATCH_RUN_SCHEDULED_TASKS_SUCCESS","BATCH_RUN_SCHEDULED_TASKS_ERROR","BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN","BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS","BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR","BATCH_DELETE_SCHEDULED_TASKS_BEGIN","BATCH_DELETE_SCHEDULED_TASKS_SUCCESS","BATCH_DELETE_SCHEDULED_TASKS_ERROR","RUN_ALL_SCHEDULED_TASKS_BEGIN","RUN_ALL_SCHEDULED_TASKS_SUCCESS","RUN_ALL_SCHEDULED_TASKS_ERROR","ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN","ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS","ARCHIVE_ALL_SCHEDULED_TASKS_ERROR","DELETE_ALL_SCHEDULED_TASKS_BEGIN","DELETE_ALL_SCHEDULED_TASKS_SUCCESS","DELETE_ALL_SCHEDULED_TASKS_ERROR","DELETE_RETRY_TASK_BEGIN","DELETE_RETRY_TASK_SUCCESS","DELETE_RETRY_TASK_ERROR","BATCH_RUN_RETRY_TASKS_BEGIN","BATCH_RUN_RETRY_TASKS_SUCCESS","BATCH_RUN_RETRY_TASKS_ERROR","BATCH_ARCHIVE_RETRY_TASKS_BEGIN","BATCH_ARCHIVE_RETRY_TASKS_SUCCESS","BATCH_ARCHIVE_RETRY_TASKS_ERROR","BATCH_DELETE_RETRY_TASKS_BEGIN","BATCH_DELETE_RETRY_TASKS_SUCCESS","BATCH_DELETE_RETRY_TASKS_ERROR","RUN_ALL_RETRY_TASKS_BEGIN","RUN_ALL_RETRY_TASKS_SUCCESS","RUN_ALL_RETRY_TASKS_ERROR","ARCHIVE_ALL_RETRY_TASKS_BEGIN","ARCHIVE_ALL_RETRY_TASKS_SUCCESS","ARCHIVE_ALL_RETRY_TASKS_ERROR","DELETE_ALL_RETRY_TASKS_BEGIN","DELETE_ALL_RETRY_TASKS_SUCCESS","DELETE_ALL_RETRY_TASKS_ERROR","DELETE_ARCHIVED_TASK_BEGIN","DELETE_ARCHIVED_TASK_SUCCESS","DELETE_ARCHIVED_TASK_ERROR","BATCH_RUN_ARCHIVED_TASKS_BEGIN","BATCH_RUN_ARCHIVED_TASKS_SUCCESS","BATCH_RUN_ARCHIVED_TASKS_ERROR","BATCH_DELETE_ARCHIVED_TASKS_BEGIN","BATCH_DELETE_ARCHIVED_TASKS_SUCCESS","BATCH_DELETE_ARCHIVED_TASKS_ERROR","RUN_ALL_ARCHIVED_TASKS_BEGIN","RUN_ALL_ARCHIVED_TASKS_SUCCESS","RUN_ALL_ARCHIVED_TASKS_ERROR","DELETE_ALL_ARCHIVED_TASKS_BEGIN","DELETE_ALL_ARCHIVED_TASKS_SUCCESS","DELETE_ALL_ARCHIVED_TASKS_ERROR","DELETE_COMPLETED_TASK_BEGIN","DELETE_COMPLETED_TASK_SUCCESS","DELETE_COMPLETED_TASK_ERROR","DELETE_ALL_COMPLETED_TASKS_BEGIN","DELETE_ALL_COMPLETED_TASKS_SUCCESS","DELETE_ALL_COMPLETED_TASKS_ERROR","BATCH_DELETE_COMPLETED_TASKS_BEGIN","BATCH_DELETE_COMPLETED_TASKS_SUCCESS","BATCH_DELETE_COMPLETED_TASKS_ERROR","BATCH_RUN_AGGREGATING_TASKS_BEGIN","BATCH_RUN_AGGREGATING_TASKS_SUCCESS","BATCH_RUN_AGGREGATING_TASKS_ERROR","BATCH_ARCHIVE_AGGREGATING_TASKS_BEGIN","BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS","BATCH_ARCHIVE_AGGREGATING_TASKS_ERROR","BATCH_DELETE_AGGREGATING_TASKS_BEGIN","BATCH_DELETE_AGGREGATING_TASKS_SUCCESS","BATCH_DELETE_AGGREGATING_TASKS_ERROR","RUN_ALL_AGGREGATING_TASKS_BEGIN","RUN_ALL_AGGREGATING_TASKS_SUCCESS","RUN_ALL_AGGREGATING_TASKS_ERROR","ARCHIVE_ALL_AGGREGATING_TASKS_BEGIN","ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS","ARCHIVE_ALL_AGGREGATING_TASKS_ERROR","DELETE_ALL_AGGREGATING_TASKS_BEGIN","DELETE_ALL_AGGREGATING_TASKS_SUCCESS","DELETE_ALL_AGGREGATING_TASKS_ERROR","getTaskInfoAsync","dispatch","type","response","payload","console","error","toErrorStringWithHttpStatus","toErrorString","getFilterResults","state","filterOp","tasks","done","curQueueStats","find","it","name","size","start","page","end","result","slice","stats","currentStats","listActiveTasksAsync","getState","queue","listPendingTasksAsync","listScheduledTasksAsync","listRetryTasksAsync","listArchivedTasksAsync","listCompletedTasksAsync","listAggregatingTasksAsync","group","parseIfJson","str","JSON","parse","e","evalCustomJsFilter","js","task","start_time","max_retry","retried","last_failed_at","error_message","next_process_at","timeout_seconds","deadline","completed_at","ttl_seconds","is_orphaned","eval","filterTask","filter","payloadQuery","includes","resultQuery","payloadRegex","match","resultRegex","customJs","customJsResult","filterTasksAsync","fetchTasks","processed","finished","filterResults","push","resultLimit","processedTasks","newStats","cancelFilterTasks","cancelActiveTaskAsync","cancelAllActiveTasksAsync","batchCancelActiveTasksAsync","runScheduledTaskAsync","runRetryTaskAsync","archivePendingTaskAsync","archiveScheduledTaskAsync","archiveRetryTaskAsync","runArchivedTaskAsync","deletePendingTaskAsync","batchDeletePendingTasksAsync","deleteScheduledTaskAsync","batchDeleteScheduledTasksAsync","batchRunScheduledTasksAsync","batchArchiveScheduledTasksAsync","batchArchivePendingTasksAsync","deleteAggregatingTaskAsync","runAggregatingTaskAsync","archiveAggregatingTaskAsync","batchArchiveAggregatingTasksAsync","archiveAllPendingTasksAsync","deleteAllPendingTasksAsync","deleted","deleteAllAggregatingTasksAsync","deleteAllScheduledTasksAsync","runAllScheduledTasksAsync","archiveAllScheduledTasksAsync","archiveAllAggregatingTasksAsync","archived","runAllAggregatingTasksAsync","scheduled","deleteRetryTaskAsync","batchDeleteRetryTasksAsync","batchRunRetryTasksAsync","batchRunAggregatingTasksAsync","batchArchiveRetryTasksAsync","deleteAllRetryTasksAsync","runAllRetryTasksAsync","archiveAllRetryTasksAsync","deleteArchivedTaskAsync","batchDeleteArchivedTasksAsync","batchRunArchivedTasksAsync","deleteAllArchivedTasksAsync","runAllArchivedTasksAsync","deleteCompletedTaskAsync","batchDeleteCompletedTasksAsync","batchDeleteAggregatingTasksAsync","deleteAllCompletedTasksAsync","paths","HOME","SETTINGS","SERVERS","SCHEDULERS","QUEUE_DETAILS","REDIS","TASK_DETAILS","QUEUE_METRICS","queueDetailsPath","taskStatus","path","replace","taskDetailsPath","POLL_INTERVAL_CHANGE","THEME_PREFERENCE_CHANGE","TOGGLE_DRAWER","TASK_ROWS_PER_PAGE_CHANGE","DAILY_STATS_KEY_CHANGE","taskRowsPerPageChange","value","useStyles","makeStyles","theme","createStyles","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","rowsPerPage","onPageChange","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","rowsPerPageOptions","LIST_QUEUES_BEGIN","LIST_QUEUES_SUCCESS","LIST_QUEUES_ERROR","DELETE_QUEUE_BEGIN","DELETE_QUEUE_SUCCESS","DELETE_QUEUE_ERROR","PAUSE_QUEUE_BEGIN","PAUSE_QUEUE_SUCCESS","PAUSE_QUEUE_ERROR","RESUME_QUEUE_BEGIN","RESUME_QUEUE_SUCCESS","RESUME_QUEUE_ERROR","listQueuesAsync","deleteQueueAsync","LIST_QUEUE_STATS_BEGIN","LIST_QUEUE_STATS_SUCCESS","LIST_QUEUE_STATS_ERROR","QueueSizeChart","history","useHistory","ResponsiveContainer","maxBarSize","allQueues","map","b","activeLabel","style","cursor","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","palette","text","secondary","YAxis","Tooltip","Legend","Bar","stackId","fill","ProcessedTasksChart","success","light","connector","SortDirection","connect","ownProps","requestPending","q","undefined","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","SortBy","table","minWidth","fixedCell","position","zIndex","left","background","paper","colConfigs","label","key","sortBy","Queue","align","State","Size","MemoryUsage","Latency","Processed","Failed","ErrorRate","None","sortQueues","cmpFn","copy","sort","QueuesOverviewTable","useState","setSortBy","Asc","sortDir","setSortDir","queueToDelete","setQueueToDelete","Fragment","TableContainer","Table","TableHead","TableRow","cfg","READ_ONLY","i","TableCell","clsx","TableSortLabel","active","sortKey","nextSortDir","Desc","TableBody","q1","q2","isQ1Smaller","paused","memory_usage_bytes","latency_msec","failed","q1ErrorRate","q2ErrorRate","Row","onPauseClick","onResumeClick","onDeleteClick","useRowStyles","row","borderBottomWidth","linkText","textDecoration","primary","textGreen","dark","textRed","boldCell","fontWeight","actionIconsContainer","display","justifyContent","showIcons","setShowIcons","component","scope","to","prettyBytes","display_latency","percentage","onMouseEnter","onMouseLeave","title","fontSize","withStyles","tooltip","backgroundColor","maxWidth","typography","pxToRem","border","popper","buttonContained","isDarkTheme","default","action","hover","SplitButton","React","setOpen","anchorRef","useRef","initialSelectedKey","selectedKey","setSelectedKey","handleClose","current","contains","target","selectedOpt","options","opt","ButtonGroup","variant","ref","disableElevation","contained","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","selected","onSelect","usePolling","doFn","interval","useEffect","setInterval","clearInterval","useQuery","search","useLocation","useMemo","URLSearchParams","DailyStatsChart","queueStats","numDays","dataByDate","stat","hasOwnProperty","date","succeeded","Object","values","sortByDate","makeChartData","LineChart","minTickGap","Line","main","x","y","Date","container","paddingTop","paddingBottom","padding","overflow","flexDirection","chartHeader","alignItems","marginBottom","chartHeaderTitle","chartContainer","width","height","infoIcon","grey","tooltipSection","tableContainer","mapDispatchToProps","pauseQueueAsync","resumeQueueAsync","listQueueStatsAsync","dailyStatsKeyChange","ThemePreference","loading","pollInterval","settings","dailyStatsKey","dailyStatsChartType","qnames","processedStats","Container","Grid","item","xs","Alert","severity","AlertTitle","Typography","initialState","themePreference","SystemDefault","isDrawerOpen","taskRowsPerPage","settingsReducer","CLOSE_SNACKBAR","listItem","borderTopRightRadius","borderBottomRightRadius","selectedText","selectedIcon","ListItemLink","icon","isMatch","useRouteMatch","strict","sensitive","exact","renderLink","forwardRef","itemProps","ListItem","button","ListItemIcon","ListItemText","SyntaxHighlighter","styleDark","styleLight","language","customStyle","children","ReactSyntaxHighlighter","registerLanguage","json","LIST_SCHEDULER_ENTRIES_BEGIN","LIST_SCHEDULER_ENTRIES_SUCCESS","LIST_SCHEDULER_ENTRIES_ERROR","LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN","LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS","LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR","getEnqueueEventsEntry","enqueueEventsByEntryId","schedulerEntriesReducer","entries","entry","sortByEnqueuedAt","e1","e2","enqueued_at","newData","uniqBy","events","stickyHeaderCell","schedulerEntries","listSchedulerEnqueueEventsAsync","stickyHeader","timeAgo","task_id","noBorder","modal","modalContent","outline","borderRadius","shape","eventsTable","maxHeight","EntryId","Spec","Type","Payload","Options","NextEnqueue","PrevEnqueue","sortEntries","SchedulerEntriesTable","activeEntryId","setActiveEntryId","isE1Smaller","spec","task_type","task_payload","next_enqueue_at","e1PrevEnqueueAt","prev_enqueue_at","e2PrevEnqueueAt","idx","isLastRow","onShowHistoryClick","Modal","gutterBottom","rowRoot","borderBottom","prettifyPayload","durationBefore","heading","paddingLeft","listSchedulerEntriesAsync","actionsContainer","moreIcon","marginRight","iconGroup","borderLeft","TableActions","menuAnchor","setMenuAnchor","closeMenu","currentTarget","keepMounted","Boolean","menuItemActions","showIconButtons","iconButtonActions","matches","progress","totalTasks","fullWidth","LinearProgress","filterEnabled","alert","borderTopLeftRadius","pagination","boxShadow","shadows","borderBottomColor","actionCell","actionButton","idCell","copyButton","IdGroup","listTasks","pageSize","setPage","selectedIds","setSelectedIds","activeTaskId","setActiveTaskId","lastFilterEnabled","setLastFilterEnabled","createAllActionHandler","createBatchActionHandler","then","createSingleActionHandler","allActions","deleteAllTasks","allActionPending","archiveAllTasks","runAllTasks","cancelAllTasks","batchActions","batchDeleteTasks","batchActionPending","batchArchiveTasks","batchRunTasks","batchCancelTasks","fetchData","useCallback","taskState","rowCount","numSelected","Checkbox","indeterminate","checked","onChange","newSelected","t","inputProps","columns","col","renderRow","isSelected","onSelectChange","concat","onRunClick","runTask","deleteTask","onArchiveClick","archiveTask","onCancelClick","cancelTask","onActionCellEnter","onActionCellLeave","showActions","TableFooter","TablePagination","colSpan","totalTaskCount","SelectProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","TasksFilterProgressDialog","stopPropagation","uuidPrefix","navigator","clipboard","writeText","margin","canceling","activeTasks","rowProps","pendingTasks","scheduledTasks","retryTasks","archivedTasks","completedTasks","stringifyDuration","durationFromSeconds","LIST_GROUPS_BEGIN","LIST_GROUPS_SUCCESS","LIST_GROUPS_ERROR","groups","groupsError","aggregatingTasks","pgn","selectedGroup","groupSelectOption","groupSize","textAlign","inputRoot","GroupSelect","inputValue","setInputValue","Autocomplete","newValue","onInputChange","newInputValue","disableListWrap","ListboxComponent","getOptionLabel","option","renderOption","renderInput","TextField","index","cloneElement","top","OuterElementContext","createContext","OuterElementType","outerProps","useContext","other","itemData","Children","toArray","smUp","useMediaQuery","breakpoints","up","noSsr","itemCount","itemSize","getChildSize","child","isValidElement","ListSubheader","gridRef","resetAfterIndex","useResetCache","Provider","reduce","outerElementType","innerElementType","overscanCount","groupSelector","paddingRight","listGroupsAsync","setSelectedGroup","TasksFilterDialog","setCustomJs","setPayloadQuery","setResultQuery","setPayloadRegex","setResultRegex","resultLimitStr","setResultLimitStr","setResultLimit","resultLimitError","setResultLimitError","handleRunFilter","trim","RegExp","buildFilter","onFilter","handleKeyDown","marginTop","placeholder","onKeyDown","multiline","minRows","trimmedValue","parsed","isNaN","helperText","TabPanel","hidden","flex","overflowY","queueInfo","pending","aggregating","retry","completed","timestamp","filterActive","filterCount","header","chip","taskcount","searchbar","searchIcon","pointerEvents","inputInput","chips","fetcher","searchQuery","setSearchQuery","filterModalOpen","setFilterModalOpen","c","Chip","Divider","orientation","flexItem","onDelete","fetcherApi","taskPageFetcher","InputBase","input","banner","bannerItem","flexGrow","divider","StyledBreadcrumb","emphasize","QueueBreadcrumbs","setAnchorEl","getPaths","handleClick","preventDefault","Breadcrumbs","Link","queueName","deleteIcon","breadcrumbs","tasksTable","validStatus","useParams","get","taskInfo","infoRow","infoKeyCell","infoValueCell","footer","md","startIcon","goBack","formControl","selectEmpty","select","pollIntervalChange","selectTheme","sliderValue","setSliderValue","justify","Slider","val","onChangeCommitted","valueLabelDisplay","step","marks","min","Select","labelId","Always","Never","HostPID","Started","Status","Queues","ActiveWorkers","sortServerInfos","ServersTable","servers","s1","s2","isS1Smaller","host","pid","s1StartTime","s2StartTime","status","s1Queues","keys","queue_priorities","s2Queues","active_workers","srv","server","link","concurrency","Collapse","in","timeout","unmountOnExit","worker","Box","strict_priority_enabled","LIST_SERVERS_BEGIN","LIST_SERVERS_SUCCESS","LIST_SERVERS_ERROR","listServersAsync","GET_REDIS_INFO_BEGIN","GET_REDIS_INFO_SUCCESS","GET_REDIS_INFO_ERROR","QueueLocationTable","queueLocations","loc","keyslot","nodes","RedisMetricCards","redisInfo","MetricCard","content","redis_version","uptime_in_days","used_memory_human","used_memory_peak_human","mem_fragmentation_ratio","connected_clients","connected_slaves","timeAgoUnix","rdb_last_save_time","rdb_changes_since_last_save","Card","CardContent","redis","redisAddress","address","redisInfoRaw","rawData","redisClusterEnabled","cluster","redisClusterNodesRaw","rawClusterNodes","getRedisInfoAsync","href","GET_METRICS_BEGIN","GET_METRICS_SUCCESS","GET_METRICS_ERROR","lineColors","QueueMetricsChart","metrics","byTimestamp","ts","metric","parseFloat","toChartData","domain","startTime","tickFormatter","toLocaleTimeString","scale","yAxisTickFormatter","labelFormatter","dot","defaultProps","toString","mapStateToProps","endTimeCaption","shiftButtons","buttonGroupRoot","endTimeShiftControls","borderBottomStyle","leftShiftButtons","rightShiftButtons","controlsContainer","controlSelectorBox","controlEndTimeSelector","controlDurationSelector","radioButtonRoot","formControlLabel","buttonLabel","textTransform","formControlRoot","formLabel","customInputField","filterButton","queueFilters","checkbox","day","formatTime","unixtime","tz","timeZoneName","split","dayjs","unix","format","RadioInput","FormControlLabel","control","Radio","useShiftButtonStyles","dense","iconRoot","ShiftButton","endTimeSec","durationSec","endTimeOption","customEndTime","durationOption","customDuration","now","currentUnixtime","toISOString","customEndTimeError","customDurationError","getInitialState","setState","timePopoverAnchorElem","setTimePopoverAnchorElem","queuePopoverAnchorElem","setQueuePopoverAnchorElem","isTimePopoverOpen","isQueuePopoverOpen","onEndTimeChange","shiftBy","deltaSec","prevState","Popover","anchorOrigin","vertical","horizontal","FormLabel","RadioGroup","persist","timeUsecOrNaN","floor","isEndTimeFixed","onDurationChange","d","parseDuration","FormGroup","selectedQueues","removeQueue","addQueue","appBar","right","chartInfo","errorMessage","warningIcon","getMetricsAsync","ENDTIME_URL_PARAM_KEY","DURATION_URL_PARAM_KEY","query","endTimeStr","durationStr","setEndTimeSec","setDurationSec","setSelectedQueues","urlQuery","location","tasks_processed_per_second","ChartRow","description","tasks_failed_per_second","error_rate","queue_size","queue_latency_seconds","queue_memory_usage_approx_bytes","pending_tasks_by_queue","retry_tasks_by_queue","archived_tasks_by_queue","headingText","PageNotFoundView","_extends","assign","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogoColor","_ref","svgRef","titleId","viewBox","xmlns","ForwardRef","SvgLogoWhite","closeSnackbar","toggleDrawer","SlideUpTransition","Slide","snackbar","prefersDarkMode","createTheme","toolbar","toolbarIcon","mixins","drawer","menuButton","menuButtonHidden","drawerPaper","whiteSpace","transitions","create","easing","sharp","enteringScreen","drawerPaperClose","overflowX","leavingScreen","snackbarCloseIcon","appBarSpacer","mainContainer","contentWrapper","sidebarContainer","ThemeProvider","AppBar","Toolbar","edge","Drawer","Snackbar","isOpen","autoHideDuration","TransitionComponent","SnackbarContent","message","List","PROMETHEUS_SERVER_ADDRESS","queuesReducer","archived_ids","deleted_ids","pending_ids","modifyFilterResults","filterReducer","tasksReducer","canceled_ids","error_ids","groupsReducer","snackbarReducer","n","isSameDate","ts1","ts2","date1","date2","getUTCDate","getUTCMonth","getUTCFullYear","LOCAL_STORAGE_KEY","rootReducer","combineReducers","info","raw_info","raw_cluster_nodes","queue_locations","preloadedState","serializedState","localStorage","getItem","savedState","settingsInitialState","err","log","loadState","store","configureStore","reducer","middleware","getDefaultMiddleware","immutableCheck","ignoredPaths","serializableCheck","hostname","FLAG_ROOT_PATH","FLAG_PROMETHEUS_SERVER_ADDRESS","startsWith","FLAG_READ_ONLY","currentSettings","subscribe","setItem","saveState","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister","catch","statusText","totalSeconds","hour","minute","second","durationBetween","durationInMillisec","uuid","substr","numerator","denominator","perc","toFixed","p","isJsonPayload","durationRegex","s","test","Error"],"mappings":"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","file":"static/js/main.15ffbd5c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\n\n// In production build, API server is on listening on the same port as\n// the static file server.\n// In developement, we assume that the API server is listening on port 8080.\nconst getBaseUrl = () =>\n  process.env.NODE_ENV === \"production\"\n    ? `${window.ROOT_PATH}/api`\n    : `http://localhost:8080${window.ROOT_PATH}/api`;\n\nexport interface ListQueuesResponse {\n  queues: Queue[];\n}\n\nexport interface ListTasksResponse {\n  tasks: TaskInfo[];\n  stats: Queue;\n}\n\nexport interface ListAggregatingTasksResponse {\n  tasks: TaskInfo[];\n  stats: Queue;\n  groups: GroupInfo[];\n}\n\nexport interface ListServersResponse {\n  servers: ServerInfo[];\n}\n\nexport interface ListSchedulerEntriesResponse {\n  entries: SchedulerEntry[];\n}\n\nexport interface ListSchedulerEnqueueEventsResponse {\n  events: SchedulerEnqueueEvent[];\n}\n\nexport interface BatchCancelTasksResponse {\n  canceled_ids: string[];\n  error_ids: string[];\n}\n\nexport interface BatchDeleteTasksResponse {\n  deleted_ids: string[];\n  failed_ids: string[];\n}\n\nexport interface BatchRunTasksResponse {\n  pending_ids: string[];\n  error_ids: string[];\n}\n\nexport interface BatchArchiveTasksResponse {\n  archived_ids: string[];\n  error_ids: string[];\n}\n\nexport interface DeleteAllTasksResponse {\n  deleted: number;\n}\n\nexport interface ArchiveAllTasksResponse {\n  archived: number;\n}\n\nexport interface RunAllTasksResponse {\n  scheduled: number;\n}\n\nexport interface ListQueueStatsResponse {\n  stats: { [qname: string]: DailyStat[] };\n}\n\nexport interface ListGroupsResponse {\n  stats: Queue;\n  groups: GroupInfo[];\n}\n\nexport interface RedisInfoResponse {\n  address: string;\n  info: RedisInfo;\n  raw_info: string;\n  cluster: boolean;\n\n  // following fields are set only when cluster=true\n  raw_cluster_nodes: string;\n  queue_locations: QueueLocation[] | null;\n}\n\n// Describes location of a queue in cluster.\nexport interface QueueLocation {\n  queue: string; // queue name\n  keyslot: number; // cluster keyslot\n  nodes: string[]; // node addresses\n}\n\nexport interface MetricsResponse {\n  queue_size: PrometheusMetricsResponse;\n  queue_latency_seconds: PrometheusMetricsResponse;\n  queue_memory_usage_approx_bytes: PrometheusMetricsResponse;\n  tasks_processed_per_second: PrometheusMetricsResponse;\n  tasks_failed_per_second: PrometheusMetricsResponse;\n  error_rate: PrometheusMetricsResponse;\n  pending_tasks_by_queue: PrometheusMetricsResponse;\n  retry_tasks_by_queue: PrometheusMetricsResponse;\n  archived_tasks_by_queue: PrometheusMetricsResponse;\n}\n\nexport interface PrometheusMetricsResponse {\n  status: \"success\" | \"error\";\n  data?: MetricsResult; // present if status === \"success\"\n  error?: string; // present if status === \"error\"\n  errorType?: string; // present if status === \"error\"\n}\n\nexport interface MetricsResult {\n  resultType: string;\n  result: Metrics[];\n}\n\nexport interface Metrics {\n  metric: MetricsInfo;\n  values: [number, string][]; // [unixtime, value]\n}\n\nexport interface MetricsInfo {\n  __name__: string;\n  instance: string;\n  job: string;\n\n  // labels (may or may not be present depending on metrics)\n  queue?: string;\n  state?: string;\n}\n\n// Return value from redis INFO command.\n// See https://redis.io/commands/info#return-value.\nexport interface RedisInfo {\n  active_defrag_hits: string;\n  active_defrag_key_hits: string;\n  active_defrag_key_misses: string;\n  active_defrag_misses: string;\n  active_defrag_running: string;\n  allocator_active: string;\n  allocator_allocated: string;\n  allocator_frag_bytes: string;\n  allocator_frag_ratio: string;\n  allocator_resident: string;\n  allocator_rss_bytes: string;\n  allocator_rss_ratio: string;\n  aof_current_rewrite_time_sec: string;\n  aof_enabled: string;\n  aof_last_bgrewrite_status: string;\n  aof_last_cow_size: string;\n  aof_last_rewrite_time_sec: string;\n  aof_last_write_status: string;\n  aof_rewrite_in_progress: string;\n  aof_rewrite_scheduled: string;\n  arch_bits: string;\n  atomicvar_api: string;\n  blocked_clients: string;\n  client_recent_max_input_buffer: string;\n  client_recent_max_output_buffer: string;\n  clients_in_timeout_table: string;\n  cluster_enabled: string;\n  config_file: string;\n  configured_hz: string;\n  connected_clients: string;\n  connected_slaves: string;\n  evicted_keys: string;\n  executable: string;\n  expire_cycle_cpu_milliseconds: string;\n  expired_keys: string;\n  expired_stale_perc: string;\n  expired_time_cap_reached_count: string;\n  gcc_version: string;\n  hz: string;\n  instantaneous_input_kbps: string;\n  instantaneous_ops_per_sec: string;\n  instantaneous_output_kbps: string;\n  keyspace_hits: string;\n  keyspace_misses: string;\n  latest_fork_usec: string;\n  lazyfree_pending_objects: string;\n  loading: string;\n  lru_clock: string;\n  master_repl_offset: string;\n  master_replid: string;\n  master_replid2: string;\n  maxmemory: string;\n  maxmemory_human: string;\n  maxmemory_policy: string;\n  mem_allocator: string;\n  mem_aof_buffer: string;\n  mem_clients_normal: string;\n  mem_clients_slaves: string;\n  mem_fragmentation_bytes: string;\n  mem_fragmentation_ratio: string;\n  mem_not_counted_for_evict: string;\n  mem_replication_backlog: string;\n  migrate_cached_sockets: string;\n  module_fork_in_progress: string;\n  module_fork_last_cow_size: string;\n  multiplexing_api: string;\n  number_of_cached_scripts: string;\n  os: string;\n  process_id: string;\n  pubsub_channels: string;\n  pubsub_patterns: string;\n  rdb_bgsave_in_progress: string;\n  rdb_changes_since_last_save: string;\n  rdb_current_bgsave_time_sec: string;\n  rdb_last_bgsave_status: string;\n  rdb_last_bgsave_time_sec: string;\n  rdb_last_cow_size: string;\n  rdb_last_save_time: string;\n  redis_build_id: string;\n  redis_git_dirty: string;\n  redis_git_sha1: string;\n  redis_mode: string;\n  redis_version: string;\n  rejected_connections: string;\n  repl_backlog_active: string;\n  repl_backlog_first_byte_offset: string;\n  repl_backlog_histlen: string;\n  repl_backlog_size: string;\n  role: string;\n  rss_overhead_bytes: string;\n  rss_overhead_ratio: string;\n  run_id: string;\n  second_repl_offset: string;\n  slave_expires_tracked_keys: string;\n  sync_full: string;\n  sync_partial_err: string;\n  sync_partial_ok: string;\n  tcp_port: string;\n  total_commands_processed: string;\n  total_connections_received: string;\n  total_net_input_bytes: string;\n  total_net_output_bytes: string;\n  total_system_memory: string;\n  total_system_memory_human: string;\n  tracking_clients: string;\n  tracking_total_items: string;\n  tracking_total_keys: string;\n  tracking_total_prefixes: string;\n  unexpected_error_replies: string;\n  uptime_in_days: string;\n  uptime_in_seconds: string;\n  used_cpu_sys: string;\n  used_cpu_sys_children: string;\n  used_cpu_user: string;\n  used_cpu_user_children: string;\n  used_memory: string;\n  used_memory_dataset: string;\n  used_memory_dataset_perc: string;\n  used_memory_human: string;\n  used_memory_lua: string;\n  used_memory_lua_human: string;\n  used_memory_overhead: string;\n  used_memory_peak: string;\n  used_memory_peak_human: string;\n  used_memory_peak_perc: string;\n  used_memory_rss: string;\n  used_memory_rss_human: string;\n  used_memory_scripts: string;\n  used_memory_scripts_human: string;\n  used_memory_startup: string;\n}\n\nexport interface GroupInfo {\n  group: string;\n  size: number;\n}\n\nexport interface Queue {\n  queue: string;\n  paused: boolean;\n  size: number;\n  groups: number;\n  latency_msec: number;\n  display_latency: string;\n  memory_usage_bytes: number;\n  active: number;\n  pending: number;\n  aggregating: number;\n  scheduled: number;\n  retry: number;\n  archived: number;\n  completed: number;\n  processed: number;\n  failed: number;\n  timestamp: string;\n}\n\nexport interface DailyStat {\n  queue: string;\n  date: string;\n  processed: number;\n  failed: number;\n}\n\nexport interface TaskInfo {\n  id: string;\n  queue: string;\n  type: string;\n  payload: string;\n  state: string;\n  start_time: string; // Only applies to task.state == 'active'\n  max_retry: number;\n  retried: number;\n  last_failed_at: string;\n  error_message: string;\n  next_process_at: string;\n  timeout_seconds: number;\n  deadline: string;\n  group: string;\n  completed_at: string;\n  result: string;\n  ttl_seconds: number;\n  is_orphaned: boolean; // Only applies to task.state == 'active'\n}\n\nexport interface ServerInfo {\n  id: string;\n  host: string;\n  pid: number;\n  concurrency: number;\n  queue_priorities: { [qname: string]: number };\n  strict_priority_enabled: boolean;\n  start_time: string;\n  status: string;\n  active_workers: WorkerInfo[];\n}\n\nexport interface WorkerInfo {\n  task_id: string;\n  queue: string;\n  task_type: string;\n  task_payload: string;\n  start_time: string;\n}\n\nexport interface SchedulerEntry {\n  id: string;\n  spec: string;\n  task_type: string;\n  task_payload: string;\n  options: string[];\n  next_enqueue_at: string;\n  // prev_enqueue_at will be omitted\n  // if there were no previous enqueue events.\n  prev_enqueue_at?: string;\n}\n\nexport interface SchedulerEnqueueEvent {\n  task_id: string;\n  enqueued_at: string;\n}\n\nexport interface PaginationOptions extends Record<string, number | undefined> {\n  size?: number; // size of the page\n  page?: number; // page number (1 being the first page)\n}\n\nexport async function listQueues(): Promise<ListQueuesResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/queues`,\n  });\n  return resp.data;\n}\n\nexport async function deleteQueue(qname: string): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}`,\n  });\n}\n\nexport async function pauseQueue(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}:pause`,\n  });\n}\n\nexport async function resumeQueue(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}:resume`,\n  });\n}\n\nexport async function listQueueStats(): Promise<ListQueueStatsResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/queue_stats`,\n  });\n  return resp.data;\n}\n\nexport async function listGroups(qname: string): Promise<ListGroupsResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/queues/${qname}/groups`,\n  });\n  return resp.data;\n}\n\nexport async function getTaskInfo(\n  qname: string,\n  id: string\n): Promise<TaskInfo> {\n  const url = `${getBaseUrl()}/queues/${qname}/tasks/${id}`;\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listActiveTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/active_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function cancelActiveTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/active_tasks/${taskId}:cancel`,\n  });\n}\n\nexport async function cancelAllActiveTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/active_tasks:cancel_all`,\n  });\n}\n\nexport async function batchCancelActiveTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchCancelTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/active_tasks:batch_cancel`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function listPendingTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/pending_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listScheduledTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/scheduled_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listRetryTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/retry_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listArchivedTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/archived_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listCompletedTasks(\n  qname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/completed_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function listAggregatingTasks(\n  qname: string,\n  gname: string,\n  pageOpts?: PaginationOptions\n): Promise<ListAggregatingTasksResponse> {\n  let url = `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks`;\n  if (pageOpts) {\n    url += `?${queryString.stringify(pageOpts)}`;\n  }\n  const resp = await axios({\n    method: \"get\",\n    url,\n  });\n  return resp.data;\n}\n\nexport async function archivePendingTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks/${taskId}:archive`,\n  });\n}\n\nexport async function batchArchivePendingTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchArchiveTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:batch_archive`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function archiveAllPendingTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:archive_all`,\n  });\n}\n\nexport async function deletePendingTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeletePendingTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllPendingTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/pending_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function deleteAggregatingTask(\n  qname: string,\n  gname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteAggregatingTasks(\n  qname: string,\n  gname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllAggregatingTasks(\n  qname: string,\n  gname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function runAggregatingTask(\n  qname: string,\n  gname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks/${taskId}:run`,\n  });\n}\n\nexport async function batchRunAggregatingTasks(\n  qname: string,\n  gname: string,\n  taskIds: string[]\n): Promise<BatchRunTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks:batch_run`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function runAllAggregatingTasks(\n  qname: string,\n  gname: string\n): Promise<RunAllTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks:run_all`,\n  });\n  return resp.data;\n}\n\nexport async function archiveAggregatingTask(\n  qname: string,\n  gname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks/${taskId}:archive`,\n  });\n}\n\nexport async function batchArchiveAggregatingTasks(\n  qname: string,\n  gname: string,\n  taskIds: string[]\n): Promise<BatchArchiveTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks:batch_archive`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function archiveAllAggregatingTasks(\n  qname: string,\n  gname: string\n): Promise<ArchiveAllTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/groups/${gname}/aggregating_tasks:archive_all`,\n  });\n  return resp.data;\n}\n\nexport async function runScheduledTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks/${taskId}:run`,\n  });\n}\n\nexport async function archiveScheduledTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks/${taskId}:archive`,\n  });\n}\n\nexport async function deleteScheduledTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteScheduledTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllScheduledTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function batchRunScheduledTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchRunTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:batch_run`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function runAllScheduledTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:run_all`,\n  });\n}\n\nexport async function batchArchiveScheduledTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchArchiveTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:batch_archive`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function archiveAllScheduledTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/scheduled_tasks:archive_all`,\n  });\n}\n\nexport async function runRetryTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks/${taskId}:run`,\n  });\n}\n\nexport async function archiveRetryTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks/${taskId}:archive`,\n  });\n}\n\nexport async function deleteRetryTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteRetryTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllRetryTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function batchRunRetryTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchRunTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:batch_run`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function runAllRetryTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:run_all`,\n  });\n}\n\nexport async function batchArchiveRetryTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchArchiveTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:batch_archive`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function archiveAllRetryTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/retry_tasks:archive_all`,\n  });\n}\n\nexport async function runArchivedTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks/${taskId}:run`,\n  });\n}\n\nexport async function deleteArchivedTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteArchivedTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllArchivedTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function batchRunArchivedTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchRunTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:batch_run`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function runAllArchivedTasks(qname: string): Promise<void> {\n  await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/archived_tasks:run_all`,\n  });\n}\n\nexport async function deleteCompletedTask(\n  qname: string,\n  taskId: string\n): Promise<void> {\n  await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/completed_tasks/${taskId}`,\n  });\n}\n\nexport async function batchDeleteCompletedTasks(\n  qname: string,\n  taskIds: string[]\n): Promise<BatchDeleteTasksResponse> {\n  const resp = await axios({\n    method: \"post\",\n    url: `${getBaseUrl()}/queues/${qname}/completed_tasks:batch_delete`,\n    data: {\n      task_ids: taskIds,\n    },\n  });\n  return resp.data;\n}\n\nexport async function deleteAllCompletedTasks(\n  qname: string\n): Promise<DeleteAllTasksResponse> {\n  const resp = await axios({\n    method: \"delete\",\n    url: `${getBaseUrl()}/queues/${qname}/completed_tasks:delete_all`,\n  });\n  return resp.data;\n}\n\nexport async function listServers(): Promise<ListServersResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/servers`,\n  });\n  return resp.data;\n}\n\nexport async function listSchedulerEntries(): Promise<ListSchedulerEntriesResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/scheduler_entries`,\n  });\n  return resp.data;\n}\n\nexport async function listSchedulerEnqueueEvents(\n  entryId: string\n): Promise<ListSchedulerEnqueueEventsResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/scheduler_entries/${entryId}/enqueue_events`,\n  });\n  return resp.data;\n}\n\nexport async function getRedisInfo(): Promise<RedisInfoResponse> {\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/redis_info`,\n  });\n  return resp.data;\n}\n\ninterface MetricsEndpointParams {\n  endtime: number;\n  duration: number;\n  queues?: string; // comma-separated list of queues\n}\n\nexport async function getMetrics(\n  endTime: number,\n  duration: number,\n  queues: string[]\n): Promise<MetricsResponse> {\n  let params: MetricsEndpointParams = {\n    endtime: endTime,\n    duration: duration,\n  };\n  if (queues && queues.length > 0) {\n    params.queues = queues.join(\",\");\n  }\n  const resp = await axios({\n    method: \"get\",\n    url: `${getBaseUrl()}/metrics?${queryString.stringify(params)}`,\n  });\n  return resp.data;\n}\n","import {\n  batchCancelActiveTasks,\n  BatchCancelTasksResponse,\n  batchDeleteArchivedTasks,\n  batchDeleteRetryTasks,\n  batchDeleteScheduledTasks,\n  batchDeleteCompletedTasks,\n  BatchDeleteTasksResponse,\n  batchArchiveRetryTasks,\n  batchArchiveScheduledTasks,\n  BatchArchiveTasksResponse,\n  batchRunArchivedTasks,\n  batchRunRetryTasks,\n  batchRunScheduledTasks,\n  BatchRunTasksResponse,\n  cancelActiveTask,\n  cancelAllActiveTasks,\n  deleteAllArchivedTasks,\n  deleteAllRetryTasks,\n  deleteAllScheduledTasks,\n  deleteAllCompletedTasks,\n  deleteArchivedTask,\n  deleteRetryTask,\n  deleteScheduledTask,\n  deleteCompletedTask,\n  archiveAllRetryTasks,\n  archiveAllScheduledTasks,\n  archiveRetryTask,\n  archiveScheduledTask,\n  listActiveTasks,\n  listArchivedTasks,\n  listPendingTasks,\n  ListTasksResponse,\n  listRetryTasks,\n  listScheduledTasks,\n  listCompletedTasks,\n  listAggregatingTasks,\n  PaginationOptions,\n  runAllArchivedTasks,\n  runAllRetryTasks,\n  runAllScheduledTasks,\n  runArchivedTask,\n  runRetryTask,\n  runScheduledTask,\n  deletePendingTask,\n  batchDeletePendingTasks,\n  deleteAllPendingTasks,\n  archivePendingTask,\n  batchArchivePendingTasks,\n  archiveAllPendingTasks,\n  TaskInfo,\n  getTaskInfo,\n  deleteAllAggregatingTasks,\n  archiveAllAggregatingTasks,\n  runAllAggregatingTasks,\n  batchDeleteAggregatingTasks,\n  batchArchiveAggregatingTasks,\n  batchRunAggregatingTasks,\n  deleteAggregatingTask,\n  runAggregatingTask,\n  archiveAggregatingTask,\n  ListAggregatingTasksResponse,\n  Queue,\n} from \"../api\";\nimport { Dispatch } from \"redux\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\nimport { AppState } from \"../store\";\n\n// List of tasks related action types.\nexport const GET_TASK_INFO_BEGIN = \"GET_TASK_INFO_BEGIN\";\nexport const GET_TASK_INFO_SUCCESS = \"GET_TASK_INFO_SUCCESS\";\nexport const GET_TASK_INFO_ERROR = \"GET_TASK_INFO_ERROR\";\nexport const LIST_ACTIVE_TASKS_BEGIN = \"LIST_ACTIVE_TASKS_BEGIN\";\nexport const LIST_ACTIVE_TASKS_SUCCESS = \"LIST_ACTIVE_TASKS_SUCCESS\";\nexport const LIST_ACTIVE_TASKS_ERROR = \"LIST_ACTIVE_TASKS_ERROR\";\nexport const LIST_PENDING_TASKS_BEGIN = \"LIST_PENDING_TASKS_BEGIN\";\nexport const LIST_PENDING_TASKS_SUCCESS = \"LIST_PENDING_TASKS_SUCCESS\";\nexport const LIST_PENDING_TASKS_ERROR = \"LIST_PENDING_TASKS_ERROR\";\nexport const LIST_SCHEDULED_TASKS_BEGIN = \"LIST_SCHEDULED_TASKS_BEGIN\";\nexport const LIST_SCHEDULED_TASKS_SUCCESS = \"LIST_SCHEDULED_TASKS_SUCCESS\";\nexport const LIST_SCHEDULED_TASKS_ERROR = \"LIST_SCHEDULED_TASKS_ERROR\";\nexport const LIST_RETRY_TASKS_BEGIN = \"LIST_RETRY_TASKS_BEGIN\";\nexport const LIST_RETRY_TASKS_SUCCESS = \"LIST_RETRY_TASKS_SUCCESS\";\nexport const LIST_RETRY_TASKS_ERROR = \"LIST_RETRY_TASKS_ERROR\";\nexport const LIST_ARCHIVED_TASKS_BEGIN = \"LIST_ARCHIVED_TASKS_BEGIN\";\nexport const LIST_ARCHIVED_TASKS_SUCCESS = \"LIST_ARCHIVED_TASKS_SUCCESS\";\nexport const LIST_ARCHIVED_TASKS_ERROR = \"LIST_ARCHIVED_TASKS_ERROR\";\nexport const LIST_COMPLETED_TASKS_BEGIN = \"LIST_COMPLETED_TASKS_BEGIN\";\nexport const LIST_COMPLETED_TASKS_SUCCESS = \"LIST_COMPLETED_TASKS_SUCCESS\";\nexport const LIST_COMPLETED_TASKS_ERROR = \"LIST_COMPLETED_TASKS_ERROR\";\nexport const LIST_AGGREGATING_TASKS_BEGIN = \"LIST_AGGREGATING_TASKS_BEGIN\";\nexport const LIST_AGGREGATING_TASKS_SUCCESS = \"LIST_AGGREGATING_TASKS_SUCCESS\";\nexport const LIST_AGGREGATING_TASKS_ERROR = \"LIST_AGGREGATING_TASKS_ERROR\";\nexport const FILTER_TASKS_BEGIN = \"FILTER_TASKS_BEGIN\";\nexport const FILTER_TASKS_PROGRESS = \"FILTER_TASKS_PROGRESS\";\nexport const FILTER_TASKS_SUCCESS = \"FILTER_TASKS_SUCCESS\";\nexport const FILTER_TASKS_ERROR = \"FILTER_TASKS_ERROR\";\nexport const FILTER_TASKS_CANCEL = \"FILTER_TASKS_CANCEL\";\nexport const CANCEL_ACTIVE_TASK_BEGIN = \"CANCEL_ACTIVE_TASK_BEGIN\";\nexport const CANCEL_ACTIVE_TASK_SUCCESS = \"CANCEL_ACTIVE_TASK_SUCCESS\";\nexport const CANCEL_ACTIVE_TASK_ERROR = \"CANCEL_ACTIVE_TASK_ERROR\";\nexport const CANCEL_ALL_ACTIVE_TASKS_BEGIN = \"CANCEL_ALL_ACTIVE_TASKS_BEGIN\";\nexport const CANCEL_ALL_ACTIVE_TASKS_SUCCESS =\n  \"CANCEL_ALL_ACTIVE_TASKS_SUCCESS\";\nexport const CANCEL_ALL_ACTIVE_TASKS_ERROR = \"CANCEL_ALL_ACTIVE_TASKS_ERROR\";\nexport const BATCH_CANCEL_ACTIVE_TASKS_BEGIN =\n  \"BATCH_CANCEL_ACTIVE_TASKS_BEGIN\";\nexport const BATCH_CANCEL_ACTIVE_TASKS_SUCCESS =\n  \"BATCH_CANCEL_ACTIVE_TASKS_SUCCESS\";\nexport const BATCH_CANCEL_ACTIVE_TASKS_ERROR =\n  \"BATCH_CANCEL_ACTIVE_TASKS_ERROR\";\nexport const RUN_SCHEDULED_TASK_BEGIN = \"RUN_SCHEDULED_TASK_BEGIN\";\nexport const RUN_SCHEDULED_TASK_SUCCESS = \"RUN_SCHEDULED_TASK_SUCCESS\";\nexport const RUN_SCHEDULED_TASK_ERROR = \"RUN_SCHEDULED_TASK_ERROR\";\nexport const RUN_RETRY_TASK_BEGIN = \"RUN_RETRY_TASK_BEGIN\";\nexport const RUN_RETRY_TASK_SUCCESS = \"RUN_RETRY_TASK_SUCCESS\";\nexport const RUN_RETRY_TASK_ERROR = \"RUN_RETRY_TASK_ERROR\";\nexport const RUN_ARCHIVED_TASK_BEGIN = \"RUN_ARCHIVED_TASK_BEGIN\";\nexport const RUN_ARCHIVED_TASK_SUCCESS = \"RUN_ARCHIVED_TASK_SUCCESS\";\nexport const RUN_ARCHIVED_TASK_ERROR = \"RUN_ARCHIVED_TASK_ERROR\";\nexport const DELETE_PENDING_TASK_BEGIN = \"DELETE_PENDING_TASK_BEGIN\";\nexport const DELETE_PENDING_TASK_SUCCESS = \"DELETE_PENDING_TASK_SUCCESS\";\nexport const DELETE_PENDING_TASK_ERROR = \"DELETE_PENDING_TASK_ERROR\";\nexport const ARCHIVE_PENDING_TASK_BEGIN = \"ARCHIVE_PENDING_TASK_BEGIN\";\nexport const ARCHIVE_PENDING_TASK_SUCCESS = \"ARCHIVE_PENDING_TASK_SUCCESS\";\nexport const ARCHIVE_PENDING_TASK_ERROR = \"ARCHIVE_PENDING_TASK_ERROR\";\nexport const DELETE_SCHEDULED_TASK_BEGIN = \"DELETE_SCHEDULED_TASK_BEGIN\";\nexport const DELETE_SCHEDULED_TASK_SUCCESS = \"DELETE_SCHEDULED_TASK_SUCCESS\";\nexport const DELETE_SCHEDULED_TASK_ERROR = \"DELETE_SCHEDULED_TASK_ERROR\";\nexport const ARCHIVE_SCHEDULED_TASK_BEGIN = \"ARCHIVE_SCHEDULED_TASK_BEGIN\";\nexport const ARCHIVE_SCHEDULED_TASK_SUCCESS = \"ARCHIVE_SCHEDULED_TASK_SUCCESS\";\nexport const ARCHIVE_SCHEDULED_TASK_ERROR = \"ARCHIVE_SCHEDULED_TASK_ERROR\";\nexport const ARCHIVE_RETRY_TASK_BEGIN = \"ARCHIVE_RETRY_TASK_BEGIN\";\nexport const ARCHIVE_RETRY_TASK_SUCCESS = \"ARCHIVE_RETRY_TASK_SUCCESS\";\nexport const ARCHIVE_RETRY_TASK_ERROR = \"ARCHIVE_RETRY_TASK_ERROR\";\nexport const RUN_AGGREGATING_TASK_BEGIN = \"RUN_AGGREGATING_TASK_BEGIN\";\nexport const RUN_AGGREGATING_TASK_SUCCESS = \"RUN_AGGREGATING_TASK_SUCCESS\";\nexport const RUN_AGGREGATING_TASK_ERROR = \"RUN_AGGREGATING_TASK_ERROR\";\nexport const DELETE_AGGREGATING_TASK_BEGIN = \"DELETE_AGGREGATING_TASK_BEGIN\";\nexport const DELETE_AGGREGATING_TASK_SUCCESS =\n  \"DELETE_AGGREGATING_TASK_SUCCESS\";\nexport const DELETE_AGGREGATING_TASK_ERROR = \"DELETE_AGGREGATING_TASK_ERROR\";\nexport const ARCHIVE_AGGREGATING_TASK_BEGIN = \"ARCHIVE_AGGREGATING_TASK_BEGIN\";\nexport const ARCHIVE_AGGREGATING_TASK_SUCCESS =\n  \"ARCHIVE_AGGREGATING_TASK_SUCCESS\";\nexport const ARCHIVE_AGGREGATING_TASK_ERROR = \"ARCHIVE_AGGREGATING_TASK_ERROR\";\nexport const BATCH_ARCHIVE_PENDING_TASKS_BEGIN =\n  \"BATCH_ARCHIVE_PENDING_TASKS_BEGIN\";\nexport const BATCH_ARCHIVE_PENDING_TASKS_SUCCESS =\n  \"BATCH_ARCHIVE_PENDING_TASKS_SUCCESS\";\nexport const BATCH_ARCHIVE_PENDING_TASKS_ERROR =\n  \"BATCH_RUN_PENDING_TASKS_ERROR\";\nexport const BATCH_DELETE_PENDING_TASKS_BEGIN =\n  \"BATCH_DELETE_PENDING_TASKS_BEGIN\";\nexport const BATCH_DELETE_PENDING_TASKS_SUCCESS =\n  \"BATCH_DELETE_PENDING_TASKS_SUCCESS\";\nexport const BATCH_DELETE_PENDING_TASKS_ERROR =\n  \"BATCH_DELETE_PENDING_TASKS_ERROR\";\nexport const DELETE_ALL_PENDING_TASKS_BEGIN = \"DELETE_ALL_PENDING_TASKS_BEGIN\";\nexport const DELETE_ALL_PENDING_TASKS_SUCCESS =\n  \"DELETE_ALL_PENDING_TASKS_SUCCESS\";\nexport const DELETE_ALL_PENDING_TASKS_ERROR = \"DELETE_ALL_PENDING_TASKS_ERROR\";\nexport const ARCHIVE_ALL_PENDING_TASKS_BEGIN =\n  \"ARCHIVE_ALL_PENDING_TASKS_BEGIN\";\nexport const ARCHIVE_ALL_PENDING_TASKS_SUCCESS =\n  \"ARCHIVE_ALL_PENDING_TASKS_SUCCESS\";\nexport const ARCHIVE_ALL_PENDING_TASKS_ERROR =\n  \"ARCHIVE_ALL_PENDING_TASKS_ERROR\";\nexport const BATCH_RUN_SCHEDULED_TASKS_BEGIN =\n  \"BATCH_RUN_SCHEDULED_TASKS_BEGIN\";\nexport const BATCH_RUN_SCHEDULED_TASKS_SUCCESS =\n  \"BATCH_RUN_SCHEDULED_TASKS_SUCCESS\";\nexport const BATCH_RUN_SCHEDULED_TASKS_ERROR =\n  \"BATCH_RUN_SCHEDULED_TASKS_ERROR\";\nexport const BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN =\n  \"BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN\";\nexport const BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS =\n  \"BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS\";\nexport const BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR =\n  \"BATCH_RUN_SCHEDULED_TASKS_ERROR\";\nexport const BATCH_DELETE_SCHEDULED_TASKS_BEGIN =\n  \"BATCH_DELETE_SCHEDULED_TASKS_BEGIN\";\nexport const BATCH_DELETE_SCHEDULED_TASKS_SUCCESS =\n  \"BATCH_DELETE_SCHEDULED_TASKS_SUCCESS\";\nexport const BATCH_DELETE_SCHEDULED_TASKS_ERROR =\n  \"BATCH_DELETE_SCHEDULED_TASKS_ERROR\";\nexport const RUN_ALL_SCHEDULED_TASKS_BEGIN = \"RUN_ALL_SCHEDULED_TASKS_BEGIN\";\nexport const RUN_ALL_SCHEDULED_TASKS_SUCCESS =\n  \"RUN_ALL_SCHEDULED_TASKS_SUCCESS\";\nexport const RUN_ALL_SCHEDULED_TASKS_ERROR = \"RUN_ALL_SCHEDULED_TASKS_ERROR\";\nexport const ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN =\n  \"ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN\";\nexport const ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS =\n  \"ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS\";\nexport const ARCHIVE_ALL_SCHEDULED_TASKS_ERROR =\n  \"ARCHIVE_ALL_SCHEDULED_TASKS_ERROR\";\nexport const DELETE_ALL_SCHEDULED_TASKS_BEGIN =\n  \"DELETE_ALL_SCHEDULED_TASKS_BEGIN\";\nexport const DELETE_ALL_SCHEDULED_TASKS_SUCCESS =\n  \"DELETE_ALL_SCHEDULED_TASKS_SUCCESS\";\nexport const DELETE_ALL_SCHEDULED_TASKS_ERROR =\n  \"DELETE_ALL_SCHEDULED_TASKS_ERROR\";\nexport const DELETE_RETRY_TASK_BEGIN = \"DELETE_RETRY_TASK_BEGIN\";\nexport const DELETE_RETRY_TASK_SUCCESS = \"DELETE_RETRY_TASK_SUCCESS\";\nexport const DELETE_RETRY_TASK_ERROR = \"DELETE_RETRY_TASK_ERROR\";\nexport const BATCH_RUN_RETRY_TASKS_BEGIN = \"BATCH_RUN_RETRY_TASKS_BEGIN\";\nexport const BATCH_RUN_RETRY_TASKS_SUCCESS = \"BATCH_RUN_RETRY_TASKS_SUCCESS\";\nexport const BATCH_RUN_RETRY_TASKS_ERROR = \"BATCH_RUN_RETRY_TASKS_ERROR\";\nexport const BATCH_ARCHIVE_RETRY_TASKS_BEGIN =\n  \"BATCH_ARCHIVE_RETRY_TASKS_BEGIN\";\nexport const BATCH_ARCHIVE_RETRY_TASKS_SUCCESS =\n  \"BATCH_ARCHIVE_RETRY_TASKS_SUCCESS\";\nexport const BATCH_ARCHIVE_RETRY_TASKS_ERROR =\n  \"BATCH_ARCHIVE_RETRY_TASKS_ERROR\";\nexport const BATCH_DELETE_RETRY_TASKS_BEGIN = \"BATCH_DELETE_RETRY_TASKS_BEGIN\";\nexport const BATCH_DELETE_RETRY_TASKS_SUCCESS =\n  \"BATCH_DELETE_RETRY_TASKS_SUCCESS\";\nexport const BATCH_DELETE_RETRY_TASKS_ERROR = \"BATCH_DELETE_RETRY_TASKS_ERROR\";\nexport const RUN_ALL_RETRY_TASKS_BEGIN = \"RUN_ALL_RETRY_TASKS_BEGIN\";\nexport const RUN_ALL_RETRY_TASKS_SUCCESS = \"RUN_ALL_RETRY_TASKS_SUCCESS\";\nexport const RUN_ALL_RETRY_TASKS_ERROR = \"RUN_ALL_RETRY_TASKS_ERROR\";\nexport const ARCHIVE_ALL_RETRY_TASKS_BEGIN = \"ARCHIVE_ALL_RETRY_TASKS_BEGIN\";\nexport const ARCHIVE_ALL_RETRY_TASKS_SUCCESS =\n  \"ARCHIVE_ALL_RETRY_TASKS_SUCCESS\";\nexport const ARCHIVE_ALL_RETRY_TASKS_ERROR = \"ARCHIVE_ALL_RETRY_TASKS_ERROR\";\nexport const DELETE_ALL_RETRY_TASKS_BEGIN = \"DELETE_ALL_RETRY_TASKS_BEGIN\";\nexport const DELETE_ALL_RETRY_TASKS_SUCCESS = \"DELETE_ALL_RETRY_TASKS_SUCCESS\";\nexport const DELETE_ALL_RETRY_TASKS_ERROR = \"DELETE_ALL_RETRY_TASKS_ERROR\";\nexport const DELETE_ARCHIVED_TASK_BEGIN = \"DELETE_ARCHIVED_TASK_BEGIN\";\nexport const DELETE_ARCHIVED_TASK_SUCCESS = \"DELETE_ARCHIVED_TASK_SUCCESS\";\nexport const DELETE_ARCHIVED_TASK_ERROR = \"DELETE_ARCHIVED_TASK_ERROR\";\nexport const BATCH_RUN_ARCHIVED_TASKS_BEGIN = \"BATCH_RUN_ARCHIVED_TASKS_BEGIN\";\nexport const BATCH_RUN_ARCHIVED_TASKS_SUCCESS =\n  \"BATCH_RUN_ARCHIVED_TASKS_SUCCESS\";\nexport const BATCH_RUN_ARCHIVED_TASKS_ERROR = \"BATCH_RUN_ARCHIVED_TASKS_ERROR\";\nexport const BATCH_DELETE_ARCHIVED_TASKS_BEGIN =\n  \"BATCH_DELETE_ARCHIVED_TASKS_BEGIN\";\nexport const BATCH_DELETE_ARCHIVED_TASKS_SUCCESS =\n  \"BATCH_DELETE_ARCHIVED_TASKS_SUCCESS\";\nexport const BATCH_DELETE_ARCHIVED_TASKS_ERROR =\n  \"BATCH_DELETE_ARCHIVED_TASKS_ERROR\";\nexport const RUN_ALL_ARCHIVED_TASKS_BEGIN = \"RUN_ALL_ARCHIVED_TASKS_BEGIN\";\nexport const RUN_ALL_ARCHIVED_TASKS_SUCCESS = \"RUN_ALL_ARCHIVED_TASKS_SUCCESS\";\nexport const RUN_ALL_ARCHIVED_TASKS_ERROR = \"RUN_ALL_ARCHIVED_TASKS_ERROR\";\nexport const DELETE_ALL_ARCHIVED_TASKS_BEGIN =\n  \"DELETE_ALL_ARCHIVED_TASKS_BEGIN\";\nexport const DELETE_ALL_ARCHIVED_TASKS_SUCCESS =\n  \"DELETE_ALL_ARCHIVED_TASKS_SUCCESS\";\nexport const DELETE_ALL_ARCHIVED_TASKS_ERROR =\n  \"DELETE_ALL_ARCHIVED_TASKS_ERROR\";\nexport const DELETE_COMPLETED_TASK_BEGIN = \"DELETE_COMPLETED_TASK_BEGIN\";\nexport const DELETE_COMPLETED_TASK_SUCCESS = \"DELETE_COMPLETED_TASK_SUCCESS\";\nexport const DELETE_COMPLETED_TASK_ERROR = \"DELETE_COMPLETED_TASK_ERROR\";\nexport const DELETE_ALL_COMPLETED_TASKS_BEGIN =\n  \"DELETE_ALL_COMPLETED_TASKS_BEGIN\";\nexport const DELETE_ALL_COMPLETED_TASKS_SUCCESS =\n  \"DELETE_ALL_COMPLETED_TASKS_SUCCESS\";\nexport const DELETE_ALL_COMPLETED_TASKS_ERROR =\n  \"DELETE_ALL_COMPLETED_TASKS_ERROR\";\nexport const BATCH_DELETE_COMPLETED_TASKS_BEGIN =\n  \"BATCH_DELETE_COMPLETED_TASKS_BEGIN\";\nexport const BATCH_DELETE_COMPLETED_TASKS_SUCCESS =\n  \"BATCH_DELETE_COMPLETED_TASKS_SUCCESS\";\nexport const BATCH_DELETE_COMPLETED_TASKS_ERROR =\n  \"BATCH_DELETE_COMPLETED_TASKS_ERROR\";\nexport const BATCH_RUN_AGGREGATING_TASKS_BEGIN =\n  \"BATCH_RUN_AGGREGATING_TASKS_BEGIN\";\nexport const BATCH_RUN_AGGREGATING_TASKS_SUCCESS =\n  \"BATCH_RUN_AGGREGATING_TASKS_SUCCESS\";\nexport const BATCH_RUN_AGGREGATING_TASKS_ERROR =\n  \"BATCH_RUN_AGGREGATING_TASKS_ERROR\";\nexport const BATCH_ARCHIVE_AGGREGATING_TASKS_BEGIN =\n  \"BATCH_ARCHIVE_AGGREGATING_TASKS_BEGIN\";\nexport const BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS =\n  \"BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS\";\nexport const BATCH_ARCHIVE_AGGREGATING_TASKS_ERROR =\n  \"BATCH_RUN_AGGREGATING_TASKS_ERROR\";\nexport const BATCH_DELETE_AGGREGATING_TASKS_BEGIN =\n  \"BATCH_DELETE_AGGREGATING_TASKS_BEGIN\";\nexport const BATCH_DELETE_AGGREGATING_TASKS_SUCCESS =\n  \"BATCH_DELETE_AGGREGATING_TASKS_SUCCESS\";\nexport const BATCH_DELETE_AGGREGATING_TASKS_ERROR =\n  \"BATCH_DELETE_AGGREGATING_TASKS_ERROR\";\nexport const RUN_ALL_AGGREGATING_TASKS_BEGIN =\n  \"RUN_ALL_AGGREGATING_TASKS_BEGIN\";\nexport const RUN_ALL_AGGREGATING_TASKS_SUCCESS =\n  \"RUN_ALL_AGGREGATING_TASKS_SUCCESS\";\nexport const RUN_ALL_AGGREGATING_TASKS_ERROR =\n  \"RUN_ALL_AGGREGATING_TASKS_ERROR\";\nexport const ARCHIVE_ALL_AGGREGATING_TASKS_BEGIN =\n  \"ARCHIVE_ALL_AGGREGATING_TASKS_BEGIN\";\nexport const ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS =\n  \"ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS\";\nexport const ARCHIVE_ALL_AGGREGATING_TASKS_ERROR =\n  \"ARCHIVE_ALL_AGGREGATING_TASKS_ERROR\";\nexport const DELETE_ALL_AGGREGATING_TASKS_BEGIN =\n  \"DELETE_ALL_AGGREGATING_TASKS_BEGIN\";\nexport const DELETE_ALL_AGGREGATING_TASKS_SUCCESS =\n  \"DELETE_ALL_AGGREGATING_TASKS_SUCCESS\";\nexport const DELETE_ALL_AGGREGATING_TASKS_ERROR =\n  \"DELETE_ALL_AGGREGATING_TASKS_ERROR\";\n\ninterface GetTaskInfoBeginAction {\n  type: typeof GET_TASK_INFO_BEGIN;\n}\n\ninterface GetTaskInfoErrorAction {\n  type: typeof GET_TASK_INFO_ERROR;\n  error: string; // error description\n}\n\ninterface GetTaskInfoSuccessAction {\n  type: typeof GET_TASK_INFO_SUCCESS;\n  payload: TaskInfo;\n}\n\ninterface ListActiveTasksBeginAction {\n  type: typeof LIST_ACTIVE_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListActiveTasksSuccessAction {\n  type: typeof LIST_ACTIVE_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListActiveTasksErrorAction {\n  type: typeof LIST_ACTIVE_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListPendingTasksBeginAction {\n  type: typeof LIST_PENDING_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListPendingTasksSuccessAction {\n  type: typeof LIST_PENDING_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListPendingTasksErrorAction {\n  type: typeof LIST_PENDING_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListScheduledTasksBeginAction {\n  type: typeof LIST_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListScheduledTasksSuccessAction {\n  type: typeof LIST_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListScheduledTasksErrorAction {\n  type: typeof LIST_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListRetryTasksBeginAction {\n  type: typeof LIST_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListRetryTasksSuccessAction {\n  type: typeof LIST_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListRetryTasksErrorAction {\n  type: typeof LIST_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListArchivedTasksBeginAction {\n  type: typeof LIST_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListArchivedTasksSuccessAction {\n  type: typeof LIST_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListArchivedTasksErrorAction {\n  type: typeof LIST_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListCompletedTasksBeginAction {\n  type: typeof LIST_COMPLETED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ListCompletedTasksSuccessAction {\n  type: typeof LIST_COMPLETED_TASKS_SUCCESS;\n  queue: string;\n  payload: ListTasksResponse;\n}\n\ninterface ListCompletedTasksErrorAction {\n  type: typeof LIST_COMPLETED_TASKS_ERROR;\n  queue: string;\n  error: string; // error description\n}\n\ninterface ListAggregatingTasksBeginAction {\n  type: typeof LIST_AGGREGATING_TASKS_BEGIN;\n  queue: string;\n  group: string;\n}\n\ninterface ListAggregatingTasksSuccessAction {\n  type: typeof LIST_AGGREGATING_TASKS_SUCCESS;\n  queue: string;\n  group: string;\n  payload: ListAggregatingTasksResponse;\n}\n\ninterface ListAggregatingTasksErrorAction {\n  type: typeof LIST_AGGREGATING_TASKS_ERROR;\n  queue: string;\n  group: string;\n  error: string; // error description\n}\n\ninterface FilterTasksBeginAction {\n  type: typeof FILTER_TASKS_BEGIN;\n}\n\ninterface FilterTasksProgressAction {\n  type: typeof FILTER_TASKS_PROGRESS;\n  processedTasks: number;\n  filterResults: TaskInfo[];\n  newStats: Queue;\n}\n\ninterface FilterTasksSuccessAction {\n  type: typeof FILTER_TASKS_SUCCESS;\n}\n\ninterface FilterTasksErrorAction {\n  type: typeof FILTER_TASKS_ERROR;\n  error: string;\n}\n\ninterface FilterTasksCancelAction {\n  type: typeof FILTER_TASKS_CANCEL;\n}\n\ninterface CancelActiveTaskBeginAction {\n  type: typeof CANCEL_ACTIVE_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface CancelActiveTaskSuccessAction {\n  type: typeof CANCEL_ACTIVE_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface CancelActiveTaskErrorAction {\n  type: typeof CANCEL_ACTIVE_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface CancelAllActiveTasksBeginAction {\n  type: typeof CANCEL_ALL_ACTIVE_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface CancelAllActiveTasksSuccessAction {\n  type: typeof CANCEL_ALL_ACTIVE_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface CancelAllActiveTasksErrorAction {\n  type: typeof CANCEL_ALL_ACTIVE_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface BatchCancelActiveTasksBeginAction {\n  type: typeof BATCH_CANCEL_ACTIVE_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchCancelActiveTasksSuccessAction {\n  type: typeof BATCH_CANCEL_ACTIVE_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchCancelTasksResponse;\n}\n\ninterface BatchCancelActiveTasksErrorAction {\n  type: typeof BATCH_CANCEL_ACTIVE_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface DeletePendingTaskBeginAction {\n  type: typeof DELETE_PENDING_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeletePendingTaskSuccessAction {\n  type: typeof DELETE_PENDING_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeletePendingTaskErrorAction {\n  type: typeof DELETE_PENDING_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeletePendingTasksBeginAction {\n  type: typeof BATCH_DELETE_PENDING_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeletePendingTasksSuccessAction {\n  type: typeof BATCH_DELETE_PENDING_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeletePendingTasksErrorAction {\n  type: typeof BATCH_DELETE_PENDING_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface DeleteAllPendingTasksBeginAction {\n  type: typeof DELETE_ALL_PENDING_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllPendingTasksSuccessAction {\n  type: typeof DELETE_ALL_PENDING_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllPendingTasksErrorAction {\n  type: typeof DELETE_ALL_PENDING_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface ArchivePendingTaskBeginAction {\n  type: typeof ARCHIVE_PENDING_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchivePendingTaskSuccessAction {\n  type: typeof ARCHIVE_PENDING_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchivePendingTaskErrorAction {\n  type: typeof ARCHIVE_PENDING_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchArchivePendingTasksBeginAction {\n  type: typeof BATCH_ARCHIVE_PENDING_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchArchivePendingTasksSuccessAction {\n  type: typeof BATCH_ARCHIVE_PENDING_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchArchiveTasksResponse;\n}\n\ninterface BatchArchivePendingTasksErrorAction {\n  type: typeof BATCH_ARCHIVE_PENDING_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface ArchiveAllPendingTasksBeginAction {\n  type: typeof ARCHIVE_ALL_PENDING_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ArchiveAllPendingTasksSuccessAction {\n  type: typeof ARCHIVE_ALL_PENDING_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface ArchiveAllPendingTasksErrorAction {\n  type: typeof ARCHIVE_ALL_PENDING_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface RunScheduledTaskBeginAction {\n  type: typeof RUN_SCHEDULED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunScheduledTaskSuccessAction {\n  type: typeof RUN_SCHEDULED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunScheduledTaskErrorAction {\n  type: typeof RUN_SCHEDULED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface ArchiveScheduledTaskBeginAction {\n  type: typeof ARCHIVE_SCHEDULED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveScheduledTaskSuccessAction {\n  type: typeof ARCHIVE_SCHEDULED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveScheduledTaskErrorAction {\n  type: typeof ARCHIVE_SCHEDULED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface RunRetryTaskBeginAction {\n  type: typeof RUN_RETRY_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunRetryTaskSuccessAction {\n  type: typeof RUN_RETRY_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunRetryTaskErrorAction {\n  type: typeof RUN_RETRY_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface ArchiveRetryTaskBeginAction {\n  type: typeof ARCHIVE_RETRY_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveRetryTaskSuccessAction {\n  type: typeof ARCHIVE_RETRY_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveRetryTaskErrorAction {\n  type: typeof ARCHIVE_RETRY_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface RunArchivedTaskBeginAction {\n  type: typeof RUN_ARCHIVED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunArchivedTaskSuccessAction {\n  type: typeof RUN_ARCHIVED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunArchivedTaskErrorAction {\n  type: typeof RUN_ARCHIVED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface DeleteScheduledTaskBeginAction {\n  type: typeof DELETE_SCHEDULED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteScheduledTaskSuccessAction {\n  type: typeof DELETE_SCHEDULED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteScheduledTaskErrorAction {\n  type: typeof DELETE_SCHEDULED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteScheduledTasksBeginAction {\n  type: typeof BATCH_DELETE_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteScheduledTasksSuccessAction {\n  type: typeof BATCH_DELETE_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteScheduledTasksErrorAction {\n  type: typeof BATCH_DELETE_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface BatchRunScheduledTasksBeginAction {\n  type: typeof BATCH_RUN_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchRunScheduledTasksSuccessAction {\n  type: typeof BATCH_RUN_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchRunTasksResponse;\n}\n\ninterface BatchRunScheduledTasksErrorAction {\n  type: typeof BATCH_RUN_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface RunAllScheduledTasksBeginAction {\n  type: typeof RUN_ALL_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface RunAllScheduledTasksSuccessAction {\n  type: typeof RUN_ALL_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface RunAllScheduledTasksErrorAction {\n  type: typeof RUN_ALL_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface BatchArchiveScheduledTasksBeginAction {\n  type: typeof BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchArchiveScheduledTasksSuccessAction {\n  type: typeof BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchArchiveTasksResponse;\n}\n\ninterface BatchArchiveScheduledTasksErrorAction {\n  type: typeof BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface ArchiveAllScheduledTasksBeginAction {\n  type: typeof ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ArchiveAllScheduledTasksSuccessAction {\n  type: typeof ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface ArchiveAllScheduledTasksErrorAction {\n  type: typeof ARCHIVE_ALL_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteAllScheduledTasksBeginAction {\n  type: typeof DELETE_ALL_SCHEDULED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllScheduledTasksSuccessAction {\n  type: typeof DELETE_ALL_SCHEDULED_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllScheduledTasksErrorAction {\n  type: typeof DELETE_ALL_SCHEDULED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteRetryTaskBeginAction {\n  type: typeof DELETE_RETRY_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteRetryTaskSuccessAction {\n  type: typeof DELETE_RETRY_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteRetryTaskErrorAction {\n  type: typeof DELETE_RETRY_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteRetryTasksBeginAction {\n  type: typeof BATCH_DELETE_RETRY_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteRetryTasksSuccessAction {\n  type: typeof BATCH_DELETE_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteRetryTasksErrorAction {\n  type: typeof BATCH_DELETE_RETRY_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface BatchRunRetryTasksBeginAction {\n  type: typeof BATCH_RUN_RETRY_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchRunRetryTasksSuccessAction {\n  type: typeof BATCH_RUN_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchRunTasksResponse;\n}\n\ninterface BatchRunRetryTasksErrorAction {\n  type: typeof BATCH_RUN_RETRY_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface RunAllRetryTasksBeginAction {\n  type: typeof RUN_ALL_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface RunAllRetryTasksSuccessAction {\n  type: typeof RUN_ALL_RETRY_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface RunAllRetryTasksErrorAction {\n  type: typeof RUN_ALL_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface BatchArchiveRetryTasksBeginAction {\n  type: typeof BATCH_ARCHIVE_RETRY_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchArchiveRetryTasksSuccessAction {\n  type: typeof BATCH_ARCHIVE_RETRY_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchArchiveTasksResponse;\n}\n\ninterface BatchArchiveRetryTasksErrorAction {\n  type: typeof BATCH_ARCHIVE_RETRY_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface ArchiveAllRetryTasksBeginAction {\n  type: typeof ARCHIVE_ALL_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface ArchiveAllRetryTasksSuccessAction {\n  type: typeof ARCHIVE_ALL_RETRY_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface ArchiveAllRetryTasksErrorAction {\n  type: typeof ARCHIVE_ALL_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteAllRetryTasksBeginAction {\n  type: typeof DELETE_ALL_RETRY_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllRetryTasksSuccessAction {\n  type: typeof DELETE_ALL_RETRY_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllRetryTasksErrorAction {\n  type: typeof DELETE_ALL_RETRY_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteArchivedTaskBeginAction {\n  type: typeof DELETE_ARCHIVED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteArchivedTaskSuccessAction {\n  type: typeof DELETE_ARCHIVED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteArchivedTaskErrorAction {\n  type: typeof DELETE_ARCHIVED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteArchivedTasksBeginAction {\n  type: typeof BATCH_DELETE_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteArchivedTasksSuccessAction {\n  type: typeof BATCH_DELETE_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteArchivedTasksErrorAction {\n  type: typeof BATCH_DELETE_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface BatchRunArchivedTasksBeginAction {\n  type: typeof BATCH_RUN_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchRunArchivedTasksSuccessAction {\n  type: typeof BATCH_RUN_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchRunTasksResponse;\n}\n\ninterface BatchRunArchivedTasksErrorAction {\n  type: typeof BATCH_RUN_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface RunAllArchivedTasksBeginAction {\n  type: typeof RUN_ALL_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface RunAllArchivedTasksSuccessAction {\n  type: typeof RUN_ALL_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n}\n\ninterface RunAllArchivedTasksErrorAction {\n  type: typeof RUN_ALL_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteAllArchivedTasksBeginAction {\n  type: typeof DELETE_ALL_ARCHIVED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllArchivedTasksSuccessAction {\n  type: typeof DELETE_ALL_ARCHIVED_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllArchivedTasksErrorAction {\n  type: typeof DELETE_ALL_ARCHIVED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteCompletedTaskBeginAction {\n  type: typeof DELETE_COMPLETED_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteCompletedTaskSuccessAction {\n  type: typeof DELETE_COMPLETED_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteCompletedTaskErrorAction {\n  type: typeof DELETE_COMPLETED_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteCompletedTasksBeginAction {\n  type: typeof BATCH_DELETE_COMPLETED_TASKS_BEGIN;\n  queue: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteCompletedTasksSuccessAction {\n  type: typeof BATCH_DELETE_COMPLETED_TASKS_SUCCESS;\n  queue: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteCompletedTasksErrorAction {\n  type: typeof BATCH_DELETE_COMPLETED_TASKS_ERROR;\n  queue: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface DeleteAllCompletedTasksBeginAction {\n  type: typeof DELETE_ALL_COMPLETED_TASKS_BEGIN;\n  queue: string;\n}\n\ninterface DeleteAllCompletedTasksSuccessAction {\n  type: typeof DELETE_ALL_COMPLETED_TASKS_SUCCESS;\n  queue: string;\n  deleted: number;\n}\n\ninterface DeleteAllCompletedTasksErrorAction {\n  type: typeof DELETE_ALL_COMPLETED_TASKS_ERROR;\n  queue: string;\n  error: string;\n}\n\ninterface DeleteAggregatingTaskBeginAction {\n  type: typeof DELETE_AGGREGATING_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteAggregatingTaskSuccessAction {\n  type: typeof DELETE_AGGREGATING_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface DeleteAggregatingTaskErrorAction {\n  type: typeof DELETE_AGGREGATING_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface RunAggregatingTaskBeginAction {\n  type: typeof RUN_AGGREGATING_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunAggregatingTaskSuccessAction {\n  type: typeof RUN_AGGREGATING_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface RunAggregatingTaskErrorAction {\n  type: typeof RUN_AGGREGATING_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface ArchiveAggregatingTaskBeginAction {\n  type: typeof ARCHIVE_AGGREGATING_TASK_BEGIN;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveAggregatingTaskSuccessAction {\n  type: typeof ARCHIVE_AGGREGATING_TASK_SUCCESS;\n  queue: string;\n  taskId: string;\n}\n\ninterface ArchiveAggregatingTaskErrorAction {\n  type: typeof ARCHIVE_AGGREGATING_TASK_ERROR;\n  queue: string;\n  taskId: string;\n  error: string;\n}\n\ninterface BatchDeleteAggregatingTasksBeginAction {\n  type: typeof BATCH_DELETE_AGGREGATING_TASKS_BEGIN;\n  queue: string;\n  group: string;\n  taskIds: string[];\n}\n\ninterface BatchDeleteAggregatingTasksSuccessAction {\n  type: typeof BATCH_DELETE_AGGREGATING_TASKS_SUCCESS;\n  queue: string;\n  group: string;\n  payload: BatchDeleteTasksResponse;\n}\n\ninterface BatchDeleteAggregatingTasksErrorAction {\n  type: typeof BATCH_DELETE_AGGREGATING_TASKS_ERROR;\n  queue: string;\n  group: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface BatchRunAggregatingTasksBeginAction {\n  type: typeof BATCH_RUN_AGGREGATING_TASKS_BEGIN;\n  queue: string;\n  group: string;\n  taskIds: string[];\n}\n\ninterface BatchRunAggregatingTasksSuccessAction {\n  type: typeof BATCH_RUN_AGGREGATING_TASKS_SUCCESS;\n  queue: string;\n  group: string;\n  payload: BatchRunTasksResponse;\n}\n\ninterface BatchRunAggregatingTasksErrorAction {\n  type: typeof BATCH_RUN_AGGREGATING_TASKS_ERROR;\n  queue: string;\n  group: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface RunAllAggregatingTasksBeginAction {\n  type: typeof RUN_ALL_AGGREGATING_TASKS_BEGIN;\n  queue: string;\n  group: string;\n}\n\ninterface RunAllAggregatingTasksSuccessAction {\n  type: typeof RUN_ALL_AGGREGATING_TASKS_SUCCESS;\n  scheduled: number;\n  queue: string;\n  group: string;\n}\n\ninterface RunAllAggregatingTasksErrorAction {\n  type: typeof RUN_ALL_AGGREGATING_TASKS_ERROR;\n  queue: string;\n  group: string;\n  error: string;\n}\n\ninterface BatchArchiveAggregatingTasksBeginAction {\n  type: typeof BATCH_ARCHIVE_AGGREGATING_TASKS_BEGIN;\n  queue: string;\n  group: string;\n  taskIds: string[];\n}\n\ninterface BatchArchiveAggregatingTasksSuccessAction {\n  type: typeof BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS;\n  queue: string;\n  group: string;\n  payload: BatchArchiveTasksResponse;\n}\n\ninterface BatchArchiveAggregatingTasksErrorAction {\n  type: typeof BATCH_ARCHIVE_AGGREGATING_TASKS_ERROR;\n  queue: string;\n  group: string;\n  taskIds: string[];\n  error: string;\n}\n\ninterface ArchiveAllAggregatingTasksBeginAction {\n  type: typeof ARCHIVE_ALL_AGGREGATING_TASKS_BEGIN;\n  queue: string;\n  group: string;\n}\n\ninterface ArchiveAllAggregatingTasksSuccessAction {\n  type: typeof ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS;\n  queue: string;\n  group: string;\n  archived: number;\n}\n\ninterface ArchiveAllAggregatingTasksErrorAction {\n  type: typeof ARCHIVE_ALL_AGGREGATING_TASKS_ERROR;\n  queue: string;\n  group: string;\n  error: string;\n}\n\ninterface DeleteAllAggregatingTasksBeginAction {\n  type: typeof DELETE_ALL_AGGREGATING_TASKS_BEGIN;\n  queue: string;\n  group: string;\n}\n\ninterface DeleteAllAggregatingTasksSuccessAction {\n  type: typeof DELETE_ALL_AGGREGATING_TASKS_SUCCESS;\n  queue: string;\n  group: string;\n  deleted: number;\n}\n\ninterface DeleteAllAggregatingTasksErrorAction {\n  type: typeof DELETE_ALL_AGGREGATING_TASKS_ERROR;\n  queue: string;\n  group: string;\n  error: string;\n}\n\n// Union of all tasks related action types.\nexport type TasksActionTypes =\n  | GetTaskInfoBeginAction\n  | GetTaskInfoErrorAction\n  | GetTaskInfoSuccessAction\n  | ListActiveTasksBeginAction\n  | ListActiveTasksSuccessAction\n  | ListActiveTasksErrorAction\n  | ListPendingTasksBeginAction\n  | ListPendingTasksSuccessAction\n  | ListPendingTasksErrorAction\n  | ListScheduledTasksBeginAction\n  | ListScheduledTasksSuccessAction\n  | ListScheduledTasksErrorAction\n  | ListRetryTasksBeginAction\n  | ListRetryTasksSuccessAction\n  | ListRetryTasksErrorAction\n  | ListArchivedTasksBeginAction\n  | ListArchivedTasksSuccessAction\n  | ListArchivedTasksErrorAction\n  | ListCompletedTasksBeginAction\n  | ListCompletedTasksSuccessAction\n  | ListCompletedTasksErrorAction\n  | ListAggregatingTasksBeginAction\n  | ListAggregatingTasksSuccessAction\n  | ListAggregatingTasksErrorAction\n  | FilterTasksBeginAction\n  | FilterTasksProgressAction\n  | FilterTasksSuccessAction\n  | FilterTasksErrorAction\n  | FilterTasksCancelAction\n  | CancelActiveTaskBeginAction\n  | CancelActiveTaskSuccessAction\n  | CancelActiveTaskErrorAction\n  | CancelAllActiveTasksBeginAction\n  | CancelAllActiveTasksSuccessAction\n  | CancelAllActiveTasksErrorAction\n  | BatchCancelActiveTasksBeginAction\n  | BatchCancelActiveTasksSuccessAction\n  | BatchCancelActiveTasksErrorAction\n  | DeletePendingTaskBeginAction\n  | DeletePendingTaskSuccessAction\n  | DeletePendingTaskErrorAction\n  | BatchDeletePendingTasksBeginAction\n  | BatchDeletePendingTasksSuccessAction\n  | BatchDeletePendingTasksErrorAction\n  | DeleteAllPendingTasksBeginAction\n  | DeleteAllPendingTasksSuccessAction\n  | DeleteAllPendingTasksErrorAction\n  | ArchivePendingTaskBeginAction\n  | ArchivePendingTaskSuccessAction\n  | ArchivePendingTaskErrorAction\n  | BatchArchivePendingTasksBeginAction\n  | BatchArchivePendingTasksSuccessAction\n  | BatchArchivePendingTasksErrorAction\n  | ArchiveAllPendingTasksBeginAction\n  | ArchiveAllPendingTasksSuccessAction\n  | ArchiveAllPendingTasksErrorAction\n  | RunScheduledTaskBeginAction\n  | RunScheduledTaskSuccessAction\n  | RunScheduledTaskErrorAction\n  | RunRetryTaskBeginAction\n  | RunRetryTaskSuccessAction\n  | RunRetryTaskErrorAction\n  | RunArchivedTaskBeginAction\n  | RunArchivedTaskSuccessAction\n  | RunArchivedTaskErrorAction\n  | ArchiveScheduledTaskBeginAction\n  | ArchiveScheduledTaskSuccessAction\n  | ArchiveScheduledTaskErrorAction\n  | ArchiveRetryTaskBeginAction\n  | ArchiveRetryTaskSuccessAction\n  | ArchiveRetryTaskErrorAction\n  | DeleteScheduledTaskBeginAction\n  | DeleteScheduledTaskSuccessAction\n  | DeleteScheduledTaskErrorAction\n  | BatchDeleteScheduledTasksBeginAction\n  | BatchDeleteScheduledTasksSuccessAction\n  | BatchDeleteScheduledTasksErrorAction\n  | BatchRunScheduledTasksBeginAction\n  | BatchRunScheduledTasksSuccessAction\n  | BatchRunScheduledTasksErrorAction\n  | RunAllScheduledTasksBeginAction\n  | RunAllScheduledTasksSuccessAction\n  | RunAllScheduledTasksErrorAction\n  | BatchArchiveScheduledTasksBeginAction\n  | BatchArchiveScheduledTasksSuccessAction\n  | BatchArchiveScheduledTasksErrorAction\n  | ArchiveAllScheduledTasksBeginAction\n  | ArchiveAllScheduledTasksSuccessAction\n  | ArchiveAllScheduledTasksErrorAction\n  | DeleteAllScheduledTasksBeginAction\n  | DeleteAllScheduledTasksSuccessAction\n  | DeleteAllScheduledTasksErrorAction\n  | DeleteRetryTaskBeginAction\n  | DeleteRetryTaskSuccessAction\n  | DeleteRetryTaskErrorAction\n  | BatchDeleteRetryTasksBeginAction\n  | BatchDeleteRetryTasksSuccessAction\n  | BatchDeleteRetryTasksErrorAction\n  | BatchRunRetryTasksBeginAction\n  | BatchRunRetryTasksSuccessAction\n  | BatchRunRetryTasksErrorAction\n  | RunAllRetryTasksBeginAction\n  | RunAllRetryTasksSuccessAction\n  | RunAllRetryTasksErrorAction\n  | BatchArchiveRetryTasksBeginAction\n  | BatchArchiveRetryTasksSuccessAction\n  | BatchArchiveRetryTasksErrorAction\n  | ArchiveAllRetryTasksBeginAction\n  | ArchiveAllRetryTasksSuccessAction\n  | ArchiveAllRetryTasksErrorAction\n  | DeleteAllRetryTasksBeginAction\n  | DeleteAllRetryTasksSuccessAction\n  | DeleteAllRetryTasksErrorAction\n  | DeleteArchivedTaskBeginAction\n  | DeleteArchivedTaskSuccessAction\n  | DeleteArchivedTaskErrorAction\n  | BatchDeleteArchivedTasksBeginAction\n  | BatchDeleteArchivedTasksSuccessAction\n  | BatchDeleteArchivedTasksErrorAction\n  | BatchRunArchivedTasksBeginAction\n  | BatchRunArchivedTasksSuccessAction\n  | BatchRunArchivedTasksErrorAction\n  | RunAllArchivedTasksBeginAction\n  | RunAllArchivedTasksSuccessAction\n  | RunAllArchivedTasksErrorAction\n  | DeleteAllArchivedTasksBeginAction\n  | DeleteAllArchivedTasksSuccessAction\n  | DeleteAllArchivedTasksErrorAction\n  | DeleteCompletedTaskBeginAction\n  | DeleteCompletedTaskSuccessAction\n  | DeleteCompletedTaskErrorAction\n  | BatchDeleteCompletedTasksBeginAction\n  | BatchDeleteCompletedTasksSuccessAction\n  | BatchDeleteCompletedTasksErrorAction\n  | DeleteAllCompletedTasksBeginAction\n  | DeleteAllCompletedTasksSuccessAction\n  | DeleteAllCompletedTasksErrorAction\n  | BatchDeleteAggregatingTasksBeginAction\n  | BatchDeleteAggregatingTasksSuccessAction\n  | BatchDeleteAggregatingTasksErrorAction\n  | BatchRunAggregatingTasksBeginAction\n  | BatchRunAggregatingTasksSuccessAction\n  | BatchRunAggregatingTasksErrorAction\n  | RunAllAggregatingTasksBeginAction\n  | RunAllAggregatingTasksSuccessAction\n  | RunAllAggregatingTasksErrorAction\n  | BatchArchiveAggregatingTasksBeginAction\n  | BatchArchiveAggregatingTasksSuccessAction\n  | BatchArchiveAggregatingTasksErrorAction\n  | ArchiveAllAggregatingTasksBeginAction\n  | ArchiveAllAggregatingTasksSuccessAction\n  | ArchiveAllAggregatingTasksErrorAction\n  | DeleteAllAggregatingTasksBeginAction\n  | DeleteAllAggregatingTasksSuccessAction\n  | DeleteAllAggregatingTasksErrorAction\n  | DeleteAggregatingTaskBeginAction\n  | DeleteAggregatingTaskSuccessAction\n  | DeleteAggregatingTaskErrorAction\n  | RunAggregatingTaskBeginAction\n  | RunAggregatingTaskSuccessAction\n  | RunAggregatingTaskErrorAction\n  | ArchiveAggregatingTaskBeginAction\n  | ArchiveAggregatingTaskSuccessAction\n  | ArchiveAggregatingTaskErrorAction;\n\nexport function getTaskInfoAsync(qname: string, id: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: GET_TASK_INFO_BEGIN });\n    try {\n      const response = await getTaskInfo(qname, id);\n      dispatch({\n        type: GET_TASK_INFO_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\"getTaskInfoAsync: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: GET_TASK_INFO_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nfunction getFilterResults(\n  state: AppState,\n  qname: string,\n  pageOpts?: PaginationOptions\n): ListTasksResponse | null {\n  const filterOp = state.tasks.filterOp;\n  if (filterOp == null || !filterOp.done) return null;\n  const curQueueStats = state.queues.data.find((it) => it.name === qname);\n  if (curQueueStats == null) return null;\n\n  const size = pageOpts?.size ?? 20;\n  const page = pageOpts?.page ?? 1;\n\n  const start = (page - 1) * size;\n  const end = start + size;\n  const results = filterOp.result.slice(start, end);\n\n  return {\n    tasks: results,\n    stats: curQueueStats.currentStats,\n  };\n}\n\nexport function listActiveTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (\n    dispatch: Dispatch<TasksActionTypes>,\n    getState: () => AppState\n  ) => {\n    dispatch({ type: LIST_ACTIVE_TASKS_BEGIN, queue: qname });\n    try {\n      const response =\n        getFilterResults(getState(), qname, pageOpts) ??\n        (await listActiveTasks(qname, pageOpts));\n      dispatch({\n        type: LIST_ACTIVE_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listActiveTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_ACTIVE_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listPendingTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (\n    dispatch: Dispatch<TasksActionTypes>,\n    getState: () => AppState\n  ) => {\n    dispatch({ type: LIST_PENDING_TASKS_BEGIN, queue: qname });\n    try {\n      const response =\n        getFilterResults(getState(), qname, pageOpts) ??\n        (await listPendingTasks(qname, pageOpts));\n      dispatch({\n        type: LIST_PENDING_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listPendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_PENDING_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listScheduledTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (\n    dispatch: Dispatch<TasksActionTypes>,\n    getState: () => AppState\n  ) => {\n    dispatch({ type: LIST_SCHEDULED_TASKS_BEGIN, queue: qname });\n    try {\n      const response =\n        getFilterResults(getState(), qname, pageOpts) ??\n        (await listScheduledTasks(qname, pageOpts));\n      dispatch({\n        type: LIST_SCHEDULED_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_SCHEDULED_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listRetryTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (\n    dispatch: Dispatch<TasksActionTypes>,\n    getState: () => AppState\n  ) => {\n    dispatch({ type: LIST_RETRY_TASKS_BEGIN, queue: qname });\n    try {\n      const response =\n        getFilterResults(getState(), qname, pageOpts) ??\n        (await listRetryTasks(qname, pageOpts));\n      dispatch({\n        type: LIST_RETRY_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_RETRY_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listArchivedTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (\n    dispatch: Dispatch<TasksActionTypes>,\n    getState: () => AppState\n  ) => {\n    dispatch({ type: LIST_ARCHIVED_TASKS_BEGIN, queue: qname });\n    try {\n      const response =\n        getFilterResults(getState(), qname, pageOpts) ??\n        (await listArchivedTasks(qname, pageOpts));\n      dispatch({\n        type: LIST_ARCHIVED_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_ARCHIVED_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listCompletedTasksAsync(\n  qname: string,\n  pageOpts?: PaginationOptions\n) {\n  return async (\n    dispatch: Dispatch<TasksActionTypes>,\n    getState: () => AppState\n  ) => {\n    try {\n      dispatch({ type: LIST_COMPLETED_TASKS_BEGIN, queue: qname });\n      const response =\n        getFilterResults(getState(), qname, pageOpts) ??\n        (await listCompletedTasks(qname, pageOpts));\n      dispatch({\n        type: LIST_COMPLETED_TASKS_SUCCESS,\n        queue: qname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listCompletedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_COMPLETED_TASKS_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listAggregatingTasksAsync(\n  qname: string,\n  gname: string,\n  pageOpts?: PaginationOptions\n) {\n  // TODO Add filter support\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    try {\n      dispatch({\n        type: LIST_AGGREGATING_TASKS_BEGIN,\n        queue: qname,\n        group: gname,\n      });\n      const response = await listAggregatingTasks(qname, gname, pageOpts);\n      dispatch({\n        type: LIST_AGGREGATING_TASKS_SUCCESS,\n        queue: qname,\n        group: gname,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listAggregatingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_AGGREGATING_TASKS_ERROR,\n        queue: qname,\n        group: gname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport interface TasksFilter {\n  payloadQuery?: string;\n  resultQuery?: string;\n  payloadRegex?: RegExp;\n  resultRegex?: RegExp;\n  customJs?: string;\n  resultLimit?: number;\n}\n\nfunction parseIfJson(str: string) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return str;\n  }\n}\n\nfunction evalCustomJsFilter(js: string, task: TaskInfo): any {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n    id,\n    queue,\n    type,\n    state,\n    start_time,\n    max_retry,\n    retried,\n    last_failed_at,\n    error_message,\n    next_process_at,\n    timeout_seconds,\n    deadline,\n    group,\n    completed_at,\n    ttl_seconds,\n    is_orphaned,\n  } = task;\n  // Parse payload and result into JSON for convenience\n  const payload = parseIfJson(task.payload);\n  const result = parseIfJson(task.result);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  return eval(js); // eslint-disable-line no-eval\n}\n\nfunction filterTask(filter: TasksFilter, task: TaskInfo): boolean {\n  if (\n    filter.payloadQuery != null &&\n    !task.payload.includes(filter.payloadQuery)\n  ) {\n    return false;\n  }\n  if (filter.resultQuery != null && !task.result.includes(filter.resultQuery)) {\n    return false;\n  }\n  if (\n    filter.payloadRegex != null &&\n    task.payload.match(filter.payloadRegex) == null\n  ) {\n    return false;\n  }\n  if (\n    filter.resultRegex != null &&\n    task.result.match(filter.resultRegex) == null\n  ) {\n    return false;\n  }\n  if (filter.customJs != null) {\n    let customJsResult;\n    try {\n      customJsResult = evalCustomJsFilter(filter.customJs, task);\n    } catch (e) {\n      console.error(\n        \"Custom JS filter error:\",\n        e,\n        \"task:\",\n        task,\n        \"skipping task.\"\n      );\n      return false;\n    }\n    // Custom JS can return anything so sanitize output into a boolean\n    return !!customJsResult;\n  } else {\n    return true;\n  }\n}\n\nexport function filterTasksAsync(\n  filter: TasksFilter,\n  fetchTasks: (\n    page?: number // page number (1 being the first page)\n  ) => Promise<ListTasksResponse>\n) {\n  return async (\n    dispatch: Dispatch<TasksActionTypes>,\n    getState: () => AppState\n  ) => {\n    dispatch({ type: FILTER_TASKS_BEGIN });\n\n    let page = 1;\n    let processed = 0;\n    let finished = false;\n    do {\n      // Check if operation was cancelled, if so, return\n      if (getState().tasks.filterOp == null) return;\n\n      // Fetch next page\n      let response;\n      try {\n        response = await fetchTasks(page);\n      } catch (error) {\n        dispatch({\n          type: FILTER_TASKS_ERROR,\n          error: toErrorString(error),\n        });\n        return;\n      }\n      page++;\n\n      // Process page\n      const filterResults: TaskInfo[] = [];\n      for (const task of response.tasks) {\n        if (filterTask(filter, task)) {\n          filterResults.push(task);\n          processed++;\n          if (filter.resultLimit != null && processed >= filter.resultLimit) {\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      // Update state\n      dispatch({\n        type: FILTER_TASKS_PROGRESS,\n        processedTasks: response.tasks.length,\n        newStats: response.stats,\n        filterResults,\n      });\n      if (response.tasks.length === 0) finished = true;\n    } while (!finished);\n\n    dispatch({\n      type: FILTER_TASKS_SUCCESS,\n    });\n  };\n}\n\nexport function cancelFilterTasks() {\n  return {\n    type: FILTER_TASKS_CANCEL,\n  };\n}\n\nexport function cancelActiveTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: CANCEL_ACTIVE_TASK_BEGIN, queue, taskId });\n    try {\n      await cancelActiveTask(queue, taskId);\n      dispatch({ type: CANCEL_ACTIVE_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"cancelActiveTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: CANCEL_ACTIVE_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function cancelAllActiveTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: CANCEL_ALL_ACTIVE_TASKS_BEGIN, queue });\n    try {\n      await cancelAllActiveTasks(queue);\n      dispatch({ type: CANCEL_ALL_ACTIVE_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"cancelAllActiveTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: CANCEL_ALL_ACTIVE_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function batchCancelActiveTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_CANCEL_ACTIVE_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchCancelActiveTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_CANCEL_ACTIVE_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchCancelActiveTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_CANCEL_ACTIVE_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function runScheduledTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_SCHEDULED_TASK_BEGIN, queue, taskId });\n    try {\n      await runScheduledTask(queue, taskId);\n      dispatch({ type: RUN_SCHEDULED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"runScheduledTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_SCHEDULED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function runRetryTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_RETRY_TASK_BEGIN, queue, taskId });\n    try {\n      await runRetryTask(queue, taskId);\n      dispatch({ type: RUN_RETRY_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\"runRetryTaskAsync: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: RUN_RETRY_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function archivePendingTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_PENDING_TASK_BEGIN, queue, taskId });\n    try {\n      await archivePendingTask(queue, taskId);\n      dispatch({ type: ARCHIVE_PENDING_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"archivePendingTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_PENDING_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function archiveScheduledTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_SCHEDULED_TASK_BEGIN, queue, taskId });\n    try {\n      await archiveScheduledTask(queue, taskId);\n      dispatch({ type: ARCHIVE_SCHEDULED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"archiveScheduledTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_SCHEDULED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function archiveRetryTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_RETRY_TASK_BEGIN, queue, taskId });\n    try {\n      await archiveRetryTask(queue, taskId);\n      dispatch({ type: ARCHIVE_RETRY_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"archiveRetryTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_RETRY_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function runArchivedTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ARCHIVED_TASK_BEGIN, queue, taskId });\n    try {\n      await runArchivedTask(queue, taskId);\n      dispatch({ type: RUN_ARCHIVED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"runArchivedTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ARCHIVED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function deletePendingTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_PENDING_TASK_BEGIN, queue, taskId });\n    try {\n      await deletePendingTask(queue, taskId);\n      dispatch({ type: DELETE_PENDING_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deletePendingTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_PENDING_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeletePendingTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_PENDING_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeletePendingTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_PENDING_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeletePendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteScheduledTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_SCHEDULED_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteScheduledTask(queue, taskId);\n      dispatch({ type: DELETE_SCHEDULED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteScheduledTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_SCHEDULED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteScheduledTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_SCHEDULED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteScheduledTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchRunScheduledTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_RUN_SCHEDULED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchRunScheduledTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchRunScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_RUN_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchArchiveScheduledTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchArchiveScheduledTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchArchiveScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchArchivePendingTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_ARCHIVE_PENDING_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchArchivePendingTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchArchivePendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteAggregatingTaskAsync(\n  queue: string,\n  group: string,\n  taskId: string\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_AGGREGATING_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteAggregatingTask(queue, group, taskId);\n      dispatch({ type: DELETE_AGGREGATING_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteAggregatingTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_AGGREGATING_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function runAggregatingTaskAsync(\n  queue: string,\n  group: string,\n  taskId: string\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_AGGREGATING_TASK_BEGIN, queue, taskId });\n    try {\n      await runAggregatingTask(queue, group, taskId);\n      dispatch({ type: RUN_AGGREGATING_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"runAggregatingTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_AGGREGATING_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function archiveAggregatingTaskAsync(\n  queue: string,\n  group: string,\n  taskId: string\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_AGGREGATING_TASK_BEGIN, queue, taskId });\n    try {\n      await archiveAggregatingTask(queue, group, taskId);\n      dispatch({ type: ARCHIVE_AGGREGATING_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"archiveAggregatingTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_AGGREGATING_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchArchiveAggregatingTasksAsync(\n  queue: string,\n  group: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({\n      type: BATCH_ARCHIVE_AGGREGATING_TASKS_BEGIN,\n      queue,\n      group,\n      taskIds,\n    });\n    try {\n      const response = await batchArchiveAggregatingTasks(\n        queue,\n        group,\n        taskIds\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS,\n        payload: response,\n        queue,\n        group,\n      });\n    } catch (error) {\n      console.error(\n        \"batchArchiveAggregatingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_AGGREGATING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        group,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function archiveAllPendingTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_ALL_PENDING_TASKS_BEGIN, queue });\n    try {\n      await archiveAllPendingTasks(queue);\n      dispatch({ type: ARCHIVE_ALL_PENDING_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"archiveAllPendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_ALL_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteAllPendingTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_PENDING_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllPendingTasks(queue);\n      dispatch({\n        type: DELETE_ALL_PENDING_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllPendingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_PENDING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteAllAggregatingTasksAsync(queue: string, group: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_AGGREGATING_TASKS_BEGIN, queue, group });\n    try {\n      const response = await deleteAllAggregatingTasks(queue, group);\n      dispatch({\n        type: DELETE_ALL_AGGREGATING_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n        group,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllAggregatingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_AGGREGATING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        group,\n      });\n    }\n  };\n}\n\nexport function deleteAllScheduledTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_SCHEDULED_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllScheduledTasks(queue);\n      dispatch({\n        type: DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function runAllScheduledTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ALL_SCHEDULED_TASKS_BEGIN, queue });\n    try {\n      await runAllScheduledTasks(queue);\n      dispatch({ type: RUN_ALL_SCHEDULED_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"runAllScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ALL_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function archiveAllScheduledTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN, queue });\n    try {\n      await archiveAllScheduledTasks(queue);\n      dispatch({ type: ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"archiveAllScheduledTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_ALL_SCHEDULED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function archiveAllAggregatingTasksAsync(queue: string, group: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_ALL_AGGREGATING_TASKS_BEGIN, queue, group });\n    try {\n      const response = await archiveAllAggregatingTasks(queue, group);\n      dispatch({\n        type: ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS,\n        archived: response.archived,\n        queue,\n        group,\n      });\n    } catch (error) {\n      console.error(\n        \"archiveAllAggregatingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_ALL_AGGREGATING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        group,\n      });\n    }\n  };\n}\n\nexport function runAllAggregatingTasksAsync(queue: string, group: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ALL_AGGREGATING_TASKS_BEGIN, queue, group });\n    try {\n      const resp = await runAllAggregatingTasks(queue, group);\n      dispatch({\n        type: RUN_ALL_AGGREGATING_TASKS_SUCCESS,\n        scheduled: resp.scheduled,\n        queue,\n        group,\n      });\n    } catch (error) {\n      console.error(\n        \"runAllAggregatingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ALL_AGGREGATING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        group,\n      });\n    }\n  };\n}\n\nexport function deleteRetryTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_RETRY_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteRetryTask(queue, taskId);\n      dispatch({ type: DELETE_RETRY_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteRetryTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_RETRY_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteRetryTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_RETRY_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteRetryTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_RETRY_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchRunRetryTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_RUN_RETRY_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchRunRetryTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_RUN_RETRY_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchRunRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_RUN_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchRunAggregatingTasksAsync(\n  queue: string,\n  group: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({\n      type: BATCH_RUN_AGGREGATING_TASKS_BEGIN,\n      queue,\n      group,\n      taskIds,\n    });\n    try {\n      const response = await batchRunAggregatingTasks(queue, group, taskIds);\n      dispatch({\n        type: BATCH_RUN_AGGREGATING_TASKS_SUCCESS,\n        payload: response,\n        queue,\n        group,\n      });\n    } catch (error) {\n      console.error(\n        \"batchRunAggregatingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_RUN_AGGREGATING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        group,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchArchiveRetryTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_ARCHIVE_RETRY_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchArchiveRetryTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchArchiveRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_ARCHIVE_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteAllRetryTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_RETRY_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllRetryTasks(queue);\n      dispatch({\n        type: DELETE_ALL_RETRY_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function runAllRetryTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ALL_RETRY_TASKS_BEGIN, queue });\n    try {\n      await runAllRetryTasks(queue);\n      dispatch({ type: RUN_ALL_RETRY_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"runAllRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ALL_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function archiveAllRetryTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: ARCHIVE_ALL_RETRY_TASKS_BEGIN, queue });\n    try {\n      await archiveAllRetryTasks(queue);\n      dispatch({ type: ARCHIVE_ALL_RETRY_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"archiveAllRetryTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: ARCHIVE_ALL_RETRY_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteArchivedTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ARCHIVED_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteArchivedTask(queue, taskId);\n      dispatch({ type: DELETE_ARCHIVED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteArchivedTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ARCHIVED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteArchivedTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_ARCHIVED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteArchivedTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchRunArchivedTasksAsync(queue: string, taskIds: string[]) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_RUN_ARCHIVED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchRunArchivedTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchRunArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_RUN_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteAllArchivedTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_ARCHIVED_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllArchivedTasks(queue);\n      dispatch({\n        type: DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function runAllArchivedTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: RUN_ALL_ARCHIVED_TASKS_BEGIN, queue });\n    try {\n      await runAllArchivedTasks(queue);\n      dispatch({ type: RUN_ALL_ARCHIVED_TASKS_SUCCESS, queue });\n    } catch (error) {\n      console.error(\n        \"runAllArchivedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: RUN_ALL_ARCHIVED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n\nexport function deleteCompletedTaskAsync(queue: string, taskId: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_COMPLETED_TASK_BEGIN, queue, taskId });\n    try {\n      await deleteCompletedTask(queue, taskId);\n      dispatch({ type: DELETE_COMPLETED_TASK_SUCCESS, queue, taskId });\n    } catch (error) {\n      console.error(\n        \"deleteCompletedTaskAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_COMPLETED_TASK_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskId,\n      });\n    }\n  };\n}\n\nexport function batchDeleteCompletedTasksAsync(\n  queue: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: BATCH_DELETE_COMPLETED_TASKS_BEGIN, queue, taskIds });\n    try {\n      const response = await batchDeleteCompletedTasks(queue, taskIds);\n      dispatch({\n        type: BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n        queue: queue,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteCompletedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_COMPLETED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function batchDeleteAggregatingTasksAsync(\n  queue: string,\n  group: string,\n  taskIds: string[]\n) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({\n      type: BATCH_DELETE_AGGREGATING_TASKS_BEGIN,\n      queue,\n      group,\n      taskIds,\n    });\n    try {\n      const response = await batchDeleteAggregatingTasks(queue, group, taskIds);\n      dispatch({\n        type: BATCH_DELETE_AGGREGATING_TASKS_SUCCESS,\n        payload: response,\n        queue,\n        group,\n      });\n    } catch (error) {\n      console.error(\n        \"batchDeleteAggregatingTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: BATCH_DELETE_AGGREGATING_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n        group,\n        taskIds,\n      });\n    }\n  };\n}\n\nexport function deleteAllCompletedTasksAsync(queue: string) {\n  return async (dispatch: Dispatch<TasksActionTypes>) => {\n    dispatch({ type: DELETE_ALL_COMPLETED_TASKS_BEGIN, queue });\n    try {\n      const response = await deleteAllCompletedTasks(queue);\n      dispatch({\n        type: DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n        deleted: response.deleted,\n        queue,\n      });\n    } catch (error) {\n      console.error(\n        \"deleteAllCompletedTasksAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: DELETE_ALL_COMPLETED_TASKS_ERROR,\n        error: toErrorString(error),\n        queue,\n      });\n    }\n  };\n}\n","export const paths = () => ({\n  HOME: `${window.ROOT_PATH}/`,\n  SETTINGS: `${window.ROOT_PATH}/settings`,\n  SERVERS: `${window.ROOT_PATH}/servers`,\n  SCHEDULERS: `${window.ROOT_PATH}/schedulers`,\n  QUEUE_DETAILS: `${window.ROOT_PATH}/queues/:qname`,\n  REDIS: `${window.ROOT_PATH}/redis`,\n  TASK_DETAILS: `${window.ROOT_PATH}/queues/:qname/tasks/:taskId`,\n  QUEUE_METRICS: `${window.ROOT_PATH}/q/metrics`,\n});\n\n/**************************************************************\n                        Path Helper functions\n **************************************************************/\n\nexport function queueDetailsPath(qname: string, taskStatus?: string): string {\n  const path = paths().QUEUE_DETAILS.replace(\":qname\", qname);\n  if (taskStatus) {\n    return `${path}?status=${taskStatus}`;\n  }\n  return path;\n}\n\nexport function taskDetailsPath(qname: string, taskId: string): string {\n  return paths()\n    .TASK_DETAILS.replace(\":qname\", qname)\n    .replace(\":taskId\", taskId);\n}\n\n/**************************************************************\n                        URL Params\n **************************************************************/\n\nexport interface QueueDetailsRouteParams {\n  qname: string;\n}\n\nexport interface TaskDetailsRouteParams {\n  qname: string;\n  taskId: string;\n}\n","import { ThemePreference } from \"../reducers/settingsReducer\";\nimport { DailyStatsKey } from \"../views/DashboardView\";\n// List of settings related action types.\nexport const POLL_INTERVAL_CHANGE = \"POLL_INTERVAL_CHANGE\";\nexport const THEME_PREFERENCE_CHANGE = \"THEME_PREFERENCE_CHANGE\";\nexport const TOGGLE_DRAWER = \"TOGGLE_DRAWER\";\nexport const TASK_ROWS_PER_PAGE_CHANGE = \"TASK_ROWS_PER_PAGE_CHANGE\";\nexport const DAILY_STATS_KEY_CHANGE = \"DAILY_STATS_KEY_CHANGE\";\n\ninterface PollIntervalChangeAction {\n  type: typeof POLL_INTERVAL_CHANGE;\n  value: number; // new poll interval value in seconds\n}\n\ninterface ThemePreferenceChangeAction {\n  type: typeof THEME_PREFERENCE_CHANGE;\n  value: ThemePreference;\n}\n\ninterface ToggleDrawerAction {\n  type: typeof TOGGLE_DRAWER;\n}\n\ninterface TaskRowsPerPageChange {\n  type: typeof TASK_ROWS_PER_PAGE_CHANGE;\n  value: number;\n}\n\ninterface DailyStatsKeyChange {\n  type: typeof DAILY_STATS_KEY_CHANGE;\n  value: DailyStatsKey;\n}\n\n// Union of all settings related action types.\nexport type SettingsActionTypes =\n  | PollIntervalChangeAction\n  | ThemePreferenceChangeAction\n  | ToggleDrawerAction\n  | TaskRowsPerPageChange\n  | DailyStatsKeyChange;\n\nexport function pollIntervalChange(value: number) {\n  return {\n    type: POLL_INTERVAL_CHANGE,\n    value,\n  };\n}\n\nexport function selectTheme(value: ThemePreference) {\n  return {\n    type: THEME_PREFERENCE_CHANGE,\n    value,\n  };\n}\n\nexport function toggleDrawer() {\n  return { type: TOGGLE_DRAWER };\n}\n\nexport function taskRowsPerPageChange(value: number) {\n  return {\n    type: TASK_ROWS_PER_PAGE_CHANGE,\n    value,\n  };\n}\n\nexport function dailyStatsKeyChange(value: DailyStatsKey) {\n  return {\n    type: DAILY_STATS_KEY_CHANGE,\n    value,\n  }\n}\n","import React from \"react\";\nimport {\n  useTheme,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  })\n);\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    newPage: number\n  ) => void;\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nexport default TablePaginationActions;\n\nexport const rowsPerPageOptions = [10, 20, 30, 60, 100];\nexport const defaultPageSize = 20;\n","import { Dispatch } from \"redux\";\nimport {\n  deleteQueue,\n  listQueues,\n  ListQueuesResponse,\n  pauseQueue,\n  resumeQueue,\n} from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of queue related action types.\nexport const LIST_QUEUES_BEGIN = \"LIST_QUEUES_BEGIN\";\nexport const LIST_QUEUES_SUCCESS = \"LIST_QUEUES_SUCCESS\";\nexport const LIST_QUEUES_ERROR = \"LIST_QUEUES_ERROR\";\nexport const DELETE_QUEUE_BEGIN = \"DELETE_QUEUE_BEGIN\";\nexport const DELETE_QUEUE_SUCCESS = \"DELETE_QUEUE_SUCCESS\";\nexport const DELETE_QUEUE_ERROR = \"DELETE_QUEUE_ERROR\";\nexport const PAUSE_QUEUE_BEGIN = \"PAUSE_QUEUE_BEGIN\";\nexport const PAUSE_QUEUE_SUCCESS = \"PAUSE_QUEUE_SUCCESS\";\nexport const PAUSE_QUEUE_ERROR = \"PAUSE_QUEUE_ERROR\";\nexport const RESUME_QUEUE_BEGIN = \"RESUME_QUEUE_BEGIN\";\nexport const RESUME_QUEUE_SUCCESS = \"RESUME_QUEUE_SUCCESS\";\nexport const RESUME_QUEUE_ERROR = \"RESUME_QUEUE_ERROR\";\n\ninterface ListQueuesBeginAction {\n  type: typeof LIST_QUEUES_BEGIN;\n}\n\ninterface ListQueuesSuccessAction {\n  type: typeof LIST_QUEUES_SUCCESS;\n  payload: ListQueuesResponse;\n}\n\ninterface ListQueuesErrorAction {\n  type: typeof LIST_QUEUES_ERROR;\n  error: string;\n}\n\ninterface DeleteQueueBeginAction {\n  type: typeof DELETE_QUEUE_BEGIN;\n  queue: string; // name of the queue\n}\n\ninterface DeleteQueueSuccessAction {\n  type: typeof DELETE_QUEUE_SUCCESS;\n  queue: string; // name of the queue\n}\n\ninterface DeleteQueueErrorAction {\n  type: typeof DELETE_QUEUE_ERROR;\n  queue: string; // name of the queue\n  error: string; // error description\n}\n\ninterface PauseQueueBeginAction {\n  type: typeof PAUSE_QUEUE_BEGIN;\n  queue: string; // name of the queue\n}\n\ninterface PauseQueueSuccessAction {\n  type: typeof PAUSE_QUEUE_SUCCESS;\n  queue: string; // name of the queue\n}\n\ninterface PauseQueueErrorAction {\n  type: typeof PAUSE_QUEUE_ERROR;\n  queue: string; // name of the queue\n  error: string; // error description\n}\n\ninterface ResumeQueueBeginAction {\n  type: typeof RESUME_QUEUE_BEGIN;\n  queue: string; // name of the queue\n}\n\ninterface ResumeQueueSuccessAction {\n  type: typeof RESUME_QUEUE_SUCCESS;\n  queue: string; // name of the queue\n}\n\ninterface ResumeQueueErrorAction {\n  type: typeof RESUME_QUEUE_ERROR;\n  queue: string; // name of the queue\n  error: string; // error description\n}\n\n// Union of all queues related action types.\nexport type QueuesActionTypes =\n  | ListQueuesBeginAction\n  | ListQueuesSuccessAction\n  | ListQueuesErrorAction\n  | DeleteQueueBeginAction\n  | DeleteQueueSuccessAction\n  | DeleteQueueErrorAction\n  | PauseQueueBeginAction\n  | PauseQueueSuccessAction\n  | PauseQueueErrorAction\n  | ResumeQueueBeginAction\n  | ResumeQueueSuccessAction\n  | ResumeQueueErrorAction;\n\nexport function listQueuesAsync() {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({ type: LIST_QUEUES_BEGIN });\n    try {\n      const response = await listQueues();\n      dispatch({\n        type: LIST_QUEUES_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(`listQueuesAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: LIST_QUEUES_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function deleteQueueAsync(qname: string) {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({\n      type: DELETE_QUEUE_BEGIN,\n      queue: qname,\n    });\n    try {\n      await deleteQueue(qname);\n      // FIXME: this action doesn't get dispatched when server stalls\n      dispatch({\n        type: DELETE_QUEUE_SUCCESS,\n        queue: qname,\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: DELETE_QUEUE_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function pauseQueueAsync(qname: string) {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({ type: PAUSE_QUEUE_BEGIN, queue: qname });\n    try {\n      await pauseQueue(qname);\n      dispatch({ type: PAUSE_QUEUE_SUCCESS, queue: qname });\n    } catch (error) {\n      console.error(\"pauseQueueAsynq: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: PAUSE_QUEUE_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function resumeQueueAsync(qname: string) {\n  return async (dispatch: Dispatch<QueuesActionTypes>) => {\n    dispatch({ type: RESUME_QUEUE_BEGIN, queue: qname });\n    try {\n      await resumeQueue(qname);\n      dispatch({ type: RESUME_QUEUE_SUCCESS, queue: qname });\n    } catch (error) {\n      console.error(\"resumeQueueAsync: \", toErrorStringWithHttpStatus(error));\n      dispatch({\n        type: RESUME_QUEUE_ERROR,\n        queue: qname,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import { Dispatch } from \"redux\";\nimport { listQueueStats, ListQueueStatsResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\nexport const LIST_QUEUE_STATS_BEGIN = \"LIST_QUEUE_STATS_BEGIN\";\nexport const LIST_QUEUE_STATS_SUCCESS = \"LIST_QUEUE_STATS_SUCCESS\";\nexport const LIST_QUEUE_STATS_ERROR = \"LIST_QUEUE_STATS_ERROR\";\n\ninterface ListQueueStatsBeginAction {\n  type: typeof LIST_QUEUE_STATS_BEGIN;\n}\n\ninterface ListQueueStatsSuccessAction {\n  type: typeof LIST_QUEUE_STATS_SUCCESS;\n  payload: ListQueueStatsResponse;\n}\n\ninterface ListQueueStatsErrorAction {\n  type: typeof LIST_QUEUE_STATS_ERROR;\n  error: string;\n}\n\n// Union of all queue stats related action types.\nexport type QueueStatsActionTypes =\n  | ListQueueStatsBeginAction\n  | ListQueueStatsSuccessAction\n  | ListQueueStatsErrorAction;\n\nexport function listQueueStatsAsync() {\n  return async (dispatch: Dispatch<QueueStatsActionTypes>) => {\n    dispatch({ type: LIST_QUEUE_STATS_BEGIN });\n    try {\n      const response = await listQueueStats();\n      dispatch({\n        type: LIST_QUEUE_STATS_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        \"listQueueStatsAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_QUEUE_STATS_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { queueDetailsPath } from \"../paths\";\n\ninterface Props {\n  data: TaskBreakdown[];\n}\n\ninterface TaskBreakdown {\n  queue: string; // name of the queue.\n  active: number; // number of active tasks in the queue.\n  pending: number; // number of pending tasks in the queue.\n  aggregating: number; // number of aggregating tasks in the queue.\n  scheduled: number; // number of scheduled tasks in the queue.\n  retry: number; // number of retry tasks in the queue.\n  archived: number; // number of archived tasks in the queue.\n  completed: number; // number of completed tasks in the queue.\n}\n\nfunction QueueSizeChart(props: Props) {\n  const theme = useTheme();\n  const handleClick = (params: { activeLabel?: string } | null) => {\n    const allQueues = props.data.map((b) => b.queue);\n    if (\n      params &&\n      params.activeLabel &&\n      allQueues.includes(params.activeLabel)\n    ) {\n      history.push(queueDetailsPath(params.activeLabel));\n    }\n  };\n  const history = useHistory();\n  return (\n    <ResponsiveContainer>\n      <BarChart\n        data={props.data}\n        maxBarSize={120}\n        onClick={handleClick}\n        style={{ cursor: \"pointer\" }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"queue\" stroke={theme.palette.text.secondary} />\n        <YAxis stroke={theme.palette.text.secondary} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"active\" stackId=\"a\" fill=\"#1967d2\" />\n        <Bar dataKey=\"pending\" stackId=\"a\" fill=\"#669df6\" />\n        <Bar dataKey=\"aggregating\" stackId=\"a\" fill=\"#e69138\" />\n        <Bar dataKey=\"scheduled\" stackId=\"a\" fill=\"#fdd663\" />\n        <Bar dataKey=\"retry\" stackId=\"a\" fill=\"#f666a9\" />\n        <Bar dataKey=\"archived\" stackId=\"a\" fill=\"#ac4776\" />\n        <Bar dataKey=\"completed\" stackId=\"a\" fill=\"#4bb543\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default QueueSizeChart;\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\n\ninterface Props {\n  data: ProcessedStats[];\n}\n\ninterface ProcessedStats {\n  queue: string; // name of the queue.\n  succeeded: number; // number of tasks succeeded.\n  failed: number; // number of tasks failed.\n}\n\nfunction ProcessedTasksChart(props: Props) {\n  const theme = useTheme<Theme>();\n  return (\n    <ResponsiveContainer>\n      <BarChart data={props.data} maxBarSize={120}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"queue\" stroke={theme.palette.text.secondary} />\n        <YAxis stroke={theme.palette.text.secondary} />\n        <Tooltip />\n        <Legend />\n        <Bar\n          dataKey=\"succeeded\"\n          stackId=\"a\"\n          fill={theme.palette.success.light}\n        />\n        <Bar dataKey=\"failed\" stackId=\"a\" fill={theme.palette.error.light} />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default ProcessedTasksChart;\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Queue } from \"../api\";\nimport { AppState } from \"../store\";\nimport { deleteQueueAsync } from \"../actions/queuesActions\";\n\ninterface Props {\n  queue: Queue | null; // queue to delete\n  onClose: () => void;\n}\n\nfunction mapStateToProps(state: AppState, ownProps: Props) {\n  let requestPending = false;\n  if (ownProps.queue !== null) {\n    const q = state.queues.data.find((q) => q.name === ownProps.queue?.queue);\n    if (q !== undefined) {\n      requestPending = q.requestPending;\n    }\n  }\n  return {\n    requestPending,\n  };\n}\n\nconst connector = connect(mapStateToProps, { deleteQueueAsync });\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\nfunction DeleteQueueConfirmationDialog(props: Props & ReduxProps) {\n  const handleDeleteClick = () => {\n    if (!props.queue) {\n      return;\n    }\n    props.deleteQueueAsync(props.queue.queue);\n    props.onClose();\n  };\n  return (\n    <Dialog\n      open={props.queue !== null}\n      onClose={props.onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      {props.queue !== null &&\n        (props.queue.size > 0 ? (\n          <>\n            <DialogTitle id=\"alert-dialog-title\">\n              Queue is not empty\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                You are trying to delete a non-emtpy queue \"{props.queue.queue}\n                \". Please empty the queue first before deleting.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={props.onClose} color=\"primary\">\n                OK\n              </Button>\n            </DialogActions>\n          </>\n        ) : (\n          <>\n            <DialogTitle id=\"alert-dialog-title\">\n              Are you sure you want to delete \"{props.queue.queue}\"?\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                You can't undo this action.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={props.onClose}\n                disabled={props.requestPending}\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleDeleteClick}\n                disabled={props.requestPending}\n                color=\"primary\"\n                autoFocus\n              >\n                Delete\n              </Button>\n            </DialogActions>\n          </>\n        ))}\n    </Dialog>\n  );\n}\n\nexport default connector(DeleteQueueConfirmationDialog);\n","// SortDirection describes the direction of sort.\nexport enum SortDirection {\n  Asc = \"asc\",\n  Desc = \"desc\",\n}\n\n// TableColumn is a config for a table column.\nexport interface TableColumn {\n  key: string;\n  label: string;\n  align: \"left\" | \"right\" | \"center\";\n}\n\n// SortableTableColumn is a config for a table column\n// for table with sorting support.\n//\n// T is the enum of sort keys.\nexport interface SortableTableColumn<T> extends TableColumn {\n  sortBy: T;\n}\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DeleteQueueConfirmationDialog from \"./DeleteQueueConfirmationDialog\";\nimport { Queue } from \"../api\";\nimport { queueDetailsPath } from \"../paths\";\nimport { SortDirection, SortableTableColumn } from \"../types/table\";\nimport prettyBytes from \"pretty-bytes\";\nimport { percentage } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n}));\n\ninterface QueueWithMetadata extends Queue {\n  requestPending: boolean; // indicates pause/resume/delete request is pending for the queue.\n}\n\ninterface Props {\n  queues: QueueWithMetadata[];\n  onPauseClick: (qname: string) => Promise<void>;\n  onResumeClick: (qname: string) => Promise<void>;\n  onDeleteClick: (qname: string) => Promise<void>;\n}\n\nenum SortBy {\n  Queue,\n  State,\n  Size,\n  MemoryUsage,\n  Latency,\n  Processed,\n  Failed,\n  ErrorRate,\n\n  None, // no sort support\n}\n\nconst colConfigs: SortableTableColumn<SortBy>[] = [\n  { label: \"Queue\", key: \"queue\", sortBy: SortBy.Queue, align: \"left\" },\n  { label: \"State\", key: \"state\", sortBy: SortBy.State, align: \"left\" },\n  {\n    label: \"Size\",\n    key: \"size\",\n    sortBy: SortBy.Size,\n    align: \"right\",\n  },\n  {\n    label: \"Memory usage\",\n    key: \"memory_usage\",\n    sortBy: SortBy.MemoryUsage,\n    align: \"right\",\n  },\n  {\n    label: \"Latency\",\n    key: \"latency\",\n    sortBy: SortBy.Latency,\n    align: \"right\",\n  },\n  {\n    label: \"Processed\",\n    key: \"processed\",\n    sortBy: SortBy.Processed,\n    align: \"right\",\n  },\n  { label: \"Failed\", key: \"failed\", sortBy: SortBy.Failed, align: \"right\" },\n  {\n    label: \"Error rate\",\n    key: \"error_rate\",\n    sortBy: SortBy.ErrorRate,\n    align: \"right\",\n  },\n  { label: \"Actions\", key: \"actions\", sortBy: SortBy.None, align: \"center\" },\n];\n\n// sortQueues takes a array of queues and return a sorted array.\n// It returns a new array and leave the original array untouched.\nfunction sortQueues(\n  queues: QueueWithMetadata[],\n  cmpFn: (first: QueueWithMetadata, second: QueueWithMetadata) => number\n): QueueWithMetadata[] {\n  let copy = [...queues];\n  copy.sort(cmpFn);\n  return copy;\n}\n\nexport default function QueuesOverviewTable(props: Props) {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.Queue);\n  const [sortDir, setSortDir] = useState<SortDirection>(SortDirection.Asc);\n  const [queueToDelete, setQueueToDelete] = useState<QueueWithMetadata | null>(\n    null\n  );\n  const createSortClickHandler = (sortKey: SortBy) => (e: React.MouseEvent) => {\n    if (sortKey === sortBy) {\n      // Toggle sort direction.\n      const nextSortDir =\n        sortDir === SortDirection.Asc ? SortDirection.Desc : SortDirection.Asc;\n      setSortDir(nextSortDir);\n    } else {\n      // Change the sort key.\n      setSortBy(sortKey);\n    }\n  };\n\n  const cmpFunc = (q1: QueueWithMetadata, q2: QueueWithMetadata): number => {\n    let isQ1Smaller: boolean;\n    switch (sortBy) {\n      case SortBy.Queue:\n        if (q1.queue === q2.queue) return 0;\n        isQ1Smaller = q1.queue < q2.queue;\n        break;\n      case SortBy.State:\n        if (q1.paused === q2.paused) return 0;\n        isQ1Smaller = !q1.paused;\n        break;\n      case SortBy.Size:\n        if (q1.size === q2.size) return 0;\n        isQ1Smaller = q1.size < q2.size;\n        break;\n      case SortBy.MemoryUsage:\n        if (q1.memory_usage_bytes === q2.memory_usage_bytes) return 0;\n        isQ1Smaller = q1.memory_usage_bytes < q2.memory_usage_bytes;\n        break;\n      case SortBy.Latency:\n        if (q1.latency_msec === q2.latency_msec) return 0;\n        isQ1Smaller = q1.latency_msec < q2.latency_msec;\n        break;\n      case SortBy.Processed:\n        if (q1.processed === q2.processed) return 0;\n        isQ1Smaller = q1.processed < q2.processed;\n        break;\n      case SortBy.Failed:\n        if (q1.failed === q2.failed) return 0;\n        isQ1Smaller = q1.failed < q2.failed;\n        break;\n      case SortBy.ErrorRate:\n        const q1ErrorRate = q1.failed / q1.processed;\n        const q2ErrorRate = q2.failed / q2.processed;\n        if (q1ErrorRate === q2ErrorRate) return 0;\n        isQ1Smaller = q1ErrorRate < q2ErrorRate;\n        break;\n      default:\n        // eslint-disable-next-line no-throw-literal\n        throw `Unexpected order by value: ${sortBy}`;\n    }\n    if (sortDir === SortDirection.Asc) {\n      return isQ1Smaller ? -1 : 1;\n    } else {\n      return isQ1Smaller ? 1 : -1;\n    }\n  };\n\n  const handleDialogClose = () => {\n    setQueueToDelete(null);\n  };\n\n  return (\n    <React.Fragment>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"queues overview table\">\n          <TableHead>\n            <TableRow>\n              {colConfigs\n                .filter((cfg) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || cfg.key !== \"actions\";\n                })\n                .map((cfg, i) => (\n                  <TableCell\n                    key={cfg.key}\n                    align={cfg.align}\n                    className={clsx(i === 0 && classes.fixedCell)}\n                  >\n                    {cfg.sortBy !== SortBy.None ? (\n                      <TableSortLabel\n                        active={sortBy === cfg.sortBy}\n                        direction={sortDir}\n                        onClick={createSortClickHandler(cfg.sortBy)}\n                      >\n                        {cfg.label}\n                      </TableSortLabel>\n                    ) : (\n                      <div>{cfg.label}</div>\n                    )}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortQueues(props.queues, cmpFunc).map((q) => (\n              <Row\n                key={q.queue}\n                queue={q}\n                onPauseClick={() => props.onPauseClick(q.queue)}\n                onResumeClick={() => props.onResumeClick(q.queue)}\n                onDeleteClick={() => setQueueToDelete(q)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <DeleteQueueConfirmationDialog\n        onClose={handleDialogClose}\n        queue={queueToDelete}\n      />\n    </React.Fragment>\n  );\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  row: {\n    \"&:last-child td\": {\n      borderBottomWidth: 0,\n    },\n    \"&:last-child th\": {\n      borderBottomWidth: 0,\n    },\n  },\n  linkText: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  textGreen: {\n    color: theme.palette.success.dark,\n  },\n  textRed: {\n    color: theme.palette.error.dark,\n  },\n  boldCell: {\n    fontWeight: 600,\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n  actionIconsContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    minWidth: \"100px\",\n  },\n}));\n\ninterface RowProps {\n  queue: QueueWithMetadata;\n  onPauseClick: () => void;\n  onResumeClick: () => void;\n  onDeleteClick: () => void;\n}\n\nfunction Row(props: RowProps) {\n  const classes = useRowStyles();\n  const { queue: q } = props;\n  const [showIcons, setShowIcons] = useState<boolean>(false);\n  return (\n    <TableRow key={q.queue} className={classes.row}>\n      <TableCell\n        component=\"th\"\n        scope=\"row\"\n        className={clsx(classes.boldCell, classes.fixedCell)}\n      >\n        <Link to={queueDetailsPath(q.queue)} className={classes.linkText}>\n          {q.queue}\n        </Link>\n      </TableCell>\n      <TableCell>\n        {q.paused ? (\n          <span className={classes.textRed}>paused</span>\n        ) : (\n          <span className={classes.textGreen}>run</span>\n        )}\n      </TableCell>\n      <TableCell align=\"right\">{q.size}</TableCell>\n      <TableCell align=\"right\">{prettyBytes(q.memory_usage_bytes)}</TableCell>\n      <TableCell align=\"right\">{q.display_latency}</TableCell>\n      <TableCell align=\"right\">{q.processed}</TableCell>\n      <TableCell align=\"right\">{q.failed}</TableCell>\n      <TableCell align=\"right\">{percentage(q.failed, q.processed)}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          onMouseEnter={() => setShowIcons(true)}\n          onMouseLeave={() => setShowIcons(false)}\n        >\n          <div className={classes.actionIconsContainer}>\n            {showIcons ? (\n              <React.Fragment>\n                {q.paused ? (\n                  <Tooltip title=\"Resume\">\n                    <IconButton\n                      color=\"secondary\"\n                      onClick={props.onResumeClick}\n                      disabled={q.requestPending}\n                      size=\"small\"\n                    >\n                      <PlayCircleFilledIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                ) : (\n                  <Tooltip title=\"Pause\">\n                    <IconButton\n                      color=\"primary\"\n                      onClick={props.onPauseClick}\n                      disabled={q.requestPending}\n                      size=\"small\"\n                    >\n                      <PauseCircleFilledIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                <Tooltip title=\"Delete\">\n                  <IconButton onClick={props.onDeleteClick} size=\"small\">\n                    <DeleteIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </React.Fragment>\n            ) : (\n              <IconButton size=\"small\">\n                <MoreHorizIcon fontSize=\"small\" />\n              </IconButton>\n            )}\n          </div>\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n","import { Theme, withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// Export custom style tooltip.\nexport default withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 400,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { isDarkTheme } from \"../theme\";\n\ninterface Option {\n  label: string;\n  key: string;\n}\n\ninterface Props {\n  options: Option[];\n  initialSelectedKey: string;\n  onSelect: (key: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  popper: {\n    zIndex: 2,\n  },\n  buttonContained: {\n    backgroundColor: isDarkTheme(theme)\n      ? \"#303030\"\n      : theme.palette.background.default,\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}));\n\nexport default function SplitButton(props: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  const [selectedKey, setSelectedKey] = React.useState<string>(\n    props.initialSelectedKey\n  );\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    key: string\n  ) => {\n    setSelectedKey(key);\n    setOpen(false);\n    props.onSelect(key);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const selectedOpt = props.options.find((opt) => opt.key === selectedKey);\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        size=\"small\"\n        disableElevation\n      >\n        <Button classes={{ contained: classes.buttonContained }}>\n          {selectedOpt ? selectedOpt.label : \"Select Option\"}\n        </Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select option\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n          classes={{ contained: classes.buttonContained }}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        className={classes.popper}\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {props.options.map((opt) => (\n                    <MenuItem\n                      key={opt.key}\n                      selected={opt.key === selectedKey}\n                      onClick={(event) => handleMenuItemClick(event, opt.key)}\n                    >\n                      {opt.label}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n}\n","import { useEffect, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// usePolling repeatedly calls doFn with a fix time delay specified\n// by interval (in millisecond).\nexport function usePolling(doFn: () => void, interval: number) {\n  useEffect(() => {\n    doFn();\n    const id = setInterval(doFn, interval * 1000);\n    return () => clearInterval(id);\n  }, [interval, doFn]);\n}\n\n// useQuery gets the URL search params from the current URL.\nexport function useQuery(): URLSearchParams {\n  const { search } = useLocation();\n  return useMemo(() => new URLSearchParams(search), [search]);\n}\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\nimport { DailyStat } from \"../api\";\n\ninterface Props {\n  data: { [qname: string]: DailyStat[] };\n  numDays: number;\n}\n\ninterface ChartData {\n  succeeded: number;\n  failed: number;\n  date: string;\n}\n\nexport default function DailyStatsChart(props: Props) {\n  const data = makeChartData(props.data, props.numDays);\n  const theme = useTheme<Theme>();\n  return (\n    <ResponsiveContainer>\n      <LineChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"date\"\n          minTickGap={10}\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis stroke={theme.palette.text.secondary} />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"succeeded\"\n          stroke={theme.palette.success.main}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"failed\"\n          stroke={theme.palette.error.main}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nfunction makeChartData(\n  queueStats: { [qname: string]: DailyStat[] },\n  numDays: number\n): ChartData[] {\n  const dataByDate: { [date: string]: ChartData } = {};\n  for (const qname in queueStats) {\n    for (const stat of queueStats[qname]) {\n      if (!dataByDate.hasOwnProperty(stat.date)) {\n        dataByDate[stat.date] = { succeeded: 0, failed: 0, date: stat.date };\n      }\n      dataByDate[stat.date].succeeded += stat.processed - stat.failed;\n      dataByDate[stat.date].failed += stat.failed;\n    }\n  }\n  return Object.values(dataByDate).sort(sortByDate).slice(-numDays);\n}\n\nfunction sortByDate(x: ChartData, y: ChartData): number {\n  return Date.parse(x.date) - Date.parse(y.date);\n}\n","import React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport {\n  listQueuesAsync,\n  pauseQueueAsync,\n  resumeQueueAsync,\n  deleteQueueAsync,\n} from \"../actions/queuesActions\";\nimport { listQueueStatsAsync } from \"../actions/queueStatsActions\";\nimport { dailyStatsKeyChange } from \"../actions/settingsActions\";\nimport { AppState } from \"../store\";\nimport QueueSizeChart from \"../components/QueueSizeChart\";\nimport ProcessedTasksChart from \"../components/ProcessedTasksChart\";\nimport QueuesOverviewTable from \"../components/QueuesOverviewTable\";\nimport Tooltip from \"../components/Tooltip\";\nimport SplitButton from \"../components/SplitButton\";\nimport { usePolling } from \"../hooks\";\nimport DailyStatsChart from \"../components/DailyStatsChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  chartHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(2),\n  },\n  chartHeaderTitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  chartContainer: {\n    width: \"100%\",\n    height: \"300px\",\n  },\n  infoIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.grey[500],\n    cursor: \"pointer\",\n  },\n  tooltipSection: {\n    marginBottom: \"4px\",\n  },\n  tableContainer: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.queues.loading,\n    queues: state.queues.data.map((q) => ({\n      ...q.currentStats,\n      requestPending: q.requestPending,\n    })),\n    error: state.queues.error,\n    pollInterval: state.settings.pollInterval,\n    queueStats: state.queueStats.data,\n    dailyStatsKey: state.settings.dailyStatsChartType,\n  };\n}\n\nconst mapDispatchToProps = {\n  listQueuesAsync,\n  pauseQueueAsync,\n  resumeQueueAsync,\n  deleteQueueAsync,\n  listQueueStatsAsync,\n  dailyStatsKeyChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\nexport type DailyStatsKey = \"today\" | \"last-7d\" | \"last-30d\" | \"last-90d\";\nexport const defaultDailyStatsKey = \"last-7d\";\n\nfunction DashboardView(props: Props) {\n  const {\n    pollInterval,\n    listQueuesAsync,\n    queues,\n    listQueueStatsAsync,\n    dailyStatsKey,\n  } = props;\n  const classes = useStyles();\n\n  usePolling(listQueuesAsync, pollInterval);\n\n  // Refetch queue stats if a queue is added or deleted.\n  const qnames = queues\n    .map((q) => q.queue)\n    .sort()\n    .join(\",\");\n\n  useEffect(() => {\n    listQueueStatsAsync();\n  }, [listQueueStatsAsync, qnames]);\n\n  const processedStats = queues.map((q) => ({\n    queue: q.queue,\n    succeeded: q.processed - q.failed,\n    failed: q.failed,\n  }));\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error.length > 0 && (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve queues live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <div className={classes.chartHeader}>\n              <div className={classes.chartHeaderTitle}>\n                <Typography variant=\"h6\">Queue Size</Typography>\n                <Tooltip\n                  title={\n                    <div>\n                      <div className={classes.tooltipSection}>\n                        Total number of tasks in the queue\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Active</strong>: number of tasks currently being\n                        processed\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Pending</strong>: number of tasks ready to be\n                        processed\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Scheduled</strong>: number of tasks scheduled to\n                        be processed in the future\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Retry</strong>: number of tasks scheduled to be\n                        retried in the future\n                      </div>\n                      <div>\n                        <strong>Archived</strong>: number of tasks exhausted\n                        their retries\n                      </div>\n                    </div>\n                  }\n                >\n                  <InfoIcon fontSize=\"small\" className={classes.infoIcon} />\n                </Tooltip>\n              </div>\n            </div>\n            <div className={classes.chartContainer}>\n              <QueueSizeChart data={queues} />\n            </div>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <div className={classes.chartHeader}>\n              <div className={classes.chartHeaderTitle}>\n                <Typography variant=\"h6\">Tasks Processed</Typography>\n                <Tooltip\n                  title={\n                    <div>\n                      <div className={classes.tooltipSection}>\n                        Total number of tasks processed in a given day (UTC)\n                      </div>\n                      <div className={classes.tooltipSection}>\n                        <strong>Succeeded</strong>: number of tasks successfully\n                        processed\n                      </div>\n                      <div>\n                        <strong>Failed</strong>: number of tasks failed to be\n                        processed\n                      </div>\n                    </div>\n                  }\n                >\n                  <InfoIcon fontSize=\"small\" className={classes.infoIcon} />\n                </Tooltip>\n              </div>\n              <div>\n                <SplitButton\n                  options={[\n                    { label: \"Today\", key: \"today\" },\n                    { label: \"Last 7d\", key: \"last-7d\" },\n                    { label: \"Last 30d\", key: \"last-30d\" },\n                    { label: \"Last 90d\", key: \"last-90d\" },\n                  ]}\n                  initialSelectedKey={dailyStatsKey}\n                  onSelect={(key) =>\n                    props.dailyStatsKeyChange(key as DailyStatsKey)\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes.chartContainer}>\n              {dailyStatsKey === \"today\" && (\n                <ProcessedTasksChart data={processedStats} />\n              )}\n              {dailyStatsKey === \"last-7d\" && (\n                <DailyStatsChart data={props.queueStats} numDays={7} />\n              )}\n              {dailyStatsKey === \"last-30d\" && (\n                <DailyStatsChart data={props.queueStats} numDays={30} />\n              )}\n              {dailyStatsKey === \"last-90d\" && (\n                <DailyStatsChart data={props.queueStats} numDays={90} />\n              )}\n            </div>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} className={classes.tableContainer}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            {/* TODO: Add loading indicator  */}\n            <QueuesOverviewTable\n              queues={queues}\n              onPauseClick={props.pauseQueueAsync}\n              onResumeClick={props.resumeQueueAsync}\n              onDeleteClick={props.deleteQueueAsync}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(DashboardView);\n","import {\n  DAILY_STATS_KEY_CHANGE,\n  POLL_INTERVAL_CHANGE,\n  SettingsActionTypes,\n  TASK_ROWS_PER_PAGE_CHANGE,\n  THEME_PREFERENCE_CHANGE,\n  TOGGLE_DRAWER,\n} from \"../actions/settingsActions\";\nimport { defaultPageSize } from \"../components/TablePaginationActions\"\nimport { DailyStatsKey, defaultDailyStatsKey } from \"../views/DashboardView\";\n\nexport enum ThemePreference {\n  SystemDefault,\n  Always,\n  Never,\n}\n\nexport interface SettingsState {\n  // Time duration between data refresh.\n  pollInterval: number;\n\n  // UI theme setting.\n  themePreference: ThemePreference;\n\n  // Whether the drawer (i.e. sidebar) is open or not.\n  isDrawerOpen: boolean;\n\n  // Number of tasks displayed in task table.\n  taskRowsPerPage: number,\n\n  // Type of the chart displayed for \"Processed Tasks\" section in dashboard.\n  dailyStatsChartType: DailyStatsKey;\n}\n\nexport const initialState: SettingsState = {\n  pollInterval: 8,\n  themePreference: ThemePreference.SystemDefault,\n  isDrawerOpen: true,\n  taskRowsPerPage: defaultPageSize,\n  dailyStatsChartType: defaultDailyStatsKey,\n};\n\nfunction settingsReducer(\n  state = initialState,\n  action: SettingsActionTypes\n): SettingsState {\n  switch (action.type) {\n    case POLL_INTERVAL_CHANGE:\n      return {\n        ...state,\n        pollInterval: action.value,\n      };\n\n    case THEME_PREFERENCE_CHANGE:\n      return {\n        ...state,\n        themePreference: action.value,\n      };\n\n    case TOGGLE_DRAWER:\n      return {\n        ...state,\n        isDrawerOpen: !state.isDrawerOpen,\n      };\n\n    case TASK_ROWS_PER_PAGE_CHANGE:\n      return {\n        ...state,\n        taskRowsPerPage: action.value,\n      }\n\n    case DAILY_STATS_KEY_CHANGE:\n      return {\n        ...state,\n        dailyStatsChartType: action.value,\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default settingsReducer;\n","import { createTheme, Theme } from \"@material-ui/core/styles\";\nimport { ThemePreference } from \"./reducers/settingsReducer\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nexport function useTheme(themePreference: ThemePreference): Theme {\n  let prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  if (themePreference === ThemePreference.Always) {\n    prefersDarkMode = true;\n  } else if (themePreference === ThemePreference.Never) {\n    prefersDarkMode = false;\n  }\n  return createTheme({\n    // Got color palette from https://htmlcolors.com/palette/31/stripe\n    palette: {\n      primary: {\n        main: \"#4379FF\",\n      },\n      secondary: {\n        main: \"#97FBD1\",\n      },\n      background: {\n        default: \"#f5f7f9\",\n      },\n      type: prefersDarkMode ? \"dark\" : \"light\",\n    },\n  });\n}\n\nexport function isDarkTheme(theme: Theme): boolean {\n  return theme.palette.type === \"dark\";\n}\n","export const CLOSE_SNACKBAR = \"CLOSE_SNACKBAR\";\n\ninterface CloseSnakbarAction {\n  type: typeof CLOSE_SNACKBAR;\n}\n\n// Union of all snackbar related action types\nexport type SnackbarActionTypes = CloseSnakbarAction;\n\nexport function closeSnackbar() {\n  return { type: CLOSE_SNACKBAR };\n}\n","import React, { ReactElement } from \"react\";\nimport clsx from \"clsx\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  useRouteMatch,\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from \"react-router-dom\";\nimport { isDarkTheme } from \"../theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    borderTopRightRadius: \"24px\",\n    borderBottomRightRadius: \"24px\",\n  },\n  selected: {\n    backgroundColor: isDarkTheme(theme)\n      ? `${theme.palette.secondary.main}30`\n      : `${theme.palette.primary.main}30`,\n  },\n  selectedText: {\n    fontWeight: 600,\n    color: isDarkTheme(theme)\n      ? theme.palette.secondary.main\n      : theme.palette.primary.main,\n  },\n  selectedIcon: {\n    color: isDarkTheme(theme)\n      ? theme.palette.secondary.main\n      : theme.palette.primary.main,\n  },\n}));\n\ninterface Props {\n  to: string;\n  primary: string;\n  icon?: ReactElement;\n}\n\n// Note: See https://material-ui.com/guides/composition/ for details.\nfunction ListItemLink(props: Props): ReactElement {\n  const classes = useStyles();\n  const { icon, primary, to } = props;\n  const isMatch = useRouteMatch({\n    path: to,\n    strict: true,\n    sensitive: true,\n    exact: true,\n  });\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<any, Omit<RouterLinkProps, \"to\">>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n  return (\n    <li>\n      <Tooltip title={primary} placement=\"right\">\n        <ListItem\n          button\n          component={renderLink}\n          className={clsx(classes.listItem, isMatch && classes.selected)}\n        >\n          {icon && (\n            <ListItemIcon className={clsx(isMatch && classes.selectedIcon)}>\n              {icon}\n            </ListItemIcon>\n          )}\n          <ListItemText\n            primary={primary}\n            classes={{\n              primary: isMatch ? classes.selectedText : undefined,\n            }}\n          />\n        </ListItem>\n      </Tooltip>\n    </li>\n  );\n}\n\nexport default ListItemLink;\n","import React from \"react\";\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\nimport { Light as ReactSyntaxHighlighter } from \"react-syntax-highlighter\";\nimport json from \"react-syntax-highlighter/dist/esm/languages/hljs/json\";\nimport styleDark from \"react-syntax-highlighter/dist/esm/styles/hljs/atom-one-dark\";\nimport styleLight from \"react-syntax-highlighter/dist/esm/styles/hljs/atom-one-light\";\nimport { isDarkTheme } from \"../theme\";\n\ninterface Props {\n  language: string;\n  children: string;\n  customStyle?: object;\n}\n\nReactSyntaxHighlighter.registerLanguage(\"json\", json);\n\n// Theme aware syntax-highlighter component.\nexport default function SyntaxHighlighter(props: Props) {\n  const theme = useTheme<Theme>();\n  const style = isDarkTheme(theme) ? styleDark : styleLight;\n  return (\n    <ReactSyntaxHighlighter\n      language={props.language}\n      style={style}\n      customStyle={props.customStyle}\n    >\n      {props.children}\n    </ReactSyntaxHighlighter>\n  );\n}\n","import { Dispatch } from \"@reduxjs/toolkit\";\nimport {\n  listSchedulerEnqueueEvents,\n  ListSchedulerEnqueueEventsResponse,\n  listSchedulerEntries,\n  ListSchedulerEntriesResponse,\n} from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of scheduler-entry related action types.\nexport const LIST_SCHEDULER_ENTRIES_BEGIN = \"LIST_SCHEDULER_ENTRIES_BEGIN\";\nexport const LIST_SCHEDULER_ENTRIES_SUCCESS = \"LIST_SCHEDULER_ENTRIES_SUCCESS\";\nexport const LIST_SCHEDULER_ENTRIES_ERROR = \"LIST_SCHEDULER_ENTRIES_ERROR\";\nexport const LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN =\n  \"LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN\";\nexport const LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS =\n  \"LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS\";\nexport const LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR =\n  \"LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR\";\n\ninterface ListSchedulerEntriesBeginAction {\n  type: typeof LIST_SCHEDULER_ENTRIES_BEGIN;\n}\n\ninterface ListSchedulerEntriesSuccessAction {\n  type: typeof LIST_SCHEDULER_ENTRIES_SUCCESS;\n  payload: ListSchedulerEntriesResponse;\n}\n\ninterface ListSchedulerEntriesErrorAction {\n  type: typeof LIST_SCHEDULER_ENTRIES_ERROR;\n  error: string; // error description\n}\n\ninterface ListSchedulerEnqueueEventBeginAction {\n  type: typeof LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN;\n  entryId: string;\n}\n\ninterface ListSchedulerEnqueueEventSuccessAction {\n  type: typeof LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS;\n  entryId: string;\n  payload: ListSchedulerEnqueueEventsResponse;\n}\n\ninterface ListSchedulerEnqueueEventErrorAction {\n  type: typeof LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR;\n  entryId: string;\n  error: string;\n}\n\n// Union of all scheduler-entry related actions.\nexport type SchedulerEntriesActionTypes =\n  | ListSchedulerEntriesBeginAction\n  | ListSchedulerEntriesSuccessAction\n  | ListSchedulerEntriesErrorAction\n  | ListSchedulerEnqueueEventBeginAction\n  | ListSchedulerEnqueueEventSuccessAction\n  | ListSchedulerEnqueueEventErrorAction;\n\nexport function listSchedulerEntriesAsync() {\n  return async (dispatch: Dispatch<SchedulerEntriesActionTypes>) => {\n    dispatch({ type: LIST_SCHEDULER_ENTRIES_BEGIN });\n    try {\n      const response = await listSchedulerEntries();\n      dispatch({\n        type: LIST_SCHEDULER_ENTRIES_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(\n        `listSchedulerEnqueueEventsAsync: ${toErrorStringWithHttpStatus(error)}`\n      );\n      dispatch({\n        type: LIST_SCHEDULER_ENTRIES_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n\nexport function listSchedulerEnqueueEventsAsync(entryId: string) {\n  return async (dispatch: Dispatch<SchedulerEntriesActionTypes>) => {\n    dispatch({ type: LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN, entryId });\n    try {\n      const response = await listSchedulerEnqueueEvents(entryId);\n      dispatch({\n        type: LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS,\n        payload: response,\n        entryId,\n      });\n    } catch (error) {\n      console.error(\n        \"listSchedulerEnqueueEventsAsync: \",\n        toErrorStringWithHttpStatus(error)\n      );\n      dispatch({\n        type: LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR,\n        error: toErrorString(error),\n        entryId,\n      });\n    }\n  };\n}\n","import uniqBy from \"lodash.uniqby\";\nimport {\n  LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN,\n  LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR,\n  LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS,\n  LIST_SCHEDULER_ENTRIES_BEGIN,\n  LIST_SCHEDULER_ENTRIES_ERROR,\n  LIST_SCHEDULER_ENTRIES_SUCCESS,\n  SchedulerEntriesActionTypes,\n} from \"../actions/schedulerEntriesActions\";\nimport { SchedulerEnqueueEvent, SchedulerEntry } from \"../api\";\n\ninterface SchedulerEntriesState {\n  loading: boolean;\n  data: SchedulerEntry[];\n  error: string; // error description\n  enqueueEventsByEntryId: {\n    [entryId: string]: { data: SchedulerEnqueueEvent[]; loading: boolean };\n  };\n}\n\nexport function getEnqueueEventsEntry(\n  state: SchedulerEntriesState,\n  entryId: string\n): { data: SchedulerEnqueueEvent[]; loading: boolean } {\n  return state.enqueueEventsByEntryId[entryId] || { data: [], loading: false };\n}\n\nconst initialState: SchedulerEntriesState = {\n  loading: false,\n  data: [],\n  error: \"\",\n  enqueueEventsByEntryId: {},\n};\n\nfunction schedulerEntriesReducer(\n  state = initialState,\n  action: SchedulerEntriesActionTypes\n): SchedulerEntriesState {\n  switch (action.type) {\n    case LIST_SCHEDULER_ENTRIES_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LIST_SCHEDULER_ENTRIES_SUCCESS:\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        data: action.payload.entries,\n      };\n    case LIST_SCHEDULER_ENTRIES_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case LIST_SCHEDULER_ENQUEUE_EVENTS_BEGIN: {\n      const entry = getEnqueueEventsEntry(state, action.entryId);\n      return {\n        ...state,\n        enqueueEventsByEntryId: {\n          ...state.enqueueEventsByEntryId,\n          [action.entryId]: {\n            ...entry,\n            loading: true,\n          },\n        },\n      };\n    }\n    case LIST_SCHEDULER_ENQUEUE_EVENTS_SUCCESS: {\n      const sortByEnqueuedAt = (\n        e1: SchedulerEnqueueEvent,\n        e2: SchedulerEnqueueEvent\n      ): number => {\n        return Date.parse(e2.enqueued_at) - Date.parse(e1.enqueued_at);\n      };\n      const entry = getEnqueueEventsEntry(state, action.entryId);\n      const newData = uniqBy(\n        [...entry.data, ...action.payload.events],\n        \"task_id\"\n      ).sort(sortByEnqueuedAt);\n      return {\n        ...state,\n        enqueueEventsByEntryId: {\n          ...state.enqueueEventsByEntryId,\n          [action.entryId]: {\n            loading: false,\n            data: newData,\n          },\n        },\n      };\n    }\n    case LIST_SCHEDULER_ENQUEUE_EVENTS_ERROR: {\n      const entry = getEnqueueEventsEntry(state, action.entryId);\n      return {\n        ...state,\n        enqueueEventsByEntryId: {\n          ...state.enqueueEventsByEntryId,\n          [action.entryId]: {\n            ...entry,\n            loading: false,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default schedulerEntriesReducer;\n","import React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { AppState } from \"../store\";\nimport { getEnqueueEventsEntry } from \"../reducers/schedulerEntriesReducer\";\nimport { listSchedulerEnqueueEventsAsync } from \"../actions/schedulerEntriesActions\";\nimport { timeAgo } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    height: \"80vh\",\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n}));\n\nfunction mapStateToProps(state: AppState, ownProps: Props) {\n  return {\n    events: getEnqueueEventsEntry(state.schedulerEntries, ownProps.entryId),\n  };\n}\n\nconst connector = connect(mapStateToProps, { listSchedulerEnqueueEventsAsync });\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  entryId: string; // Scheduler Entry ID\n}\n\nfunction SchedulerEnqueueEventsTable(props: Props & ReduxProps) {\n  const classes = useStyles();\n  const { listSchedulerEnqueueEventsAsync, entryId, events } = props;\n\n  useEffect(() => {\n    listSchedulerEnqueueEventsAsync(entryId);\n  }, [entryId, listSchedulerEnqueueEventsAsync]);\n\n  // TODO: loading state UI\n\n  // TODO: \"Load More\" button OR infinite scroll\n\n  return (\n    <TableContainer className={classes.table}>\n      <Table\n        stickyHeader\n        aria-label=\"scheduler enqueue events table\"\n        size=\"small\"\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell classes={{ stickyHeader: classes.stickyHeaderCell }}>\n              Enqueued\n            </TableCell>\n            <TableCell classes={{ stickyHeader: classes.stickyHeaderCell }}>\n              Task ID\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {events.data.map((e) => (\n            <TableRow key={e.task_id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {timeAgo(e.enqueued_at)}\n              </TableCell>\n              <TableCell>{e.task_id}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default connector(SchedulerEnqueueEventsTable);\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport { SortDirection, SortableTableColumn } from \"../types/table\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport { SchedulerEntry } from \"../api\";\nimport { timeAgo, durationBefore, prettifyPayload } from \"../utils\";\nimport SchedulerEnqueueEventsTable from \"./SchedulerEnqueueEventsTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  noBorder: {\n    border: \"none\",\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  modalContent: {\n    background: theme.palette.background.paper,\n    padding: theme.spacing(2),\n    width: \"540px\",\n    outline: \"none\",\n    borderRadius: theme.shape.borderRadius,\n  },\n  eventsTable: {\n    maxHeight: \"80vh\",\n  },\n}));\n\nenum SortBy {\n  EntryId,\n  Spec,\n  Type,\n  Payload,\n  Options,\n  NextEnqueue,\n  PrevEnqueue,\n\n  None,\n}\n\nconst colConfigs: SortableTableColumn<SortBy>[] = [\n  {\n    label: \"Entry ID\",\n    key: \"entry_id\",\n    sortBy: SortBy.EntryId,\n    align: \"left\",\n  },\n  {\n    label: \"Spec\",\n    key: \"spec\",\n    sortBy: SortBy.Spec,\n    align: \"left\",\n  },\n  {\n    label: \"Type\",\n    key: \"type\",\n    sortBy: SortBy.Type,\n    align: \"left\",\n  },\n  {\n    label: \"Payload\",\n    key: \"task_payload\",\n    sortBy: SortBy.Payload,\n    align: \"left\",\n  },\n  {\n    label: \"Options\",\n    key: \"options\",\n    sortBy: SortBy.Options,\n    align: \"left\",\n  },\n  {\n    label: \"Next Enqueue\",\n    key: \"next_enqueue\",\n    sortBy: SortBy.NextEnqueue,\n    align: \"left\",\n  },\n  {\n    label: \"Prev Enqueue\",\n    key: \"prev_enqueue\",\n    sortBy: SortBy.PrevEnqueue,\n    align: \"left\",\n  },\n  {\n    label: \"\",\n    key: \"show_history\",\n    sortBy: SortBy.None,\n    align: \"left\",\n  },\n];\n\n// sortEntries takes a array of entries and return a sorted array.\n// It returns a new array and leave the original array untouched.\nfunction sortEntries(\n  entries: SchedulerEntry[],\n  cmpFn: (first: SchedulerEntry, second: SchedulerEntry) => number\n): SchedulerEntry[] {\n  let copy = [...entries];\n  copy.sort(cmpFn);\n  return copy;\n}\n\ninterface Props {\n  entries: SchedulerEntry[];\n}\n\nexport default function SchedulerEntriesTable(props: Props) {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.EntryId);\n  const [sortDir, setSortDir] = useState<SortDirection>(SortDirection.Asc);\n  const [activeEntryId, setActiveEntryId] = useState<string>(\"\");\n\n  const createSortClickHandler = (sortKey: SortBy) => (e: React.MouseEvent) => {\n    if (sortKey === sortBy) {\n      // Toggle sort direction.\n      const nextSortDir =\n        sortDir === SortDirection.Asc ? SortDirection.Desc : SortDirection.Asc;\n      setSortDir(nextSortDir);\n    } else {\n      // Change the sort key.\n      setSortBy(sortKey);\n    }\n  };\n\n  const cmpFunc = (e1: SchedulerEntry, e2: SchedulerEntry): number => {\n    let isE1Smaller: boolean;\n    switch (sortBy) {\n      case SortBy.EntryId:\n        if (e1.id === e2.id) return 0;\n        isE1Smaller = e1.id < e2.id;\n        break;\n      case SortBy.Spec:\n        if (e1.spec === e2.spec) return 0;\n        isE1Smaller = e1.spec < e2.spec;\n        break;\n      case SortBy.Type:\n        if (e1.task_type === e2.task_type) return 0;\n        isE1Smaller = e1.task_type < e2.task_type;\n        break;\n      case SortBy.Payload:\n        if (e1.task_payload === e2.task_payload) return 0;\n        isE1Smaller = e1.task_payload < e2.task_payload;\n        break;\n      case SortBy.Options:\n        if (e1.options === e2.options) return 0;\n        isE1Smaller = e1.options < e2.options;\n        break;\n      case SortBy.NextEnqueue:\n        if (e1.next_enqueue_at === e2.next_enqueue_at) return 0;\n        isE1Smaller = e1.next_enqueue_at < e2.next_enqueue_at;\n        break;\n      case SortBy.PrevEnqueue:\n        const e1PrevEnqueueAt = e1.prev_enqueue_at || \"\";\n        const e2PrevEnqueueAt = e2.prev_enqueue_at || \"\";\n        if (e1PrevEnqueueAt === e2PrevEnqueueAt) return 0;\n        isE1Smaller = e1PrevEnqueueAt < e2PrevEnqueueAt;\n        break;\n      default:\n        // eslint-disable-next-line no-throw-literal\n        throw `Unexpected order by value: ${sortBy}`;\n    }\n    if (sortDir === SortDirection.Asc) {\n      return isE1Smaller ? -1 : 1;\n    } else {\n      return isE1Smaller ? 1 : -1;\n    }\n  };\n\n  if (props.entries.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        <AlertTitle>Info</AlertTitle>\n        No entries found at this time.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"scheduler entries table\">\n          <TableHead>\n            <TableRow>\n              {colConfigs.map((cfg, i) => (\n                <TableCell\n                  key={cfg.key}\n                  align={cfg.align}\n                  className={clsx(i === 0 && classes.fixedCell)}\n                >\n                  <TableSortLabel\n                    active={cfg.sortBy === sortBy}\n                    direction={sortDir}\n                    onClick={createSortClickHandler(cfg.sortBy)}\n                  >\n                    {cfg.label}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortEntries(props.entries, cmpFunc).map((entry, idx) => (\n              <Row\n                key={entry.id}\n                entry={entry}\n                isLastRow={idx === props.entries.length - 1}\n                onShowHistoryClick={() => setActiveEntryId(entry.id)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n        <Modal\n          open={activeEntryId !== \"\"}\n          onClose={() => setActiveEntryId(\"\")}\n          className={classes.modal}\n        >\n          <div className={classes.modalContent}>\n            <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\n              Recent History\n            </Typography>\n            <SchedulerEnqueueEventsTable entryId={activeEntryId} />\n          </div>\n        </Modal>\n      </TableContainer>\n    </>\n  );\n}\n\ninterface RowProps {\n  entry: SchedulerEntry;\n  isLastRow: boolean;\n  onShowHistoryClick: () => void;\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  rowRoot: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  noBorder: {\n    border: \"none\",\n  },\n}));\n\nfunction Row(props: RowProps) {\n  const { entry, isLastRow } = props;\n  const classes = useRowStyles();\n  return (\n    <TableRow className={classes.rowRoot}>\n      <TableCell\n        component=\"th\"\n        scope=\"row\"\n        className={clsx(isLastRow && classes.noBorder)}\n      >\n        {entry.id}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {entry.spec}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {entry.task_type}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        <SyntaxHighlighter language=\"json\">\n          {prettifyPayload(entry.task_payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        <SyntaxHighlighter language=\"go\">\n          {entry.options.length > 0 ? entry.options.join(\", \") : \"No options\"}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {durationBefore(entry.next_enqueue_at)}\n      </TableCell>\n      <TableCell className={clsx(isLastRow && classes.noBorder)}>\n        {entry.prev_enqueue_at ? timeAgo(entry.prev_enqueue_at) : \"N/A\"}\n      </TableCell>\n      <TableCell>\n        <Tooltip title=\"See History\">\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={props.onShowHistoryClick}\n          >\n            <HistoryIcon />\n          </IconButton>\n        </Tooltip>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SchedulerEntriesTable from \"../components/SchedulerEntriesTable\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport { AppState } from \"../store\";\nimport { listSchedulerEntriesAsync } from \"../actions/schedulerEntriesActions\";\nimport { usePolling } from \"../hooks\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  heading: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.schedulerEntries.loading,\n    error: state.schedulerEntries.error,\n    entries: state.schedulerEntries.data,\n    pollInterval: state.settings.pollInterval,\n  };\n}\n\nconst connector = connect(mapStateToProps, { listSchedulerEntriesAsync });\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction SchedulersView(props: Props) {\n  const { pollInterval, listSchedulerEntriesAsync } = props;\n  const classes = useStyles();\n\n  usePolling(listSchedulerEntriesAsync, pollInterval);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error === \"\" ? (\n          <Grid item xs={12}>\n            <Paper className={classes.paper} variant=\"outlined\">\n              <Typography variant=\"h6\" className={classes.heading}>\n                Scheduler Entries\n              </Typography>\n              <SchedulerEntriesTable entries={props.entries} />\n            </Paper>\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve scheduler entries live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(SchedulersView);\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n  actionsContainer: {\n    display: \"flex\",\n    padding: \"4px\",\n  },\n  moreIcon: {\n    marginRight: \"8px\",\n  },\n  iconGroup: {\n    paddingLeft: theme.spacing(1),\n    borderLeft: `1px solid ${theme.palette.grey[100]}`,\n  },\n}));\n\ninterface MenuItemAction {\n  label: string;\n  onClick: () => void;\n  disabled: boolean;\n}\n\ninterface IconButtonAction {\n  icon: React.ReactElement;\n  tooltip: string;\n  onClick: () => void;\n  disabled: boolean;\n}\n\ninterface Props {\n  menuItemActions: MenuItemAction[];\n  iconButtonActions: IconButtonAction[];\n  showIconButtons: boolean;\n}\n\nexport default function TableActions(props: Props) {\n  const classes = useStyles();\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setMenuAnchor(event.currentTarget);\n  };\n\n  const closeMenu = () => setMenuAnchor(null);\n\n  return (\n    <div className={classes.actionsContainer}>\n      <Tooltip title=\"More Actions\">\n        <IconButton\n          aria-label=\"actions\"\n          className={classes.moreIcon}\n          onClick={handleMenuClick}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        id=\"action-menu\"\n        keepMounted\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={closeMenu}\n      >\n        {props.menuItemActions.map((action) => (\n          <MenuItem\n            key={action.label}\n            onClick={() => {\n              action.onClick();\n              closeMenu();\n            }}\n            disabled={action.disabled}\n          >\n            {action.label}\n          </MenuItem>\n        ))}\n      </Menu>\n      {props.showIconButtons && (\n        <div className={classes.iconGroup}>\n          {props.iconButtonActions.map((action) => (\n            <Tooltip key={action.tooltip} title={action.tooltip}>\n              <IconButton onClick={action.onClick} disabled={action.disabled}>\n                {action.icon}\n              </IconButton>\n            </Tooltip>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React from \"react\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { AppState } from \"../store\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { cancelFilterTasks } from \"../actions/tasksActions\";\n\nfunction mapStateToProps(state: AppState) {\n  const filterOp = state.tasks.filterOp;\n  return {\n    open: filterOp != null && !filterOp.done,\n    processedTasks: filterOp?.processedTasks ?? 0,\n    matches: filterOp?.result?.length ?? 0,\n  };\n}\n\nconst mapDispatchToProps = {\n  cancelFilterTasks,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface TasksFilterDialogProps extends ReduxProps {\n  totalTasks: number;\n}\n\nfunction TasksFilterDialog(props: TasksFilterDialogProps) {\n  let progress;\n  if (props.totalTasks > 0) progress = props.processedTasks / props.totalTasks;\n  else progress = 0;\n\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Running filter</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Processed {props.processedTasks} of {props.totalTasks} total tasks,{\" \"}\n          {props.matches} matches so far.\n        </DialogContentText>\n        <LinearProgress variant=\"determinate\" value={progress * 100} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.cancelFilterTasks}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default connector(TasksFilterDialog);\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport TablePaginationActions, {\n  rowsPerPageOptions,\n} from \"./TablePaginationActions\";\nimport TableActions from \"./TableActions\";\nimport { usePolling } from \"../hooks\";\nimport { TaskInfoExtended } from \"../reducers/tasksReducer\";\nimport { TableColumn } from \"../types/table\";\nimport { PaginationOptions } from \"../api\";\nimport { TaskState } from \"../types/taskState\";\nimport TasksFilterProgressDialog from \"./TasksFilterProgressDialog\";\nimport { AppState } from \"../store\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    filterEnabled: state.tasks.filterOp?.done ?? false,\n  };\n}\n\nconst connector = connect(mapStateToProps);\ntype ReduxProps = ConnectedProps<typeof connector>;\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  stickyHeaderCell: {\n    background: theme.palette.background.paper,\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  pagination: {\n    border: \"none\",\n  },\n}));\n\ninterface Props extends ReduxProps {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of tasks in the given state.\n  taskState: TaskState;\n  loading: boolean;\n  error: string;\n  tasks: TaskInfoExtended[];\n  batchActionPending: boolean;\n  allActionPending: boolean;\n  pollInterval: number;\n  pageSize: number;\n  columns: TableColumn[];\n\n  // actions\n  listTasks: (qname: string, pgn: PaginationOptions) => void;\n  batchDeleteTasks?: (qname: string, taskIds: string[]) => Promise<void>;\n  batchRunTasks?: (qname: string, taskIds: string[]) => Promise<void>;\n  batchArchiveTasks?: (qname: string, taskIds: string[]) => Promise<void>;\n  batchCancelTasks?: (qname: string, taskIds: string[]) => Promise<void>;\n  deleteAllTasks?: (qname: string) => Promise<void>;\n  runAllTasks?: (qname: string) => Promise<void>;\n  archiveAllTasks?: (qname: string) => Promise<void>;\n  cancelAllTasks?: (qname: string) => Promise<void>;\n  deleteTask?: (qname: string, taskId: string) => Promise<void>;\n  runTask?: (qname: string, taskId: string) => Promise<void>;\n  archiveTask?: (qname: string, taskId: string) => Promise<void>;\n  cancelTask?: (qname: string, taskId: string) => Promise<void>;\n  taskRowsPerPageChange: (n: number) => void;\n\n  renderRow: (rowProps: RowProps) => JSX.Element;\n}\n\nfunction TasksTable(props: Props) {\n  const { pollInterval, listTasks, queue, pageSize } = props;\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [activeTaskId, setActiveTaskId] = useState<string>(\"\");\n  const [lastFilterEnabled, setLastFilterEnabled] = useState(\n    props.filterEnabled\n  );\n\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    props.taskRowsPerPageChange(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = props.tasks.map((t) => t.id);\n      setSelectedIds(newSelected);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  function createAllActionHandler(action: (qname: string) => Promise<void>) {\n    return () => action(queue);\n  }\n\n  function createBatchActionHandler(\n    action: (qname: string, taskIds: string[]) => Promise<void>\n  ) {\n    return () => action(queue, selectedIds).then(() => setSelectedIds([]));\n  }\n\n  function createSingleActionHandler(\n    action: (qname: string, taskId: string) => Promise<void>,\n    taskId: string\n  ) {\n    return () => action(queue, taskId);\n  }\n\n  let allActions = [];\n  if (!props.filterEnabled) {\n    // Protect against using all actions while filter enabled\n    if (props.deleteAllTasks) {\n      allActions.push({\n        label: \"Delete All\",\n        onClick: createAllActionHandler(props.deleteAllTasks),\n        disabled: props.allActionPending,\n      });\n    }\n    if (props.archiveAllTasks) {\n      allActions.push({\n        label: \"Archive All\",\n        onClick: createAllActionHandler(props.archiveAllTasks),\n        disabled: props.allActionPending,\n      });\n    }\n    if (props.runAllTasks) {\n      allActions.push({\n        label: \"Run All\",\n        onClick: createAllActionHandler(props.runAllTasks),\n        disabled: props.allActionPending,\n      });\n    }\n    if (props.cancelAllTasks) {\n      allActions.push({\n        label: \"Cancel All\",\n        onClick: createAllActionHandler(props.cancelAllTasks),\n        disabled: props.allActionPending,\n      });\n    }\n  }\n\n  let batchActions = [];\n  if (props.batchDeleteTasks) {\n    batchActions.push({\n      tooltip: \"Delete\",\n      icon: <DeleteIcon />,\n      disabled: props.batchActionPending,\n      onClick: createBatchActionHandler(props.batchDeleteTasks),\n    });\n  }\n  if (props.batchArchiveTasks) {\n    batchActions.push({\n      tooltip: \"Archive\",\n      icon: <ArchiveIcon />,\n      disabled: props.batchActionPending,\n      onClick: createBatchActionHandler(props.batchArchiveTasks),\n    });\n  }\n  if (props.batchRunTasks) {\n    batchActions.push({\n      tooltip: \"Run\",\n      icon: <PlayArrowIcon />,\n      disabled: props.batchActionPending,\n      onClick: createBatchActionHandler(props.batchRunTasks),\n    });\n  }\n  if (props.batchCancelTasks) {\n    batchActions.push({\n      tooltip: \"Cancel\",\n      icon: <CancelIcon />,\n      disabled: props.batchActionPending,\n      onClick: createBatchActionHandler(props.batchCancelTasks),\n    });\n  }\n\n  const fetchData = useCallback(() => {\n    const pageOpts = { page: page + 1, size: pageSize };\n    listTasks(queue, pageOpts);\n  }, [page, pageSize, queue, listTasks]);\n\n  usePolling(fetchData, pollInterval);\n\n  if (props.filterEnabled !== lastFilterEnabled) {\n    setLastFilterEnabled(props.filterEnabled);\n    setPage(0);\n    fetchData();\n  }\n\n  if (props.error.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.error}\n      </Alert>\n    );\n  }\n  if (props.tasks.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        {props.taskState === \"aggregating\" ? (\n          <div>Selected group is empty.</div>\n        ) : (\n          <div>No {props.taskState} tasks at this time.</div>\n        )}\n      </Alert>\n    );\n  }\n\n  const rowCount = props.tasks.length;\n  const numSelected = selectedIds.length;\n  return (\n    <div>\n      {!window.READ_ONLY && (\n        <TableActions\n          showIconButtons={numSelected > 0}\n          iconButtonActions={batchActions}\n          menuItemActions={allActions}\n        />\n      )}\n      <TableContainer component={Paper}>\n        <Table\n          stickyHeader={true}\n          className={classes.table}\n          aria-label={`${props.taskState} tasks table`}\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              {!window.READ_ONLY && (\n                <TableCell\n                  padding=\"checkbox\"\n                  classes={{ stickyHeader: classes.stickyHeaderCell }}\n                >\n                  <IconButton>\n                    <Checkbox\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={rowCount > 0 && numSelected === rowCount}\n                      onChange={handleSelectAllClick}\n                      inputProps={{\n                        \"aria-label\": \"select all tasks shown in the table\",\n                      }}\n                    />\n                  </IconButton>\n                </TableCell>\n              )}\n              {props.columns\n                .filter((col) => {\n                  // Filter out actions column in readonly mode.\n                  return !window.READ_ONLY || col.key !== \"actions\";\n                })\n                .map((col) => (\n                  <TableCell\n                    key={col.label}\n                    align={col.align}\n                    classes={{ stickyHeader: classes.stickyHeaderCell }}\n                  >\n                    {col.label}\n                  </TableCell>\n                ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.tasks.map((task) => {\n              return props.renderRow({\n                key: task.id,\n                task: task,\n                allActionPending: props.allActionPending,\n                isSelected: selectedIds.includes(task.id),\n                onSelectChange: (checked: boolean) => {\n                  if (checked) {\n                    setSelectedIds(selectedIds.concat(task.id));\n                  } else {\n                    setSelectedIds(selectedIds.filter((id) => id !== task.id));\n                  }\n                },\n                onRunClick: props.runTask\n                  ? createSingleActionHandler(props.runTask, task.id)\n                  : undefined,\n                onDeleteClick: props.deleteTask\n                  ? createSingleActionHandler(props.deleteTask, task.id)\n                  : undefined,\n                onArchiveClick: props.archiveTask\n                  ? createSingleActionHandler(props.archiveTask, task.id)\n                  : undefined,\n                onCancelClick: props.cancelTask\n                  ? createSingleActionHandler(props.cancelTask, task.id)\n                  : undefined,\n                onActionCellEnter: () => setActiveTaskId(task.id),\n                onActionCellLeave: () => setActiveTaskId(\"\"),\n                showActions: activeTaskId === task.id,\n              });\n            })}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                colSpan={props.columns.length + 1}\n                count={props.totalTaskCount}\n                rowsPerPage={pageSize}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onPageChange={handlePageChange}\n                onRowsPerPageChange={handleRowsPerPageChange}\n                ActionsComponent={TablePaginationActions}\n                className={classes.pagination}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n      <TasksFilterProgressDialog totalTasks={props.totalTaskCount} />\n    </div>\n  );\n}\n\nexport const useRowStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"pointer\",\n    \"& #copy-button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      boxShadow: theme.shadows[2],\n      \"& #copy-button\": {\n        display: \"inline-block\",\n      },\n    },\n    \"&:hover $copyButton\": {\n      display: \"inline-block\",\n    },\n    \"&:hover .MuiTableCell-root\": {\n      borderBottomColor: theme.palette.background.paper,\n    },\n  },\n  actionCell: {\n    width: \"140px\",\n  },\n  actionButton: {\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  idCell: {\n    width: \"200px\",\n  },\n  copyButton: {\n    display: \"none\",\n  },\n  IdGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nexport interface RowProps {\n  key: string;\n  task: TaskInfoExtended;\n  isSelected: boolean;\n  onSelectChange: (checked: boolean) => void;\n  onRunClick?: () => void;\n  onDeleteClick?: () => void;\n  onArchiveClick?: () => void;\n  onCancelClick?: () => void;\n  allActionPending: boolean;\n  showActions: boolean;\n  onActionCellEnter: () => void;\n  onActionCellLeave: () => void;\n}\n\nexport default connector(TasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  batchCancelActiveTasksAsync,\n  cancelActiveTaskAsync,\n  cancelAllActiveTasksAsync,\n  listActiveTasksAsync,\n} from \"../actions/tasksActions\";\nimport { taskDetailsPath } from \"../paths\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { durationBefore, prettifyPayload, timeAgo, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TasksTable, { RowProps, useRowStyles } from \"./TasksTable\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.activeTasks.loading,\n    error: state.tasks.activeTasks.error,\n    tasks: state.tasks.activeTasks.data,\n    batchActionPending: state.tasks.activeTasks.batchActionPending,\n    allActionPending: state.tasks.activeTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listTasks: listActiveTasksAsync,\n  cancelTask: cancelActiveTaskAsync,\n  batchCancelTasks: batchCancelActiveTasksAsync,\n  cancelAllTasks: cancelAllActiveTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"payload\", label: \"Payload\", align: \"left\" },\n  { key: \"status\", label: \"Status\", align: \"left\" },\n  { key: \"start-time\", label: \"Started\", align: \"left\" },\n  { key: \"deadline\", label: \"Deadline\", align: \"left\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue\n  totalTaskCount: number; // total number of active tasks\n}\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>\n        {task.canceling\n          ? \"Canceling\"\n          : task.is_orphaned\n          ? \"Orphaned\"\n          : \"Running\"}\n      </TableCell>\n      <TableCell>\n        {task.is_orphaned\n          ? \"-\"\n          : task.start_time === \"-\"\n          ? \"just now\"\n          : timeAgo(task.start_time)}\n      </TableCell>\n      <TableCell>\n        {task.deadline === \"-\" ? \"-\" : durationBefore(task.deadline)}\n      </TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Cancel\">\n                <IconButton\n                  onClick={props.onCancelClick}\n                  disabled={\n                    task.requestPending || task.canceling || task.is_orphaned\n                  }\n                  size=\"small\"\n                >\n                  <CancelIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nfunction ActiveTasksTable(props: Props & ReduxProps) {\n  return (\n    <TasksTable\n      taskState=\"active\"\n      columns={columns}\n      renderRow={(rowProps: RowProps) => <Row {...rowProps} />}\n      {...props}\n    />\n  );\n}\n\nexport default connector(ActiveTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  archiveAllPendingTasksAsync,\n  archivePendingTaskAsync,\n  batchArchivePendingTasksAsync,\n  batchDeletePendingTasksAsync,\n  deleteAllPendingTasksAsync,\n  deletePendingTaskAsync,\n  listPendingTasksAsync,\n} from \"../actions/tasksActions\";\nimport { taskDetailsPath } from \"../paths\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { prettifyPayload, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TasksTable, { RowProps, useRowStyles } from \"./TasksTable\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.pendingTasks.loading,\n    error: state.tasks.pendingTasks.error,\n    tasks: state.tasks.pendingTasks.data,\n    batchActionPending: state.tasks.pendingTasks.batchActionPending,\n    allActionPending: state.tasks.pendingTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listTasks: listPendingTasksAsync,\n  deleteTask: deletePendingTaskAsync,\n  batchDeleteTasks: batchDeletePendingTasksAsync,\n  deleteAllTasks: deleteAllPendingTasksAsync,\n  archiveTask: archivePendingTaskAsync,\n  batchArchiveTasks: batchArchivePendingTasksAsync,\n  archiveAllTasks: archiveAllPendingTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string;\n  totalTaskCount: number; // total number of pending tasks\n}\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"paylod\", label: \"Payload\", align: \"left\" },\n  { key: \"retried\", label: \"Retried\", align: \"right\" },\n  { key: \"max_retry\", label: \"Max Retry\", align: \"right\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell align=\"right\">{task.retried}</TableCell>\n      <TableCell align=\"right\">{task.max_retry}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Archive\">\n                <IconButton\n                  onClick={props.onArchiveClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <ArchiveIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nfunction PendingTasksTable(props: Props & ReduxProps) {\n  return (\n    <TasksTable\n      taskState=\"pending\"\n      columns={columns}\n      renderRow={(rowProps: RowProps) => <Row {...rowProps} />}\n      {...props}\n    />\n  );\n}\n\nexport default connector(PendingTasksTable);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TasksTable, { RowProps, useRowStyles } from \"./TasksTable\";\nimport {\n  batchDeleteScheduledTasksAsync,\n  batchRunScheduledTasksAsync,\n  batchArchiveScheduledTasksAsync,\n  deleteAllScheduledTasksAsync,\n  runAllScheduledTasksAsync,\n  archiveAllScheduledTasksAsync,\n  listScheduledTasksAsync,\n  deleteScheduledTaskAsync,\n  runScheduledTaskAsync,\n  archiveScheduledTaskAsync,\n} from \"../actions/tasksActions\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { durationBefore, prettifyPayload, uuidPrefix } from \"../utils\";\nimport { taskDetailsPath } from \"../paths\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.scheduledTasks.loading,\n    error: state.tasks.scheduledTasks.error,\n    tasks: state.tasks.scheduledTasks.data,\n    batchActionPending: state.tasks.scheduledTasks.batchActionPending,\n    allActionPending: state.tasks.scheduledTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listTasks: listScheduledTasksAsync,\n  batchDeleteTasks: batchDeleteScheduledTasksAsync,\n  batchRunTasks: batchRunScheduledTasksAsync,\n  batchArchiveTasks: batchArchiveScheduledTasksAsync,\n  deleteAllTasks: deleteAllScheduledTasksAsync,\n  runAllTasks: runAllScheduledTasksAsync,\n  archiveAllTasks: archiveAllScheduledTasksAsync,\n  deleteTask: deleteScheduledTaskAsync,\n  runTask: runScheduledTaskAsync,\n  archiveTask: archiveScheduledTaskAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of scheduled tasks.\n}\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"payload\", label: \"Payload\", align: \"left\" },\n  { key: \"process_in\", label: \"Process In\", align: \"left\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{durationBefore(task.next_process_at)}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Archive\">\n                <IconButton\n                  onClick={props.onArchiveClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <ArchiveIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Run\">\n                <IconButton\n                  onClick={props.onRunClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <PlayArrowIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nfunction ScheduledTasksTable(props: Props & ReduxProps) {\n  return (\n    <TasksTable\n      taskState=\"scheduled\"\n      columns={columns}\n      renderRow={(rowProps: RowProps) => <Row {...rowProps} />}\n      {...props}\n    />\n  );\n}\n\nexport default connector(ScheduledTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  archiveAllRetryTasksAsync,\n  archiveRetryTaskAsync,\n  batchArchiveRetryTasksAsync,\n  batchDeleteRetryTasksAsync,\n  batchRunRetryTasksAsync,\n  deleteAllRetryTasksAsync,\n  deleteRetryTaskAsync,\n  listRetryTasksAsync,\n  runAllRetryTasksAsync,\n  runRetryTaskAsync,\n} from \"../actions/tasksActions\";\nimport TasksTable, { RowProps, useRowStyles } from \"./TasksTable\";\nimport { taskDetailsPath } from \"../paths\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { durationBefore, prettifyPayload, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.retryTasks.loading,\n    error: state.tasks.retryTasks.error,\n    tasks: state.tasks.retryTasks.data,\n    batchActionPending: state.tasks.retryTasks.batchActionPending,\n    allActionPending: state.tasks.retryTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  batchDeleteTasks: batchDeleteRetryTasksAsync,\n  batchRunTasks: batchRunRetryTasksAsync,\n  batchArchiveTasks: batchArchiveRetryTasksAsync,\n  deleteAllTasks: deleteAllRetryTasksAsync,\n  runAllTasks: runAllRetryTasksAsync,\n  archiveAllTasks: archiveAllRetryTasksAsync,\n  listTasks: listRetryTasksAsync,\n  deleteTask: deleteRetryTaskAsync,\n  runTask: runRetryTaskAsync,\n  archiveTask: archiveRetryTaskAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of scheduled tasks.\n}\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"payload\", label: \"Payload\", align: \"left\" },\n  { key: \"retry_in\", label: \"Retry In\", align: \"left\" },\n  { key: \"last_error\", label: \"Last Error\", align: \"left\" },\n  { key: \"retried\", label: \"Retried\", align: \"right\" },\n  { key: \"max_retry\", label: \"Max Retry\", align: \"right\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{durationBefore(task.next_process_at)}</TableCell>\n      <TableCell>{task.error_message}</TableCell>\n      <TableCell align=\"right\">{task.retried}</TableCell>\n      <TableCell align=\"right\">{task.max_retry}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Archive\">\n                <IconButton\n                  onClick={props.onArchiveClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <ArchiveIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Run\">\n                <IconButton\n                  onClick={props.onRunClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <PlayArrowIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nfunction RetryTasksTable(props: Props & ReduxProps) {\n  return (\n    <TasksTable\n      taskState=\"retry\"\n      columns={columns}\n      renderRow={(rowProps: RowProps) => <Row {...rowProps} />}\n      {...props}\n    />\n  );\n}\n\nexport default connector(RetryTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  batchDeleteArchivedTasksAsync,\n  batchRunArchivedTasksAsync,\n  deleteAllArchivedTasksAsync,\n  deleteArchivedTaskAsync,\n  listArchivedTasksAsync,\n  runAllArchivedTasksAsync,\n  runArchivedTaskAsync,\n} from \"../actions/tasksActions\";\nimport { taskDetailsPath } from \"../paths\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { prettifyPayload, timeAgo, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TasksTable, { RowProps, useRowStyles } from \"./TasksTable\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.archivedTasks.loading,\n    error: state.tasks.archivedTasks.error,\n    tasks: state.tasks.archivedTasks.data,\n    batchActionPending: state.tasks.archivedTasks.batchActionPending,\n    allActionPending: state.tasks.archivedTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listTasks: listArchivedTasksAsync,\n  runTask: runArchivedTaskAsync,\n  runAllTasks: runAllArchivedTasksAsync,\n  deleteTask: deleteArchivedTaskAsync,\n  deleteAllTasks: deleteAllArchivedTasksAsync,\n  batchRunTasks: batchRunArchivedTasksAsync,\n  batchDeleteTasks: batchDeleteArchivedTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of archived tasks.\n}\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"payload\", label: \"Payload\", align: \"left\" },\n  { key: \"last_failed\", label: \"Last Failed\", align: \"left\" },\n  { key: \"last_error\", label: \"Last Error\", align: \"left\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{timeAgo(task.last_failed_at)}</TableCell>\n      <TableCell>{task.error_message}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  className={classes.actionButton}\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Run\">\n                <IconButton\n                  className={classes.actionButton}\n                  onClick={props.onRunClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                >\n                  <PlayArrowIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nfunction ArchivedTasksTable(props: Props & ReduxProps) {\n  return (\n    <TasksTable\n      taskState=\"archived\"\n      columns={columns}\n      renderRow={(rowProps: RowProps) => <Row {...rowProps} />}\n      {...props}\n    />\n  );\n}\n\nexport default connector(ArchivedTasksTable);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  batchDeleteCompletedTasksAsync,\n  deleteAllCompletedTasksAsync,\n  deleteCompletedTaskAsync,\n  listCompletedTasksAsync,\n} from \"../actions/tasksActions\";\nimport { taskDetailsPath } from \"../paths\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport {\n  durationFromSeconds,\n  prettifyPayload,\n  stringifyDuration,\n  timeAgo,\n  uuidPrefix,\n} from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TasksTable, { RowProps, useRowStyles } from \"./TasksTable\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.completedTasks.loading,\n    error: state.tasks.completedTasks.error,\n    tasks: state.tasks.completedTasks.data,\n    batchActionPending: state.tasks.completedTasks.batchActionPending,\n    allActionPending: state.tasks.completedTasks.allActionPending,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listTasks: listCompletedTasksAsync,\n  deleteTask: deleteCompletedTaskAsync,\n  deleteAllTasks: deleteAllCompletedTasksAsync,\n  batchDeleteTasks: batchDeleteCompletedTasksAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string; // name of the queue.\n  totalTaskCount: number; // totoal number of completed tasks.\n}\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"payload\", label: \"Payload\", align: \"left\" },\n  { key: \"completed_at\", label: \"Completed\", align: \"left\" },\n  { key: \"result\", label: \"Result\", align: \"left\" },\n  { key: \"ttl\", label: \"TTL\", align: \"left\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{timeAgo(task.completed_at)}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.result)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>\n        {task.ttl_seconds > 0\n          ? `${stringifyDuration(durationFromSeconds(task.ttl_seconds))} left`\n          : `expired`}\n      </TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  className={classes.actionButton}\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nfunction CompletedTasksTable(props: Props & ReduxProps) {\n  return (\n    <TasksTable\n      taskState=\"completed\"\n      columns={columns}\n      renderRow={(rowProps: RowProps) => <Row {...rowProps} />}\n      {...props}\n    />\n  );\n}\nexport default connector(CompletedTasksTable);\n","import { Dispatch } from \"redux\";\nimport { listGroups, ListGroupsResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of groups related action types.\nexport const LIST_GROUPS_BEGIN = \"LIST_GROUPS_BEGIN\";\nexport const LIST_GROUPS_SUCCESS = \"LIST_GROUPS_SUCCESS\";\nexport const LIST_GROUPS_ERROR = \"LIST_GROUPS_ERROR\";\n\ninterface ListGroupsBeginAction {\n  type: typeof LIST_GROUPS_BEGIN;\n  queue: string;\n}\n\ninterface ListGroupsSuccessAction {\n  type: typeof LIST_GROUPS_SUCCESS;\n  payload: ListGroupsResponse;\n  queue: string;\n}\n\ninterface ListGroupsErrorAction {\n  type: typeof LIST_GROUPS_ERROR;\n  queue: string;\n  error: string;\n}\n\n// Union of all groups related action types.\nexport type GroupsActionTypes =\n  | ListGroupsBeginAction\n  | ListGroupsSuccessAction\n  | ListGroupsErrorAction;\n\nexport function listGroupsAsync(qname: string) {\n  return async (dispatch: Dispatch<GroupsActionTypes>) => {\n    dispatch({ type: LIST_GROUPS_BEGIN, queue: qname });\n    try {\n      const response = await listGroups(qname);\n      dispatch({\n        type: LIST_GROUPS_SUCCESS,\n        payload: response,\n        queue: qname,\n      });\n    } catch (error) {\n      console.error(`listGroupsAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: LIST_GROUPS_ERROR,\n        error: toErrorString(error),\n        queue: qname,\n      });\n    }\n  };\n}\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { taskRowsPerPageChange } from \"../actions/settingsActions\";\nimport {\n  archiveAggregatingTaskAsync,\n  archiveAllAggregatingTasksAsync,\n  batchArchiveAggregatingTasksAsync,\n  batchDeleteAggregatingTasksAsync,\n  batchRunAggregatingTasksAsync,\n  deleteAggregatingTaskAsync,\n  deleteAllAggregatingTasksAsync,\n  listAggregatingTasksAsync,\n  runAggregatingTaskAsync,\n  runAllAggregatingTasksAsync,\n} from \"../actions/tasksActions\";\nimport { PaginationOptions } from \"../api\";\nimport { taskDetailsPath } from \"../paths\";\nimport { AppState } from \"../store\";\nimport { TableColumn } from \"../types/table\";\nimport { prettifyPayload, uuidPrefix } from \"../utils\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport TasksTable, { RowProps, useRowStyles } from \"./TasksTable\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    groups: state.groups.data,\n    groupsError: state.groups.error,\n    loading: state.tasks.aggregatingTasks.loading,\n    allActionPending: state.tasks.aggregatingTasks.allActionPending,\n    batchActionPending: state.tasks.aggregatingTasks.batchActionPending,\n    error: state.tasks.aggregatingTasks.error,\n    group: state.tasks.aggregatingTasks.group,\n    tasks: state.tasks.aggregatingTasks.data,\n    pollInterval: state.settings.pollInterval,\n    pageSize: state.settings.taskRowsPerPage,\n  };\n}\n\nconst mapDispatchToProps = {\n  listAggregatingTasksAsync,\n  deleteAllAggregatingTasksAsync,\n  archiveAllAggregatingTasksAsync,\n  runAllAggregatingTasksAsync,\n  batchDeleteAggregatingTasksAsync,\n  batchRunAggregatingTasksAsync,\n  batchArchiveAggregatingTasksAsync,\n  deleteAggregatingTaskAsync,\n  runAggregatingTaskAsync,\n  archiveAggregatingTaskAsync,\n  taskRowsPerPageChange,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string;\n  selectedGroup: string;\n  totalTaskCount: number; // total number of tasks in the group\n}\n\nconst columns: TableColumn[] = [\n  { key: \"id\", label: \"ID\", align: \"left\" },\n  { key: \"type\", label: \"Type\", align: \"left\" },\n  { key: \"paylod\", label: \"Payload\", align: \"left\" },\n  { key: \"group\", label: \"Group\", align: \"left\" },\n  { key: \"actions\", label: \"Actions\", align: \"center\" },\n];\n\nfunction Row(props: RowProps) {\n  const { task } = props;\n  const classes = useRowStyles();\n  const history = useHistory();\n  return (\n    <TableRow\n      key={task.id}\n      className={classes.root}\n      selected={props.isSelected}\n      onClick={() => history.push(taskDetailsPath(task.queue, task.id))}\n    >\n      {!window.READ_ONLY && (\n        <TableCell padding=\"checkbox\" onClick={(e) => e.stopPropagation()}>\n          <IconButton>\n            <Checkbox\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                props.onSelectChange(event.target.checked)\n              }\n              checked={props.isSelected}\n            />\n          </IconButton>\n        </TableCell>\n      )}\n      <TableCell component=\"th\" scope=\"row\" className={classes.idCell}>\n        <div className={classes.IdGroup}>\n          {uuidPrefix(task.id)}\n          <Tooltip title=\"Copy full ID to clipboard\">\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                navigator.clipboard.writeText(task.id);\n              }}\n              size=\"small\"\n              className={classes.copyButton}\n            >\n              <FileCopyOutlinedIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </TableCell>\n      <TableCell>{task.type}</TableCell>\n      <TableCell>\n        <SyntaxHighlighter\n          language=\"json\"\n          customStyle={{ margin: 0, maxWidth: 400 }}\n        >\n          {prettifyPayload(task.payload)}\n        </SyntaxHighlighter>\n      </TableCell>\n      <TableCell>{task.group}</TableCell>\n      {!window.READ_ONLY && (\n        <TableCell\n          align=\"center\"\n          className={classes.actionCell}\n          onMouseEnter={props.onActionCellEnter}\n          onMouseLeave={props.onActionCellLeave}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {props.showActions ? (\n            <React.Fragment>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={props.onDeleteClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Archive\">\n                <IconButton\n                  onClick={props.onArchiveClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <ArchiveIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Run\">\n                <IconButton\n                  onClick={props.onRunClick}\n                  disabled={task.requestPending || props.allActionPending}\n                  size=\"small\"\n                  className={classes.actionButton}\n                >\n                  <PlayArrowIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </React.Fragment>\n          ) : (\n            <IconButton size=\"small\" onClick={props.onActionCellEnter}>\n              <MoreHorizIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nfunction AggregatingTasksTable(props: Props & ReduxProps) {\n  const listTasks = (qname: string, pgn?: PaginationOptions) =>\n    props.listAggregatingTasksAsync(qname, props.selectedGroup, pgn);\n\n  const deleteAllTasks = (qname: string) =>\n    props.deleteAllAggregatingTasksAsync(qname, props.selectedGroup);\n\n  const archiveAllTasks = (qname: string) =>\n    props.archiveAllAggregatingTasksAsync(qname, props.selectedGroup);\n\n  const runAllTasks = (qname: string) =>\n    props.runAllAggregatingTasksAsync(qname, props.selectedGroup);\n\n  const batchDeleteTasks = (qname: string, taskIds: string[]) =>\n    props.batchDeleteAggregatingTasksAsync(qname, props.selectedGroup, taskIds);\n\n  const batchArchiveTasks = (qname: string, taskIds: string[]) =>\n    props.batchArchiveAggregatingTasksAsync(\n      qname,\n      props.selectedGroup,\n      taskIds\n    );\n\n  const batchRunTasks = (qname: string, taskIds: string[]) =>\n    props.batchRunAggregatingTasksAsync(qname, props.selectedGroup, taskIds);\n\n  const deleteTask = (qname: string, taskId: string) =>\n    props.deleteAggregatingTaskAsync(qname, props.selectedGroup, taskId);\n\n  const archiveTask = (qname: string, taskId: string) =>\n    props.archiveAggregatingTaskAsync(qname, props.selectedGroup, taskId);\n\n  const runTask = (qname: string, taskId: string) =>\n    props.runAggregatingTaskAsync(qname, props.selectedGroup, taskId);\n\n  return (\n    <TasksTable\n      queue={props.queue}\n      totalTaskCount={props.totalTaskCount}\n      taskState=\"aggregating\"\n      loading={props.loading}\n      error={props.error}\n      tasks={props.tasks}\n      batchActionPending={props.batchActionPending}\n      allActionPending={props.allActionPending}\n      pollInterval={props.pollInterval}\n      pageSize={props.pageSize}\n      listTasks={listTasks}\n      deleteAllTasks={deleteAllTasks}\n      archiveAllTasks={archiveAllTasks}\n      runAllTasks={runAllTasks}\n      batchDeleteTasks={batchDeleteTasks}\n      batchArchiveTasks={batchArchiveTasks}\n      batchRunTasks={batchRunTasks}\n      deleteTask={deleteTask}\n      archiveTask={archiveTask}\n      runTask={runTask}\n      taskRowsPerPageChange={props.taskRowsPerPageChange}\n      columns={columns}\n      renderRow={(rowProps: RowProps) => <Row {...rowProps} />}\n    />\n  );\n}\n\nexport default connector(AggregatingTasksTable);\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { VariableSizeList, ListChildComponentProps } from \"react-window\";\nimport { GroupInfo } from \"../api\";\nimport { isDarkTheme } from \"../theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  groupSelectOption: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  groupSize: {\n    fontSize: \"12px\",\n    color: theme.palette.text.secondary,\n    background: isDarkTheme(theme)\n      ? \"#303030\"\n      : theme.palette.background.default,\n    textAlign: \"center\",\n    padding: \"3px 6px\",\n    borderRadius: \"10px\",\n    marginRight: \"2px\",\n  },\n  inputRoot: {\n    borderRadius: 20,\n    paddingLeft: \"12px !important\",\n  },\n}));\n\ninterface Props {\n  selected: GroupInfo | null;\n  onSelect: (newVal: GroupInfo | null) => void;\n  groups: GroupInfo[];\n  error: string;\n}\n\nexport default function GroupSelect(props: Props) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  return (\n    <Autocomplete\n      id=\"task-group-selector\"\n      value={props.selected}\n      onChange={(event: any, newValue: GroupInfo | null) => {\n        props.onSelect(newValue);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      disableListWrap\n      ListboxComponent={\n        ListboxComponent as React.ComponentType<\n          React.HTMLAttributes<HTMLElement>\n        >\n      }\n      options={props.groups}\n      getOptionLabel={(option: GroupInfo) => option.group}\n      style={{ width: 300 }}\n      renderOption={(option: GroupInfo) => (\n        <div className={classes.groupSelectOption}>\n          <span>{option.group}</span>\n          <span className={classes.groupSize}>{option.size}</span>\n        </div>\n      )}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Select group\" variant=\"outlined\" />\n      )}\n      classes={{\n        inputRoot: classes.inputRoot,\n      }}\n      size=\"small\"\n    />\n  );\n}\n\n// Virtualized list.\n// Reference: https://v4.mui.com/components/autocomplete/#virtualization\n\nconst LISTBOX_PADDING = 8; // px\n\nfunction renderRow(props: ListChildComponentProps) {\n  const { data, index, style } = props;\n  return React.cloneElement(data[index], {\n    style: {\n      ...style,\n      top: (style.top as number) + LISTBOX_PADDING,\n    },\n  });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data: any) {\n  const ref = React.useRef<VariableSizeList>(null);\n  React.useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef<HTMLDivElement>(\n  function ListboxComponent(props, ref) {\n    const { children, ...other } = props;\n    const itemData = React.Children.toArray(children);\n    const theme = useTheme();\n    const smUp = useMediaQuery(theme.breakpoints.up(\"sm\"), { noSsr: true });\n    const itemCount = itemData.length;\n    const itemSize = smUp ? 36 : 48;\n\n    const getChildSize = (child: React.ReactNode) => {\n      if (React.isValidElement(child) && child.type === ListSubheader) {\n        return 48;\n      }\n      return itemSize;\n    };\n\n    const getHeight = () => {\n      if (itemCount > 8) {\n        return 8 * itemSize;\n      }\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n    };\n\n    const gridRef = useResetCache(itemCount);\n\n    return (\n      <div ref={ref}>\n        <OuterElementContext.Provider value={other}>\n          <VariableSizeList\n            itemData={itemData}\n            height={getHeight() + 2 * LISTBOX_PADDING}\n            width=\"100%\"\n            ref={gridRef}\n            outerElementType={OuterElementType}\n            innerElementType=\"ul\"\n            itemSize={(index) => getChildSize(itemData[index])}\n            overscanCount={5}\n            itemCount={itemCount}\n          >\n            {renderRow}\n          </VariableSizeList>\n        </OuterElementContext.Provider>\n      </div>\n    );\n  }\n);\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport React, { useCallback, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { listGroupsAsync } from \"../actions/groupsActions\";\nimport { GroupInfo } from \"../api\";\nimport { usePolling } from \"../hooks\";\nimport { AppState } from \"../store\";\nimport AggregatingTasksTable from \"./AggregatingTasksTable\";\nimport GroupSelect from \"./GroupSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  groupSelector: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    groups: state.groups.data,\n    groupsError: state.groups.error,\n    pollInterval: state.settings.pollInterval,\n  };\n}\n\nconst mapDispatchToProps = {\n  listGroupsAsync,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props {\n  queue: string;\n}\n\nfunction AggregatingTasksTableContainer(\n  props: Props & ConnectedProps<typeof connector>\n) {\n  const [selectedGroup, setSelectedGroup] = useState<GroupInfo | null>(null);\n  const { pollInterval, listGroupsAsync, queue } = props;\n  const classes = useStyles();\n\n  const fetchGroups = useCallback(() => {\n    listGroupsAsync(queue);\n  }, [listGroupsAsync, queue]);\n\n  usePolling(fetchGroups, pollInterval);\n\n  if (props.groupsError.length > 0) {\n    return (\n      <Alert severity=\"error\" className={classes.alert}>\n        <AlertTitle>Error</AlertTitle>\n        {props.groupsError}\n      </Alert>\n    );\n  }\n  if (props.groups.length === 0) {\n    return (\n      <Alert severity=\"info\" className={classes.alert}>\n        <AlertTitle>Info</AlertTitle>\n        No aggregating tasks at this time.\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <div className={classes.groupSelector}>\n        <GroupSelect\n          selected={selectedGroup}\n          onSelect={setSelectedGroup}\n          groups={props.groups}\n          error={props.groupsError}\n        />\n      </div>\n      {selectedGroup !== null ? (\n        <AggregatingTasksTable\n          queue={props.queue}\n          totalTaskCount={selectedGroup.size}\n          selectedGroup={selectedGroup.group}\n        />\n      ) : (\n        <Alert severity=\"info\" className={classes.alert}>\n          <AlertTitle>Info</AlertTitle>\n          <div>Please select group</div>\n        </Alert>\n      )}\n    </div>\n  );\n}\n\nexport default connector(AggregatingTasksTableContainer);\n","import React, {\n  ChangeEventHandler,\n  KeyboardEventHandler,\n  useState,\n} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { TasksFilter } from \"../actions/tasksActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\ninterface TasksFilterDialogProps {\n  open: boolean;\n  onClose?: () => void;\n  onFilter?: (filter: TasksFilter) => void;\n}\n\nfunction TasksFilterDialog(props: TasksFilterDialogProps) {\n  const [customJs, setCustomJs] = useState(\"\");\n  const [payloadQuery, setPayloadQuery] = useState(\"\");\n  const [resultQuery, setResultQuery] = useState(\"\");\n  const [payloadRegex, setPayloadRegex] = useState(\"\");\n  const [resultRegex, setResultRegex] = useState(\"\");\n  const [resultLimitStr, setResultLimitStr] = useState(\"\");\n  const [resultLimit, setResultLimit] = useState(-1);\n  const [resultLimitError, setResultLimitError] = useState<string | null>(null);\n\n  const buildFilter = () => {\n    if (resultLimitError != null) return null;\n\n    const filter: TasksFilter = {};\n    if (payloadQuery.trim().length > 0) filter.payloadQuery = payloadQuery;\n    if (resultQuery.trim().length > 0) filter.resultQuery = resultQuery;\n    if (payloadRegex.trim().length > 0)\n      filter.payloadRegex = RegExp(payloadRegex);\n    if (resultRegex.trim().length > 0) filter.resultRegex = RegExp(resultRegex);\n    if (customJs.trim().length > 0) filter.customJs = customJs;\n    if (resultLimit >= 0) filter.resultLimit = resultLimit;\n    return filter;\n  };\n\n  const handleRunFilter = () => {\n    const filter = buildFilter();\n    if (filter != null) {\n      if (props.onClose != null) props.onClose();\n      if (props.onFilter != null) props.onFilter(filter);\n    }\n  };\n\n  const handleKeyDown: KeyboardEventHandler = (event) => {\n    if (event.key === \"Enter\") {\n      handleRunFilter();\n    }\n  };\n\n  const handleResultLimitChange: ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    const value = event.target.value;\n    setResultLimitStr(value);\n    const trimmedValue = value.trim();\n    if (trimmedValue.length === 0) {\n      setResultLimit(-1);\n      setResultLimitError(null);\n    } else {\n      const parsed = parseInt(trimmedValue, 10);\n      if (isNaN(parsed) || parsed < 0) {\n        setResultLimit(-1);\n        setResultLimitError(\"Please enter a valid positive number.\");\n      } else {\n        setResultLimit(parsed);\n        setResultLimitError(null);\n      }\n    }\n  };\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle>Filter tasks</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <p style={{ marginTop: 0 }}>\n            Filter results are stored in browser memory, please ensure that your\n            filter does not return too many results.\n          </p>\n          <p>\n            This feature may not behave correctly if the payload or result are\n            truncated due to <code>MaxPayloadLength</code> or{\" \"}\n            <code>MaxResultLength</code> being misconfigured.\n          </p>\n        </DialogContentText>\n        <TextField\n          label=\"Payload keyword\"\n          placeholder=\"Search for tasks with payloads containing the specified text\"\n          value={payloadQuery}\n          fullWidth\n          variant=\"filled\"\n          onChange={(e) => setPayloadQuery(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <TextField\n          label=\"Result keyword\"\n          placeholder=\"Search for tasks with results containing the specified text\"\n          value={resultQuery}\n          fullWidth\n          variant=\"filled\"\n          onChange={(e) => setResultQuery(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <TextField\n          label=\"Payload regex\"\n          placeholder=\"Search for tasks with payloads matching the specified regex\"\n          value={payloadRegex}\n          fullWidth\n          variant=\"filled\"\n          onChange={(e) => setPayloadRegex(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <TextField\n          label=\"Query regex\"\n          placeholder=\"Search for tasks with results matching the specified regex\"\n          value={resultRegex}\n          fullWidth\n          variant=\"filled\"\n          onChange={(e) => setResultRegex(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <TextField\n          label=\"JavaScript expression\"\n          placeholder={\n            \"Example:\\npayload.auth.user_id === 'f094d054-64c0-42a3-a413-3f5a4eae0088'\\n\\nAvailable variables: \" +\n            \"id, queue, type, state, start_time, max_retry, retried, last_failed_at, error_message, next_process_at, \" +\n            \"timeout_seconds, deadline, group, completed_at, ttl_seconds, is_orphaned, payload, result\"\n          }\n          value={customJs}\n          multiline\n          minRows={7}\n          fullWidth\n          variant=\"filled\"\n          onChange={(e) => setCustomJs(e.target.value)}\n        />\n        <TextField\n          label={\"Limit number of results\"}\n          placeholder={\"Leave blank for no limit\"}\n          variant=\"filled\"\n          fullWidth\n          value={resultLimitStr}\n          onKeyDown={handleKeyDown}\n          onChange={handleResultLimitChange}\n          error={resultLimitError != null}\n          helperText={resultLimitError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose}>Cancel</Button>\n        <Button onClick={handleRunFilter}>Run</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default TasksFilterDialog;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ActiveTasksTable from \"./ActiveTasksTable\";\nimport PendingTasksTable from \"./PendingTasksTable\";\nimport ScheduledTasksTable from \"./ScheduledTasksTable\";\nimport RetryTasksTable from \"./RetryTasksTable\";\nimport ArchivedTasksTable from \"./ArchivedTasksTable\";\nimport CompletedTasksTable from \"./CompletedTasksTable\";\nimport AggregatingTasksTableContainer from \"./AggregatingTasksTableContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { queueDetailsPath, taskDetailsPath } from \"../paths\";\nimport { QueueInfo } from \"../reducers/queuesReducer\";\nimport { AppState } from \"../store\";\nimport { isDarkTheme } from \"../theme\";\nimport { Divider } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport TasksFilterDialog from \"./TasksFilterDialog\";\nimport {\n  listActiveTasks,\n  listArchivedTasks,\n  listCompletedTasks,\n  listPendingTasks,\n  listRetryTasks,\n  listScheduledTasks,\n  ListTasksResponse,\n  PaginationOptions,\n} from \"../api\";\nimport {\n  cancelFilterTasks,\n  filterTasksAsync,\n  TasksFilter,\n} from \"../actions/tasksActions\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  selected: string; // currently selected value\n  value: string; // tab panel will be shown if selected value equals to the value\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, selected, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== selected}\n      id={`scrollable-auto-tabpanel-${selected}`}\n      aria-labelledby={`scrollable-auto-tab-${selected}`}\n      style={{ flex: 1, overflowY: \"scroll\" }}\n      {...other}\n    >\n      {value === selected && children}\n    </div>\n  );\n}\n\nfunction mapStatetoProps(state: AppState, ownProps: Props) {\n  // TODO: Add loading state for each queue.\n  const queueInfo = state.queues.data.find(\n    (q: QueueInfo) => q.name === ownProps.queue\n  );\n  const currentStats = queueInfo\n    ? queueInfo.currentStats\n    : {\n        queue: ownProps.queue,\n        paused: false,\n        size: 0,\n        groups: 0,\n        active: 0,\n        pending: 0,\n        aggregating: 0,\n        scheduled: 0,\n        retry: 0,\n        archived: 0,\n        completed: 0,\n        processed: 0,\n        failed: 0,\n        timestamp: \"n/a\",\n      };\n  const filterOp = state.tasks.filterOp;\n  const filterActive = filterOp != null;\n  const filterCount = filterOp?.done === true ? filterOp?.result?.length : null;\n  return { currentStats, filterActive, filterCount };\n}\n\nconst mapDispatchToProps = {\n  filterTasksAsync,\n  cancelFilterTasks,\n};\n\nconst connector = connect(mapStatetoProps, mapDispatchToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props {\n  queue: string;\n  selected: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    background: theme.palette.background.paper,\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(1),\n  },\n  heading: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  chip: {\n    marginLeft: theme.spacing(1),\n  },\n  taskcount: {\n    fontSize: \"12px\",\n    color: theme.palette.text.secondary,\n    background: isDarkTheme(theme)\n      ? \"#303030\"\n      : theme.palette.background.default,\n    textAlign: \"center\",\n    padding: \"3px 6px\",\n    borderRadius: \"10px\",\n    marginLeft: \"2px\",\n  },\n  searchbar: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n  search: {\n    position: \"relative\",\n    maxWidth: 400,\n    borderRadius: \"18px\",\n    backgroundColor: isDarkTheme(theme) ? \"#303030\" : theme.palette.grey[100],\n    \"&:hover, &:focus\": {\n      backgroundColor: isDarkTheme(theme) ? \"#303030\" : theme.palette.grey[200],\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: \"100%\",\n    fontSize: \"0.85rem\",\n  },\n}));\n\nfunction TasksTableContainer(props: Props & ReduxProps) {\n  const { currentStats, cancelFilterTasks } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const chips = [\n    {\n      key: \"active\",\n      label: \"Active\",\n      count: currentStats.active,\n      fetcher: listActiveTasks,\n    },\n    {\n      key: \"pending\",\n      label: \"Pending\",\n      count: currentStats.pending,\n      fetcher: listPendingTasks,\n    },\n    {\n      key: \"aggregating\",\n      label: \"Aggregating\",\n      count: currentStats.aggregating,\n      fetcher: null, // TODO Support aggregating table\n    },\n    {\n      key: \"scheduled\",\n      label: \"Scheduled\",\n      count: currentStats.scheduled,\n      fetcher: listScheduledTasks,\n    },\n    {\n      key: \"retry\",\n      label: \"Retry\",\n      count: currentStats.retry,\n      fetcher: listRetryTasks,\n    },\n    {\n      key: \"archived\",\n      label: \"Archived\",\n      count: currentStats.archived,\n      fetcher: listArchivedTasks,\n    },\n    {\n      key: \"completed\",\n      label: \"Completed\",\n      count: currentStats.completed,\n      fetcher: listCompletedTasks,\n    },\n  ];\n\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [filterModalOpen, setFilterModalOpen] = useState(false);\n\n  useEffect(() => {\n    // Clear filter when the user selects a different task status\n    cancelFilterTasks();\n    return () => {\n      // Clear filter when leaving the page\n      cancelFilterTasks();\n    };\n  }, [props.selected, cancelFilterTasks]);\n\n  const taskPageFetcher = (\n    fetcherApi: (\n      qname: string,\n      pageOpts?: PaginationOptions\n    ) => Promise<ListTasksResponse>\n  ) => {\n    const qname = props.queue;\n    return async (page?: number) => {\n      return fetcherApi(qname, {\n        page,\n        size: 10_000, // TODO Choose a value here intelligently?\n      });\n    };\n  };\n\n  const dispatchFilterAction = (filter: TasksFilter) => {\n    const fetcherApi = chips.find((c) => c.key === props.selected)?.fetcher;\n    if (fetcherApi == null) {\n      console.error(\n        \"Failed to find fetcher API for selected task type:\",\n        props.selected\n      );\n      return;\n    }\n    props.filterTasksAsync(filter, taskPageFetcher(fetcherApi));\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.container}>\n      <div className={classes.header}>\n        <Typography color=\"textPrimary\" className={classes.heading}>\n          Tasks\n        </Typography>\n        <div>\n          {chips.map((c) => (\n            <Chip\n              key={c.key}\n              className={classes.chip}\n              label={\n                <div>\n                  {c.label} <span className={classes.taskcount}>{c.count}</span>\n                </div>\n              }\n              variant=\"outlined\"\n              color={props.selected === c.key ? \"primary\" : \"default\"}\n              onClick={() => history.push(queueDetailsPath(props.queue, c.key))}\n            />\n          ))}\n        </div>\n        <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\n        <div>\n          {chips.find((c) => c.key === props.selected)?.fetcher && (\n            <Chip\n              icon={<FilterListIcon />}\n              label=\"Filter\"\n              onClick={() => setFilterModalOpen(true)}\n              onDelete={\n                props.filterActive ? props.cancelFilterTasks : undefined\n              }\n              color={props.filterActive ? \"primary\" : \"default\"}\n            />\n          )}\n          <TasksFilterDialog\n            open={filterModalOpen}\n            onClose={() => setFilterModalOpen(false)}\n            onFilter={dispatchFilterAction}\n          />\n        </div>\n        <div className={classes.searchbar}>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search by ID\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={searchQuery}\n              onChange={(e) => {\n                setSearchQuery(e.target.value);\n              }}\n              inputProps={{\n                \"aria-label\": \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\") {\n                    history.push(\n                      taskDetailsPath(props.queue, searchQuery.trim())\n                    );\n                  }\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <TabPanel value=\"active\" selected={props.selected}>\n        <ActiveTasksTable\n          queue={props.queue}\n          totalTaskCount={props.filterCount ?? currentStats.active}\n        />\n      </TabPanel>\n      <TabPanel value=\"pending\" selected={props.selected}>\n        <PendingTasksTable\n          queue={props.queue}\n          totalTaskCount={props.filterCount ?? currentStats.pending}\n        />\n      </TabPanel>\n      <TabPanel value=\"aggregating\" selected={props.selected}>\n        <AggregatingTasksTableContainer queue={props.queue} />\n      </TabPanel>\n      <TabPanel value=\"scheduled\" selected={props.selected}>\n        <ScheduledTasksTable\n          queue={props.queue}\n          totalTaskCount={props.filterCount ?? currentStats.scheduled}\n        />\n      </TabPanel>\n      <TabPanel value=\"retry\" selected={props.selected}>\n        <RetryTasksTable\n          queue={props.queue}\n          totalTaskCount={props.filterCount ?? currentStats.retry}\n        />\n      </TabPanel>\n      <TabPanel value=\"archived\" selected={props.selected}>\n        <ArchivedTasksTable\n          queue={props.queue}\n          totalTaskCount={props.filterCount ?? currentStats.archived}\n        />\n      </TabPanel>\n      <TabPanel value=\"completed\" selected={props.selected}>\n        <CompletedTasksTable\n          queue={props.queue}\n          totalTaskCount={props.filterCount ?? currentStats.completed}\n        />\n      </TabPanel>\n    </Paper>\n  );\n}\n\nexport default connector(TasksTableContainer);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport prettyBytes from \"pretty-bytes\";\nimport { AppState } from \"../store\";\nimport { percentage } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    display: \"flex\",\n  },\n  bannerItem: {\n    flexGrow: 1,\n    borderLeft: `1px solid ${theme.palette.divider}`,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\ninterface Props {\n  qname: string;\n}\n\nfunction mapStateToProps(state: AppState, ownProps: Props) {\n  const queueInfo = state.queues.data.find((q) => q.name === ownProps.qname);\n  return {\n    queue: queueInfo?.currentStats,\n  };\n}\n\nconst connector = connect(mapStateToProps);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\nfunction QueueInfoBanner(props: Props & ReduxProps) {\n  const classes = useStyles();\n  const { queue, qname } = props;\n  return (\n    <div className={classes.banner}>\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Queue name\n        </Typography>\n        <Typography color=\"textSecondary\">{qname}</Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Queue state\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? (queue.paused ? \"paused\" : \"run\") : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Queue size\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.size : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Task groups\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.groups : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Memory usage\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? prettyBytes(queue.memory_usage_bytes) : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Latency\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.display_latency : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Processed\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.processed : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Failed\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? queue.failed : \"-\"}\n        </Typography>\n      </div>\n\n      <div className={classes.bannerItem}>\n        <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\n          Error rate\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {queue ? percentage(queue.failed, queue.processed) : \"-\"}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nexport default connector(QueueInfoBanner);\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { emphasize, withStyles, Theme } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { paths as getPaths, queueDetailsPath } from \"../paths\";\nimport { isDarkTheme } from \"../theme\";\n\nconst StyledBreadcrumb = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: isDarkTheme(theme)\n      ? \"#303030\"\n      : theme.palette.background.default,\n    height: theme.spacing(3),\n    color: theme.palette.text.secondary,\n    fontWeight: 400,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.action.hover, 0.12),\n    },\n  },\n}))(Chip) as typeof Chip; // Note: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\ninterface Props {\n  // All queue names.\n  queues: string[];\n  // Name of the queue currently selected.\n  queueName: string;\n  // ID of the task currently selected (optional).\n  taskId?: string;\n}\n\nexport default function QueueBreadcrumbs(props: Props) {\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState<null | Element>(null);\n  const paths = getPaths();\n\n  const handleClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n    event.preventDefault();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <StyledBreadcrumb\n          component={Link}\n          to={paths.HOME}\n          label=\"Queues\"\n          onClick={() => history.push(paths.HOME)}\n        />\n        <StyledBreadcrumb\n          label={props.queueName}\n          deleteIcon={<ExpandMoreIcon />}\n          onClick={handleClick}\n          onDelete={handleClick}\n        />\n        {props.taskId && <StyledBreadcrumb label={`task:${props.taskId}`} />}\n      </Breadcrumbs>\n      <Menu\n        id=\"queue-breadcrumb-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        {props.queues.sort().map((qname) => (\n          <MenuItem\n            key={qname}\n            onClick={() => {\n              history.push(queueDetailsPath(qname));\n              closeMenu();\n            }}\n          >\n            {qname}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TasksTableContainer from \"../components/TasksTableContainer\";\nimport QueueInfoBanner from \"../components/QueueInfoBanner\";\nimport QueueBreadCrumb from \"../components/QueueBreadcrumb\";\nimport { useParams } from \"react-router-dom\";\nimport { listQueuesAsync } from \"../actions/queuesActions\";\nimport { AppState } from \"../store\";\nimport { QueueDetailsRouteParams } from \"../paths\";\nimport { useQuery } from \"../hooks\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    queues: state.queues.data.map((q) => q.name),\n  };\n}\n\nconst connector = connect(mapStateToProps, { listQueuesAsync });\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n  },\n  breadcrumbs: {\n    marginBottom: theme.spacing(2),\n  },\n  banner: {\n    marginBottom: theme.spacing(2),\n  },\n  tasksTable: {\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nconst validStatus = [\n  \"active\",\n  \"pending\",\n  \"aggregating\",\n  \"scheduled\",\n  \"retry\",\n  \"archived\",\n  \"completed\",\n];\nconst defaultStatus = \"active\";\n\nfunction TasksView(props: ConnectedProps<typeof connector>) {\n  const classes = useStyles();\n  const { qname } = useParams<QueueDetailsRouteParams>();\n  const query = useQuery();\n  let selected = query.get(\"status\");\n  if (!selected || !validStatus.includes(selected)) {\n    selected = defaultStatus;\n  }\n  const { listQueuesAsync } = props;\n\n  useEffect(() => {\n    listQueuesAsync();\n  }, [listQueuesAsync]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={0} className={classes.container}>\n        <Grid item xs={12} className={classes.breadcrumbs}>\n          <QueueBreadCrumb queues={props.queues} queueName={qname} />\n        </Grid>\n        <Grid item xs={12} className={classes.banner}>\n          <QueueInfoBanner qname={qname} />\n        </Grid>\n        <Grid item xs={12} className={classes.tasksTable}>\n          <TasksTableContainer queue={qname} selected={selected} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(TasksView);\n","import React, { useMemo, useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { useParams } from \"react-router-dom\";\nimport QueueBreadCrumb from \"../components/QueueBreadcrumb\";\nimport { AppState } from \"../store\";\nimport { getTaskInfoAsync } from \"../actions/tasksActions\";\nimport { TaskDetailsRouteParams } from \"../paths\";\nimport { usePolling } from \"../hooks\";\nimport { listQueuesAsync } from \"../actions/queuesActions\";\nimport SyntaxHighlighter from \"../components/SyntaxHighlighter\";\nimport { durationFromSeconds, stringifyDuration, timeAgo, prettifyPayload } from \"../utils\";\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.tasks.taskInfo.loading,\n    error: state.tasks.taskInfo.error,\n    taskInfo: state.tasks.taskInfo.data,\n    pollInterval: state.settings.pollInterval,\n    queues: state.queues.data.map((q) => q.name), // FIXME: This data may not be available\n  };\n}\n\nconst connector = connect(mapStateToProps, {\n  getTaskInfoAsync,\n  listQueuesAsync,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n  },\n  alert: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  breadcrumbs: {\n    marginBottom: theme.spacing(2),\n  },\n  infoRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(1),\n  },\n  infoKeyCell: {\n    width: \"140px\",\n  },\n  infoValueCell: {\n    width: \"auto\",\n  },\n  footer: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction TaskDetailsView(props: Props) {\n  const classes = useStyles();\n  const { qname, taskId } = useParams<TaskDetailsRouteParams>();\n  const { getTaskInfoAsync, pollInterval, listQueuesAsync, taskInfo } = props;\n  const history = useHistory();\n\n  const fetchTaskInfo = useMemo(() => {\n    return () => {\n      getTaskInfoAsync(qname, taskId);\n    };\n  }, [qname, taskId, getTaskInfoAsync]);\n\n  usePolling(fetchTaskInfo, pollInterval);\n\n  // Fetch queues data to populate props.queues\n  useEffect(() => {\n    listQueuesAsync();\n  }, [listQueuesAsync]);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} className={classes.breadcrumbs}>\n          <QueueBreadCrumb\n            queues={props.queues}\n            queueName={qname}\n            taskId={taskId}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {props.error ? (\n            <Alert severity=\"error\" className={classes.alert}>\n              <AlertTitle>Error</AlertTitle>\n              {props.error}\n            </Alert>\n          ) : (\n            <Paper className={classes.paper} variant=\"outlined\">\n              <Typography variant=\"h6\">Task Info</Typography>\n              <div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    ID:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.id}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Type:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.type}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    State:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.state}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Queue:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.queue}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Retry:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.retried}/{taskInfo?.max_retry}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Last Failure:{\" \"}\n                  </Typography>\n                  <Typography className={classes.infoValueCell}>\n                    {taskInfo?.last_failed_at ? (\n                      <Typography>\n                        {taskInfo?.error_message} ({taskInfo?.last_failed_at})\n                      </Typography>\n                    ) : (\n                      <Typography> - </Typography>\n                    )}\n                  </Typography>\n                </div>\n                <div className={classes.infoRow}>\n                  <Typography\n                    variant=\"subtitle2\"\n                    className={classes.infoKeyCell}\n                  >\n                    Next Process Time:{\" \"}\n                  </Typography>\n                  {taskInfo?.next_process_at ? (\n                    <Typography>{taskInfo?.next_process_at}</Typography>\n                  ) : (\n                    <Typography> - </Typography>\n                  )}\n                </div>\n              </div>\n              <div className={classes.infoRow}>\n                <Typography variant=\"subtitle2\" className={classes.infoKeyCell}>\n                  Timeout:{\" \"}\n                </Typography>\n                <Typography className={classes.infoValueCell}>\n                  {taskInfo?.timeout_seconds ? (\n                    <Typography>{taskInfo?.timeout_seconds} seconds</Typography>\n                  ) : (\n                    <Typography> - </Typography>\n                  )}\n                </Typography>\n              </div>\n              <div className={classes.infoRow}>\n                <Typography variant=\"subtitle2\" className={classes.infoKeyCell}>\n                  Deadline:{\" \"}\n                </Typography>\n                <Typography className={classes.infoValueCell}>\n                  {taskInfo?.deadline ? (\n                    <Typography>{taskInfo?.deadline}</Typography>\n                  ) : (\n                    <Typography> - </Typography>\n                  )}\n                </Typography>\n              </div>\n              <div className={classes.infoRow}>\n                <Typography variant=\"subtitle2\" className={classes.infoKeyCell}>\n                  Payload:{\" \"}\n                </Typography>\n                <div className={classes.infoValueCell}>\n                  {taskInfo?.payload && (\n                    <SyntaxHighlighter\n                      language=\"json\"\n                      customStyle={{ margin: 0, maxWidth: 400 }}\n                    >\n                      {prettifyPayload(taskInfo.payload)}\n                    </SyntaxHighlighter>\n                  )}\n                </div>\n              </div>\n              {\n                /* Completed Task Only */ taskInfo?.state === \"completed\" && (\n                  <>\n                    <div className={classes.infoRow}>\n                      <Typography\n                        variant=\"subtitle2\"\n                        className={classes.infoKeyCell}\n                      >\n                        Completed:{\" \"}\n                      </Typography>\n                      <div className={classes.infoValueCell}>\n                        <Typography>\n                          {timeAgo(taskInfo.completed_at)} (\n                          {taskInfo.completed_at})\n                        </Typography>\n                      </div>\n                    </div>\n                    <div className={classes.infoRow}>\n                      <Typography\n                        variant=\"subtitle2\"\n                        className={classes.infoKeyCell}\n                      >\n                        Result:{\" \"}\n                      </Typography>\n                      <div className={classes.infoValueCell}>\n                        <SyntaxHighlighter\n                          language=\"json\"\n                          customStyle={{ margin: 0, maxWidth: 400 }}\n                        >\n                          {prettifyPayload(taskInfo.result)}\n                        </SyntaxHighlighter>\n                      </div>\n                    </div>\n                    <div className={classes.infoRow}>\n                      <Typography\n                        variant=\"subtitle2\"\n                        className={classes.infoKeyCell}\n                      >\n                        TTL:{\" \"}\n                      </Typography>\n                      <Typography className={classes.infoValueCell}>\n                        <Typography>\n                          {taskInfo.ttl_seconds > 0\n                            ? `${stringifyDuration(\n                                durationFromSeconds(taskInfo.ttl_seconds)\n                              )} left`\n                            : \"expired\"}\n                        </Typography>\n                      </Typography>\n                    </div>\n                  </>\n                )\n              }\n            </Paper>\n          )}\n          <div className={classes.footer}>\n            <Button\n              startIcon={<ArrowBackIcon />}\n              onClick={() => history.goBack()}\n            >\n              Go Back\n            </Button>\n          </div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(TaskDetailsView);\n","import React, { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { pollIntervalChange, selectTheme } from \"../actions/settingsActions\";\nimport { AppState } from \"../store\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { ThemePreference } from \"../reducers/settingsReducer\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  select: {\n    width: \"200px\",\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    pollInterval: state.settings.pollInterval,\n    themePreference: state.settings.themePreference,\n  };\n}\n\nconst mapDispatchToProps = { pollIntervalChange, selectTheme };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction SettingsView(props: PropsFromRedux) {\n  const classes = useStyles();\n\n  const [sliderValue, setSliderValue] = useState(props.pollInterval);\n  const handleSliderValueChange = (event: any, val: number | number[]) => {\n    setSliderValue(val as number);\n  };\n\n  const handleSliderValueCommited = (event: any, val: number | number[]) => {\n    props.pollIntervalChange(val as number);\n  };\n\n  const handleThemeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.selectTheme(event.target.value as ThemePreference);\n  };\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <Typography variant=\"h5\" color=\"textPrimary\">\n            Settings\n          </Typography>\n        </Grid>\n        <Grid item xs={5} />\n\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <Typography color=\"textPrimary\">Polling Interval</Typography>\n            <Typography gutterBottom color=\"textSecondary\" variant=\"subtitle1\">\n              Web UI will fetch live data with the specified interval\n            </Typography>\n            <Typography gutterBottom color=\"textSecondary\" variant=\"subtitle1\">\n              Currently: Every{\" \"}\n              {sliderValue === 1 ? \"second\" : `${sliderValue} seconds`}\n            </Typography>\n            <Slider\n              value={sliderValue}\n              onChange={handleSliderValueChange}\n              onChangeCommitted={handleSliderValueCommited}\n              aria-labelledby=\"continuous-slider\"\n              valueLabelDisplay=\"auto\"\n              step={1}\n              marks={true}\n              min={2}\n              max={20}\n            />\n          </Paper>\n        </Grid>\n        <Grid xs={5} />\n\n        <Grid item xs={1} />\n        <Grid item xs={6}>\n          <Paper className={classes.paper} variant=\"outlined\">\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <Typography color=\"textPrimary\">Dark Theme</Typography>\n              <Select\n                labelId=\"theme-label\"\n                id=\"theme-selected\"\n                value={props.themePreference}\n                onChange={handleThemeChange}\n                label=\"theme preference\"\n                className={classes.select}\n              >\n                <MenuItem value={ThemePreference.SystemDefault}>\n                  System Default\n                </MenuItem>\n                <MenuItem value={ThemePreference.Always}>Always</MenuItem>\n                <MenuItem value={ThemePreference.Never}>Never</MenuItem>\n              </Select>\n            </FormControl>\n          </Paper>\n        </Grid>\n        <Grid item xs={5} />\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(SettingsView);\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport SyntaxHighlighter from \"./SyntaxHighlighter\";\nimport { ServerInfo } from \"../api\";\nimport { SortDirection, SortableTableColumn } from \"../types/table\";\nimport { timeAgo, uuidPrefix, prettifyPayload } from \"../utils\";\nimport { queueDetailsPath } from \"../paths\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  fixedCell: {\n    position: \"sticky\",\n    zIndex: 1,\n    left: 0,\n    background: theme.palette.background.paper,\n  },\n}));\n\nenum SortBy {\n  HostPID,\n  Status,\n  ActiveWorkers,\n  Queues,\n  Started,\n}\nconst colConfigs: SortableTableColumn<SortBy>[] = [\n  {\n    label: \"Host:PID\",\n    key: \"host\",\n    sortBy: SortBy.HostPID,\n    align: \"left\",\n  },\n  {\n    label: \"Started\",\n    key: \"started\",\n    sortBy: SortBy.Started,\n    align: \"left\",\n  },\n  {\n    label: \"Status\",\n    key: \"status\",\n    sortBy: SortBy.Status,\n    align: \"left\",\n  },\n  {\n    label: \"Queues\",\n    key: \"queues\",\n    sortBy: SortBy.Queues,\n    align: \"left\",\n  },\n  {\n    label: \"Active Workers\",\n    key: \"workers\",\n    sortBy: SortBy.ActiveWorkers,\n    align: \"left\",\n  },\n];\n\n// sortServers takes a array of server-infos and return a sorted array.\n// It returns a new array and leave the original array untouched.\nfunction sortServerInfos(\n  entries: ServerInfo[],\n  cmpFn: (first: ServerInfo, second: ServerInfo) => number\n): ServerInfo[] {\n  let copy = [...entries];\n  copy.sort(cmpFn);\n  return copy;\n}\n\ninterface Props {\n  servers: ServerInfo[];\n}\n\nexport default function ServersTable(props: Props) {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.HostPID);\n  const [sortDir, setSortDir] = useState<SortDirection>(SortDirection.Asc);\n\n  const createSortClickHandler = (sortKey: SortBy) => (e: React.MouseEvent) => {\n    if (sortKey === sortBy) {\n      // Toggle sort direction.\n      const nextSortDir =\n        sortDir === SortDirection.Asc ? SortDirection.Desc : SortDirection.Asc;\n      setSortDir(nextSortDir);\n    } else {\n      // Change the sort key.\n      setSortBy(sortKey);\n    }\n  };\n\n  const cmpFunc = (s1: ServerInfo, s2: ServerInfo): number => {\n    let isS1Smaller = false;\n    switch (sortBy) {\n      case SortBy.HostPID:\n        if (s1.host === s2.host && s1.pid === s2.pid) return 0;\n        if (s1.host === s2.host) {\n          isS1Smaller = s1.pid < s2.pid;\n        } else {\n          isS1Smaller = s1.host < s2.host;\n        }\n        break;\n      case SortBy.Started:\n        const s1StartTime = Date.parse(s1.start_time);\n        const s2StartTime = Date.parse(s2.start_time);\n        if (s1StartTime === s2StartTime) return 0;\n        isS1Smaller = s1StartTime < s2StartTime;\n        break;\n      case SortBy.Status:\n        if (s1.status === s2.status) return 0;\n        isS1Smaller = s1.status < s2.status;\n        break;\n      case SortBy.Queues:\n        const s1Queues = Object.keys(s1.queue_priorities).join(\",\");\n        const s2Queues = Object.keys(s2.queue_priorities).join(\",\");\n        if (s1Queues === s2Queues) return 0;\n        isS1Smaller = s1Queues < s2Queues;\n        break;\n      case SortBy.ActiveWorkers:\n        if (s1.active_workers.length === s2.active_workers.length) {\n          return 0;\n        }\n        isS1Smaller = s1.active_workers.length < s2.active_workers.length;\n        break;\n      default:\n        // eslint-disable-next-line no-throw-literal\n        throw `Unexpected order by value: ${sortBy}`;\n    }\n    if (sortDir === SortDirection.Asc) {\n      return isS1Smaller ? -1 : 1;\n    } else {\n      return isS1Smaller ? 1 : -1;\n    }\n  };\n\n  if (props.servers.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        <AlertTitle>Info</AlertTitle>\n        No servers found at this time.\n      </Alert>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"server info table\">\n        <TableHead>\n          <TableRow>\n            {colConfigs.map((cfg, i) => (\n              <TableCell\n                key={cfg.key}\n                align={cfg.align}\n                className={clsx(i === 0 && classes.fixedCell)}\n              >\n                <TableSortLabel\n                  active={cfg.sortBy === sortBy}\n                  direction={sortDir}\n                  onClick={createSortClickHandler(cfg.sortBy)}\n                >\n                  {cfg.label}\n                </TableSortLabel>\n              </TableCell>\n            ))}\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sortServerInfos(props.servers, cmpFunc).map((srv) => (\n            <Row key={srv.id} server={srv} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\ninterface RowProps {\n  server: ServerInfo;\n}\n\nconst useRowStyles = makeStyles((theme) => ({\n  rowRoot: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  noBorder: {\n    border: \"none\",\n  },\n  link: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nfunction Row(props: RowProps) {\n  const classes = useRowStyles();\n  const { server } = props;\n  const [open, setOpen] = useState<boolean>(false);\n  const qnames = Object.keys(server.queue_priorities);\n  return (\n    <React.Fragment>\n      <TableRow className={classes.rowRoot}>\n        <TableCell>\n          {server.host}:{server.pid}\n        </TableCell>\n        <TableCell>{timeAgo(server.start_time)}</TableCell>\n        <TableCell>{server.status}</TableCell>\n        <TableCell>\n          {qnames.map((qname, idx) => (\n            <span key={qname}>\n              <Link to={queueDetailsPath(qname)} className={classes.link}>\n                {qname}\n              </Link>\n              {idx === qnames.length - 1 ? \"\" : \", \"}\n            </span>\n          ))}\n        </TableCell>\n        <TableCell>\n          {server.active_workers.length}/{server.concurrency}\n        </TableCell>\n        <TableCell>\n          <Tooltip title={open ? \"Hide Details\" : \"Show Details\"}>\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          </Tooltip>\n        </TableCell>\n      </TableRow>\n      <TableRow className={classes.rowRoot}>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Grid container spacing={2}>\n              <Grid item xs={9}>\n                <Typography\n                  variant=\"subtitle1\"\n                  gutterBottom\n                  color=\"textSecondary\"\n                >\n                  Active Workers\n                </Typography>\n                <Table size=\"small\" aria-label=\"active workers\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Task ID</TableCell>\n                      <TableCell>Task Payload</TableCell>\n                      <TableCell>Queue</TableCell>\n                      <TableCell>Started</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {server.active_workers.map((worker) => (\n                      <TableRow key={worker.task_id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {uuidPrefix(worker.task_id)}\n                        </TableCell>\n                        <TableCell>\n                          <SyntaxHighlighter\n                            language=\"json\"\n                            customStyle={{ margin: 0 }}\n                          >\n                            {prettifyPayload(worker.task_payload)}\n                          </SyntaxHighlighter>\n                        </TableCell>\n                        <TableCell>{worker.queue}</TableCell>\n                        <TableCell>{timeAgo(worker.start_time)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Grid>\n              <Grid item xs={3}>\n                <Typography\n                  variant=\"subtitle1\"\n                  gutterBottom\n                  color=\"textSecondary\"\n                >\n                  Queue Priority\n                </Typography>\n                <Table size=\"small\" aria-label=\"active workers\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Queue</TableCell>\n                      <TableCell align=\"right\">Priority</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {qnames.map((qname) => (\n                      <TableRow key={qname}>\n                        <TableCell>\n                          <Link\n                            to={queueDetailsPath(qname)}\n                            className={classes.link}\n                          >\n                            {qname}\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {server.queue_priorities[qname]}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                <Box margin={2}>\n                  <Typography variant=\"subtitle2\" component=\"span\">\n                    Strict Priority:{\" \"}\n                  </Typography>\n                  <Typography variant=\"button\" component=\"span\">\n                    {server.strict_priority_enabled ? \"ON\" : \"OFF\"}\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n","import { Dispatch } from \"redux\";\nimport { listServers, ListServersResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of server related action types.\nexport const LIST_SERVERS_BEGIN = \"LIST_SERVERS_BEGIN\";\nexport const LIST_SERVERS_SUCCESS = \"LIST_SERVERS_SUCCESS\";\nexport const LIST_SERVERS_ERROR = \"LIST_SERVERS_ERROR\";\n\ninterface ListServersBeginAction {\n  type: typeof LIST_SERVERS_BEGIN;\n}\ninterface ListServersSuccessAction {\n  type: typeof LIST_SERVERS_SUCCESS;\n  payload: ListServersResponse;\n}\ninterface ListServersErrorAction {\n  type: typeof LIST_SERVERS_ERROR;\n  error: string; // error description\n}\n\n// Union of all server related actions.\nexport type ServersActionTypes =\n  | ListServersBeginAction\n  | ListServersSuccessAction\n  | ListServersErrorAction;\n\nexport function listServersAsync() {\n  return async (dispatch: Dispatch<ServersActionTypes>) => {\n    dispatch({ type: LIST_SERVERS_BEGIN });\n    try {\n      const response = await listServers();\n      dispatch({\n        type: LIST_SERVERS_SUCCESS,\n        payload: response,\n      });\n    } catch (error) {\n      console.error(`listServersAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: LIST_SERVERS_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport ServersTable from \"../components/ServersTable\";\nimport { listServersAsync } from \"../actions/serversActions\";\nimport { AppState } from \"../store\";\nimport { usePolling } from \"../hooks\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  heading: {\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.servers.loading,\n    error: state.servers.error,\n    servers: state.servers.data,\n    pollInterval: state.settings.pollInterval,\n  };\n}\n\nconst connector = connect(mapStateToProps, { listServersAsync });\n\ntype Props = ConnectedProps<typeof connector>;\n\nfunction ServersView(props: Props) {\n  const { pollInterval, listServersAsync } = props;\n  const classes = useStyles();\n\n  usePolling(listServersAsync, pollInterval);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error === \"\" ? (\n          <Grid item xs={12}>\n            <Paper className={classes.paper} variant=\"outlined\">\n              <Typography variant=\"h6\" className={classes.heading}>\n                Servers\n              </Typography>\n              <ServersTable servers={props.servers} />\n            </Paper>\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve servers live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(ServersView);\n","import { Dispatch } from \"redux\";\nimport { getRedisInfo, RedisInfoResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of redis-info related action types.\nexport const GET_REDIS_INFO_BEGIN = \"GET_REDIS_INFO_BEGIN\";\nexport const GET_REDIS_INFO_SUCCESS = \"GET_REDIS_INFO_SUCCESS\";\nexport const GET_REDIS_INFO_ERROR = \"GET_REDIS_INFO_ERROR\";\n\ninterface GetRedisInfoBeginAction {\n  type: typeof GET_REDIS_INFO_BEGIN;\n}\n\ninterface GetRedisInfoSuccessAction {\n  type: typeof GET_REDIS_INFO_SUCCESS;\n  payload: RedisInfoResponse;\n}\n\ninterface GetRedisInfoErrorAction {\n  type: typeof GET_REDIS_INFO_ERROR;\n  error: string;\n}\n\n// Union of all redis-info related actions.\nexport type RedisInfoActionTypes =\n  | GetRedisInfoBeginAction\n  | GetRedisInfoErrorAction\n  | GetRedisInfoSuccessAction;\n\nexport function getRedisInfoAsync() {\n  return async (dispatch: Dispatch<RedisInfoActionTypes>) => {\n    dispatch({ type: GET_REDIS_INFO_BEGIN });\n    try {\n      const response = await getRedisInfo();\n      dispatch({ type: GET_REDIS_INFO_SUCCESS, payload: response });\n    } catch (error) {\n      console.error(`getRedisInfoAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: GET_REDIS_INFO_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { QueueLocation } from \"../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\ninterface Props {\n  queueLocations: QueueLocation[];\n}\n\nexport default function QueueLocationTable(props: Props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"queue location table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Queue</TableCell>\n            <TableCell>KeySlot</TableCell>\n            <TableCell>Node Addresses</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.queueLocations.map((loc) => (\n            <TableRow key={loc.queue}>\n              <TableCell component=\"th\" scope=\"row\">\n                {loc.queue}\n              </TableCell>\n              <TableCell>{loc.keyslot}</TableCell>\n              <TableCell>{loc.nodes.join(\", \")}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport SyntaxHighlighter from \"../components/SyntaxHighlighter\";\nimport { getRedisInfoAsync } from \"../actions/redisInfoActions\";\nimport { usePolling } from \"../hooks\";\nimport { AppState } from \"../store\";\nimport { timeAgoUnix } from \"../utils\";\nimport { RedisInfo } from \"../api\";\nimport QueueLocationTable from \"../components/QueueLocationTable\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.redis.loading,\n    error: state.redis.error,\n    redisInfo: state.redis.data,\n    redisAddress: state.redis.address,\n    redisInfoRaw: state.redis.rawData,\n    redisClusterEnabled: state.redis.cluster,\n    redisClusterNodesRaw: state.redis.rawClusterNodes,\n    queueLocations: state.redis.queueLocations,\n    pollInterval: state.settings.pollInterval,\n    themePreference: state.settings.themePreference,\n  };\n}\n\nconst connector = connect(mapStateToProps, { getRedisInfoAsync });\ntype Props = ConnectedProps<typeof connector>;\n\nfunction RedisInfoView(props: Props) {\n  const classes = useStyles();\n  const {\n    pollInterval,\n    getRedisInfoAsync,\n    redisInfo,\n    redisInfoRaw,\n    redisClusterEnabled,\n    redisClusterNodesRaw,\n    queueLocations,\n  } = props;\n  usePolling(getRedisInfoAsync, pollInterval);\n\n  // Metrics to show\n  // - Used Memory\n  // - Memory Fragmentation Ratio\n  // - Connected Clients\n  // - Connected Replicas (slaves)\n  // - Persistence (rdb_last_save_time, rdb_changes_since_last_save)\n  // - Errors (rejected_connections)\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        {props.error === \"\" ? (\n          <>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\" color=\"textPrimary\">\n                {redisClusterEnabled ? \"Redis Cluster Info\" : \"Redis Info\"}\n              </Typography>\n              {!redisClusterEnabled && (\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  Connected to: {props.redisAddress}\n                </Typography>\n              )}\n            </Grid>\n            {queueLocations && queueLocations.length > 0 && (\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" color=\"textSecondary\">\n                  Queue Location in Cluster\n                </Typography>\n                <QueueLocationTable queueLocations={queueLocations} />\n              </Grid>\n            )}\n            {redisClusterNodesRaw && (\n              <>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\" color=\"textSecondary\">\n                    <Link\n                      href=\"https://redis.io/commands/cluster-nodes\"\n                      target=\"_\"\n                    >\n                      CLUSTER NODES\n                    </Link>{\" \"}\n                    Command Output\n                  </Typography>\n                  <SyntaxHighlighter language=\"yaml\">\n                    {redisClusterNodesRaw}\n                  </SyntaxHighlighter>\n                </Grid>\n              </>\n            )}\n            {redisInfo && !redisClusterEnabled && (\n              <RedisMetricCards redisInfo={redisInfo} />\n            )}\n            {redisInfoRaw && (\n              <>\n                <Grid item xs={6}>\n                  <Typography variant=\"h6\" color=\"textSecondary\">\n                    {redisClusterEnabled ? (\n                      <Link\n                        href=\"https://redis.io/commands/cluster-info\"\n                        target=\"_\"\n                      >\n                        CLUSTER INFO\n                      </Link>\n                    ) : (\n                      <Link href=\"https://redis.io/commands/info\" target=\"_\">\n                        INFO\n                      </Link>\n                    )}{\" \"}\n                    Command Output\n                  </Typography>\n                  <SyntaxHighlighter language=\"yaml\">\n                    {redisInfoRaw}\n                  </SyntaxHighlighter>\n                </Grid>\n              </>\n            )}\n          </>\n        ) : (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not retrieve redis live data —{\" \"}\n              <strong>See the logs for details</strong>\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nfunction RedisMetricCards(props: { redisInfo: RedisInfo }) {\n  const { redisInfo } = props;\n  return (\n    <>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Server\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard title=\"Version\" content={redisInfo.redis_version} />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Uptime\"\n          content={`${redisInfo.uptime_in_days} days`}\n        />\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Memory\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard title=\"Used Memory\" content={redisInfo.used_memory_human} />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Peak Memory Used\"\n          content={redisInfo.used_memory_peak_human}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Memory Fragmentation Ratio\"\n          content={redisInfo.mem_fragmentation_ratio}\n        />\n      </Grid>\n      <Grid item xs={3} />\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Connections\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Connected Clients\"\n          content={redisInfo.connected_clients}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Connected Replicas\"\n          content={redisInfo.connected_slaves}\n        />\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Persistence\n        </Typography>\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Last Save to Disk\"\n          content={timeAgoUnix(parseInt(redisInfo.rdb_last_save_time))}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <MetricCard\n          title=\"Number of Changes Since Last Dump\"\n          content={redisInfo.rdb_changes_since_last_save}\n        />\n      </Grid>\n      <Grid item xs={6} />\n    </>\n  );\n}\n\ninterface MetricCardProps {\n  title: string;\n  content: string;\n}\n\nfunction MetricCard(props: MetricCardProps) {\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography\n          gutterBottom\n          color=\"textPrimary\"\n          variant=\"h5\"\n          align=\"center\"\n        >\n          {props.content}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"subtitle2\" align=\"center\">\n          {props.title}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default connector(RedisInfoView);\n","import { Dispatch } from \"redux\";\nimport { getMetrics, MetricsResponse } from \"../api\";\nimport { toErrorString, toErrorStringWithHttpStatus } from \"../utils\";\n\n// List of metrics related action types.\nexport const GET_METRICS_BEGIN = \"GET_METRICS_BEGIN\";\nexport const GET_METRICS_SUCCESS = \"GET_METRICS_SUCCESS\";\nexport const GET_METRICS_ERROR = \"GET_METRICS_ERROR\";\n\ninterface GetMetricsBeginAction {\n  type: typeof GET_METRICS_BEGIN;\n}\n\ninterface GetMetricsSuccessAction {\n  type: typeof GET_METRICS_SUCCESS;\n  payload: MetricsResponse;\n}\n\ninterface GetMetricsErrorAction {\n  type: typeof GET_METRICS_ERROR;\n  error: string;\n}\n\n// Union of all metrics related actions.\nexport type MetricsActionTypes =\n  | GetMetricsBeginAction\n  | GetMetricsSuccessAction\n  | GetMetricsErrorAction;\n\nexport function getMetricsAsync(\n  endTime: number,\n  duration: number,\n  queues: string[]\n) {\n  return async (dispatch: Dispatch<MetricsActionTypes>) => {\n    dispatch({ type: GET_METRICS_BEGIN });\n    try {\n      const response = await getMetrics(endTime, duration, queues);\n      dispatch({ type: GET_METRICS_SUCCESS, payload: response });\n    } catch (error) {\n      console.error(`getMetricsAsync: ${toErrorStringWithHttpStatus(error)}`);\n      dispatch({\n        type: GET_METRICS_ERROR,\n        error: toErrorString(error),\n      });\n    }\n  };\n}\n","import { useTheme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Metrics } from \"../api\";\n\ninterface Props {\n  data: Metrics[];\n\n  // both startTime and endTime are in unix time (seconds)\n  startTime: number;\n  endTime: number;\n\n  // (optional): Tick formatter function for YAxis\n  yAxisTickFormatter?: (val: number) => string;\n}\n\n// interface that rechart understands.\ninterface ChartData {\n  timestamp: number;\n  [qname: string]: number;\n}\n\nfunction toChartData(metrics: Metrics[]): ChartData[] {\n  if (metrics.length === 0) {\n    return [];\n  }\n  let byTimestamp: { [key: number]: ChartData } = {};\n  for (let x of metrics) {\n    for (let [ts, val] of x.values) {\n      if (!byTimestamp[ts]) {\n        byTimestamp[ts] = { timestamp: ts };\n      }\n      const qname = x.metric.queue;\n      if (qname) {\n        byTimestamp[ts][qname] = parseFloat(val);\n      }\n    }\n  }\n  return Object.values(byTimestamp);\n}\n\nconst lineColors = [\n  \"#2085ec\",\n  \"#72b4eb\",\n  \"#0a417a\",\n  \"#8464a0\",\n  \"#cea9bc\",\n  \"#323232\",\n];\n\nfunction QueueMetricsChart(props: Props) {\n  const theme = useTheme();\n\n  const data = toChartData(props.data);\n  const keys = props.data.map((x) => x.metric.queue);\n  return (\n    <ResponsiveContainer height={260}>\n      <LineChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          minTickGap={10}\n          dataKey=\"timestamp\"\n          domain={[props.startTime, props.endTime]}\n          tickFormatter={(timestamp: number) =>\n            new Date(timestamp * 1000).toLocaleTimeString()\n          }\n          type=\"number\"\n          scale=\"time\"\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis\n          tickFormatter={props.yAxisTickFormatter}\n          stroke={theme.palette.text.secondary}\n        />\n        <Tooltip\n          labelFormatter={(timestamp: number) => {\n            return new Date(timestamp * 1000).toLocaleTimeString();\n          }}\n        />\n        <Legend />\n        {keys.map((key, idx) => (\n          <Line\n            key={key}\n            type=\"monotone\"\n            dataKey={key}\n            stroke={lineColors[idx % lineColors.length]}\n            dot={false}\n          />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nQueueMetricsChart.defaultProps = {\n  yAxisTickFormatter: (val: number) => val.toString(),\n};\n\nexport default QueueMetricsChart;\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport dayjs from \"dayjs\";\nimport { currentUnixtime, parseDuration } from \"../utils\";\nimport { AppState } from \"../store\";\nimport { isDarkTheme } from \"../theme\";\n\nfunction mapStateToProps(state: AppState) {\n  return { pollInterval: state.settings.pollInterval };\n}\n\nconst connector = connect(mapStateToProps);\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ninterface Props extends ReduxProps {\n  // Specifies the endtime in Unix time seconds.\n  endTimeSec: number;\n  onEndTimeChange: (t: number, isEndTimeFixed: boolean) => void;\n\n  // Specifies the duration in seconds.\n  durationSec: number;\n  onDurationChange: (d: number, isEndTimeFixed: boolean) => void;\n\n  // All available queues.\n  queues: string[];\n  // Selected queues.\n  selectedQueues: string[];\n  addQueue: (qname: string) => void;\n  removeQueue: (qname: string) => void;\n}\n\ninterface State {\n  endTimeOption: EndTimeOption;\n  durationOption: DurationOption;\n  customEndTime: string; // text shown in input field\n  customDuration: string; // text shown in input field\n  customEndTimeError: string;\n  customDurationError: string;\n}\n\ntype EndTimeOption = \"real_time\" | \"freeze_at_now\" | \"custom\";\ntype DurationOption = \"1h\" | \"6h\" | \"1d\" | \"8d\" | \"30d\" | \"custom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  endTimeCaption: {\n    marginRight: theme.spacing(1),\n  },\n  shiftButtons: {\n    marginLeft: theme.spacing(1),\n  },\n  buttonGroupRoot: {\n    height: 29,\n    position: \"relative\",\n    top: 1,\n  },\n  endTimeShiftControls: {\n    padding: theme.spacing(1),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomColor: theme.palette.divider,\n    borderBottomWidth: 1,\n    borderBottomStyle: \"solid\",\n  },\n  leftShiftButtons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  rightShiftButtons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(2),\n  },\n  controlsContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  controlSelectorBox: {\n    display: \"flex\",\n    minWidth: 490,\n    padding: theme.spacing(2),\n  },\n  controlEndTimeSelector: {\n    width: \"50%\",\n  },\n  controlDurationSelector: {\n    width: \"50%\",\n  },\n  radioButtonRoot: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  formControlLabel: {\n    fontSize: 14,\n  },\n  buttonLabel: {\n    textTransform: \"none\",\n    fontSize: 12,\n  },\n  formControlRoot: {\n    width: \"100%\",\n    margin: 0,\n  },\n  formLabel: {\n    fontSize: 14,\n    fontWeight: 500,\n    marginBottom: theme.spacing(1),\n  },\n  customInputField: {\n    marginTop: theme.spacing(1),\n  },\n  filterButton: {\n    marginLeft: theme.spacing(1),\n  },\n  queueFilters: {\n    padding: theme.spacing(2),\n    maxHeight: 400,\n  },\n  checkbox: {\n    padding: 6,\n  },\n}));\n\n// minute, hour, day in seconds\nconst minute = 60;\nconst hour = 60 * minute;\nconst day = 24 * hour;\n\nfunction getInitialState(endTimeSec: number, durationSec: number): State {\n  let endTimeOption: EndTimeOption = \"real_time\";\n  let customEndTime = \"\";\n  let durationOption: DurationOption = \"1h\";\n  let customDuration = \"\";\n\n  const now = currentUnixtime();\n  // Account for 1s difference, may just happen to elapse 1s\n  // between the parent component's render and this component's render.\n  if (now <= endTimeSec && endTimeSec <= now + 1) {\n    endTimeOption = \"real_time\";\n  } else {\n    endTimeOption = \"custom\";\n    customEndTime = new Date(endTimeSec * 1000).toISOString();\n  }\n\n  switch (durationSec) {\n    case 1 * hour:\n      durationOption = \"1h\";\n      break;\n    case 6 * hour:\n      durationOption = \"6h\";\n      break;\n    case 1 * day:\n      durationOption = \"1d\";\n      break;\n    case 8 * day:\n      durationOption = \"8d\";\n      break;\n    case 30 * day:\n      durationOption = \"30d\";\n      break;\n    default:\n      durationOption = \"custom\";\n      customDuration = durationSec + \"s\";\n  }\n\n  return {\n    endTimeOption,\n    customEndTime,\n    customEndTimeError: \"\",\n    durationOption,\n    customDuration,\n    customDurationError: \"\",\n  };\n}\n\nfunction MetricsFetchControls(props: Props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState<State>(\n    getInitialState(props.endTimeSec, props.durationSec)\n  );\n  const [timePopoverAnchorElem, setTimePopoverAnchorElem] =\n    React.useState<HTMLButtonElement | null>(null);\n\n  const [queuePopoverAnchorElem, setQueuePopoverAnchorElem] =\n    React.useState<HTMLButtonElement | null>(null);\n\n  const handleEndTimeOptionChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const selectedOpt = (event.target as HTMLInputElement)\n      .value as EndTimeOption;\n    setState((prevState) => ({\n      ...prevState,\n      endTimeOption: selectedOpt,\n      customEndTime: \"\",\n      customEndTimeError: \"\",\n    }));\n    switch (selectedOpt) {\n      case \"real_time\":\n        props.onEndTimeChange(currentUnixtime(), /*isEndTimeFixed=*/ false);\n        break;\n      case \"freeze_at_now\":\n        props.onEndTimeChange(currentUnixtime(), /*isEndTimeFixed=*/ true);\n        break;\n      case \"custom\":\n      // No-op\n    }\n  };\n\n  const handleDurationOptionChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const selectedOpt = (event.target as HTMLInputElement)\n      .value as DurationOption;\n    setState((prevState) => ({\n      ...prevState,\n      durationOption: selectedOpt,\n      customDuration: \"\",\n      customDurationError: \"\",\n    }));\n    const isEndTimeFixed = state.endTimeOption !== \"real_time\";\n    switch (selectedOpt) {\n      case \"1h\":\n        props.onDurationChange(1 * hour, isEndTimeFixed);\n        break;\n      case \"6h\":\n        props.onDurationChange(6 * hour, isEndTimeFixed);\n        break;\n      case \"1d\":\n        props.onDurationChange(1 * day, isEndTimeFixed);\n        break;\n      case \"8d\":\n        props.onDurationChange(8 * day, isEndTimeFixed);\n        break;\n      case \"30d\":\n        props.onDurationChange(30 * day, isEndTimeFixed);\n        break;\n      case \"custom\":\n      // No-op\n    }\n  };\n\n  const handleCustomDurationChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    event.persist(); // https://reactjs.org/docs/legacy-event-pooling.html\n    setState((prevState) => ({\n      ...prevState,\n      customDuration: event.target.value,\n    }));\n  };\n\n  const handleCustomEndTimeChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    event.persist(); // https://reactjs.org/docs/legacy-event-pooling.html\n    setState((prevState) => ({\n      ...prevState,\n      customEndTime: event.target.value,\n    }));\n  };\n\n  const handleCustomDurationKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (event.key === \"Enter\") {\n      try {\n        const d = parseDuration(state.customDuration);\n        setState((prevState) => ({\n          ...prevState,\n          durationOption: \"custom\",\n          customDurationError: \"\",\n        }));\n        props.onDurationChange(d, state.endTimeOption !== \"real_time\");\n      } catch (error) {\n        setState((prevState) => ({\n          ...prevState,\n          customDurationError: \"Duration invalid\",\n        }));\n      }\n    }\n  };\n\n  const handleCustomEndTimeKeyDown = (\n    event: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (event.key === \"Enter\") {\n      const timeUsecOrNaN = Date.parse(state.customEndTime);\n      if (isNaN(timeUsecOrNaN)) {\n        setState((prevState) => ({\n          ...prevState,\n          customEndTimeError: \"End time invalid\",\n        }));\n        return;\n      }\n      setState((prevState) => ({\n        ...prevState,\n        endTimeOption: \"custom\",\n        customEndTimeError: \"\",\n      }));\n      props.onEndTimeChange(\n        Math.floor(timeUsecOrNaN / 1000),\n        /* isEndTimeFixed= */ true\n      );\n    }\n  };\n\n  const handleOpenTimePopover = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setTimePopoverAnchorElem(event.currentTarget);\n  };\n\n  const handleCloseTimePopover = () => {\n    setTimePopoverAnchorElem(null);\n  };\n\n  const handleOpenQueuePopover = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setQueuePopoverAnchorElem(event.currentTarget);\n  };\n\n  const handleCloseQueuePopover = () => {\n    setQueuePopoverAnchorElem(null);\n  };\n\n  const isTimePopoverOpen = Boolean(timePopoverAnchorElem);\n  const isQueuePopoverOpen = Boolean(queuePopoverAnchorElem);\n\n  React.useEffect(() => {\n    if (state.endTimeOption === \"real_time\") {\n      const id = setInterval(() => {\n        props.onEndTimeChange(currentUnixtime(), /*isEndTimeFixed=*/ false);\n      }, props.pollInterval * 1000);\n      return () => clearInterval(id);\n    }\n  });\n\n  const shiftBy = (deltaSec: number) => {\n    return () => {\n      const now = currentUnixtime();\n      const endTime = props.endTimeSec + deltaSec;\n      if (now <= endTime) {\n        setState((prevState) => ({\n          ...prevState,\n          customEndTime: \"\",\n          endTimeOption: \"real_time\",\n        }));\n        props.onEndTimeChange(now, /*isEndTimeFixed=*/ false);\n        return;\n      }\n      setState((prevState) => ({\n        ...prevState,\n        endTimeOption: \"custom\",\n        customEndTime: new Date(endTime * 1000).toISOString(),\n      }));\n      props.onEndTimeChange(endTime, /*isEndTimeFixed=*/ true);\n    };\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        variant=\"caption\"\n        color=\"textPrimary\"\n        className={classes.endTimeCaption}\n      >\n        {formatTime(props.endTimeSec)}\n      </Typography>\n      <div>\n        <Button\n          aria-describedby={isTimePopoverOpen ? \"time-popover\" : undefined}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleOpenTimePopover}\n          size=\"small\"\n          classes={{\n            label: classes.buttonLabel,\n          }}\n        >\n          {state.endTimeOption === \"real_time\" ? \"Realtime\" : \"Historical\"}:{\" \"}\n          {state.durationOption === \"custom\"\n            ? state.customDuration\n            : state.durationOption}\n        </Button>\n        <Popover\n          id={isTimePopoverOpen ? \"time-popover\" : undefined}\n          open={isTimePopoverOpen}\n          anchorEl={timePopoverAnchorElem}\n          onClose={handleCloseTimePopover}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <div className={classes.endTimeShiftControls}>\n            <div className={classes.leftShiftButtons}>\n              <ShiftButton\n                direction=\"left\"\n                text=\"2h\"\n                onClick={shiftBy(-2 * hour)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"1h\"\n                onClick={shiftBy(-1 * hour)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"30m\"\n                onClick={shiftBy(-30 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"15m\"\n                onClick={shiftBy(-15 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"left\"\n                text=\"5m\"\n                onClick={shiftBy(-5 * minute)}\n                dense={true}\n              />\n            </div>\n            <div className={classes.rightShiftButtons}>\n              <ShiftButton\n                direction=\"right\"\n                text=\"5m\"\n                onClick={shiftBy(5 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"15m\"\n                onClick={shiftBy(15 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"30m\"\n                onClick={shiftBy(30 * minute)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"1h\"\n                onClick={shiftBy(1 * hour)}\n                dense={true}\n              />\n              <ShiftButton\n                direction=\"right\"\n                text=\"2h\"\n                onClick={shiftBy(2 * hour)}\n                dense={true}\n              />\n            </div>\n          </div>\n          <div className={classes.controlSelectorBox}>\n            <div className={classes.controlEndTimeSelector}>\n              <FormControl\n                component=\"fieldset\"\n                margin=\"dense\"\n                classes={{ root: classes.formControlRoot }}\n              >\n                <FormLabel className={classes.formLabel} component=\"legend\">\n                  End Time\n                </FormLabel>\n                <RadioGroup\n                  aria-label=\"end_time\"\n                  name=\"end_time\"\n                  value={state.endTimeOption}\n                  onChange={handleEndTimeOptionChange}\n                >\n                  <RadioInput value=\"real_time\" label=\"Real Time\" />\n                  <RadioInput value=\"freeze_at_now\" label=\"Freeze at now\" />\n                  <RadioInput value=\"custom\" label=\"Custom End Time\" />\n                </RadioGroup>\n                <div className={classes.customInputField}>\n                  <TextField\n                    id=\"custom-endtime\"\n                    label=\"yyyy-mm-dd hh:mm:ssz\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={handleCustomEndTimeChange}\n                    value={state.customEndTime}\n                    onKeyDown={handleCustomEndTimeKeyDown}\n                    error={state.customEndTimeError !== \"\"}\n                    helperText={state.customEndTimeError}\n                  />\n                </div>\n              </FormControl>\n            </div>\n            <div className={classes.controlDurationSelector}>\n              <FormControl\n                component=\"fieldset\"\n                margin=\"dense\"\n                classes={{ root: classes.formControlRoot }}\n              >\n                <FormLabel className={classes.formLabel} component=\"legend\">\n                  Duration\n                </FormLabel>\n                <RadioGroup\n                  aria-label=\"duration\"\n                  name=\"duration\"\n                  value={state.durationOption}\n                  onChange={handleDurationOptionChange}\n                >\n                  <RadioInput value=\"1h\" label=\"1h\" />\n                  <RadioInput value=\"6h\" label=\"6h\" />\n                  <RadioInput value=\"1d\" label=\"1 day\" />\n                  <RadioInput value=\"8d\" label=\"8 days\" />\n                  <RadioInput value=\"30d\" label=\"30 days\" />\n                  <RadioInput value=\"custom\" label=\"Custom Duration\" />\n                </RadioGroup>\n                <div className={classes.customInputField}>\n                  <TextField\n                    id=\"custom-duration\"\n                    label=\"duration\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={handleCustomDurationChange}\n                    value={state.customDuration}\n                    onKeyDown={handleCustomDurationKeyDown}\n                    error={state.customDurationError !== \"\"}\n                    helperText={state.customDurationError}\n                  />\n                </div>\n              </FormControl>\n            </div>\n          </div>\n        </Popover>\n      </div>\n      <div className={classes.shiftButtons}>\n        <ButtonGroup\n          classes={{ root: classes.buttonGroupRoot }}\n          size=\"small\"\n          color=\"primary\"\n          aria-label=\"shift buttons\"\n        >\n          <ShiftButton\n            direction=\"left\"\n            text={\n              state.durationOption === \"custom\" ? \"1h\" : state.durationOption\n            }\n            color=\"primary\"\n            onClick={\n              state.durationOption === \"custom\"\n                ? shiftBy(-1 * hour)\n                : shiftBy(-props.durationSec)\n            }\n          />\n          <ShiftButton\n            direction=\"right\"\n            text={\n              state.durationOption === \"custom\" ? \"1h\" : state.durationOption\n            }\n            color=\"primary\"\n            onClick={\n              state.durationOption === \"custom\"\n                ? shiftBy(1 * hour)\n                : shiftBy(props.durationSec)\n            }\n          />\n        </ButtonGroup>\n      </div>\n      <div className={classes.filterButton}>\n        <IconButton\n          aria-label=\"filter\"\n          size=\"small\"\n          onClick={handleOpenQueuePopover}\n        >\n          <FilterListIcon />\n        </IconButton>\n        <Popover\n          id={isQueuePopoverOpen ? \"queue-popover\" : undefined}\n          open={isQueuePopoverOpen}\n          anchorEl={queuePopoverAnchorElem}\n          onClose={handleCloseQueuePopover}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <FormControl className={classes.queueFilters}>\n            <FormLabel className={classes.formLabel} component=\"legend\">\n              Queues\n            </FormLabel>\n            <FormGroup>\n              {props.queues.map((qname) => (\n                <FormControlLabel\n                  key={qname}\n                  control={\n                    <Checkbox\n                      size=\"small\"\n                      checked={props.selectedQueues.includes(qname)}\n                      onChange={() => {\n                        if (props.selectedQueues.includes(qname)) {\n                          props.removeQueue(qname);\n                        } else {\n                          props.addQueue(qname);\n                        }\n                      }}\n                      name={qname}\n                      className={classes.checkbox}\n                    />\n                  }\n                  label={qname}\n                  classes={{ label: classes.formControlLabel }}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Popover>\n      </div>\n    </div>\n  );\n}\n\n/****************** Helper functions/components *******************/\n\nfunction formatTime(unixtime: number): string {\n  const tz = new Date(unixtime * 1000)\n    .toLocaleTimeString(\"en-us\", { timeZoneName: \"short\" })\n    .split(\" \")[2];\n  return dayjs.unix(unixtime).format(\"ddd, DD MMM YYYY HH:mm:ss \") + tz;\n}\n\ninterface RadioInputProps {\n  value: string;\n  label: string;\n}\n\nfunction RadioInput(props: RadioInputProps) {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      classes={{ label: classes.formControlLabel }}\n      value={props.value}\n      control={\n        <Radio size=\"small\" classes={{ root: classes.radioButtonRoot }} />\n      }\n      label={props.label}\n    />\n  );\n}\n\ninterface ShiftButtonProps extends ButtonProps {\n  text: string;\n  onClick: () => void;\n  direction: \"left\" | \"right\";\n  dense?: boolean;\n}\n\nconst useShiftButtonStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minWidth: 40,\n    fontWeight: (props: ShiftButtonProps) => (props.dense ? 400 : 500),\n  },\n  label: { fontSize: 12, textTransform: \"none\" },\n  iconRoot: {\n    marginRight: (props: ShiftButtonProps) =>\n      props.direction === \"left\" ? (props.dense ? -8 : -4) : 0,\n    marginLeft: (props: ShiftButtonProps) =>\n      props.direction === \"right\" ? (props.dense ? -8 : -4) : 0,\n    color: (props: ShiftButtonProps) =>\n      props.color\n        ? props.color\n        : theme.palette.grey[isDarkTheme(theme) ? 200 : 700],\n  },\n}));\n\nfunction ShiftButton(props: ShiftButtonProps) {\n  const classes = useShiftButtonStyles(props);\n  return (\n    <Button\n      {...props}\n      classes={{\n        root: classes.root,\n        label: classes.label,\n      }}\n      size=\"small\"\n    >\n      {props.direction === \"left\" && (\n        <ArrowLeftIcon classes={{ root: classes.iconRoot }} />\n      )}\n      {props.text}\n      {props.direction === \"right\" && (\n        <ArrowRightIcon classes={{ root: classes.iconRoot }} />\n      )}\n    </Button>\n  );\n}\n\nShiftButton.defaultProps = {\n  dense: false,\n};\n\nexport default connect(mapStateToProps)(MetricsFetchControls);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport prettyBytes from \"pretty-bytes\";\nimport { getMetricsAsync } from \"../actions/metricsActions\";\nimport { listQueuesAsync } from \"../actions/queuesActions\";\nimport { AppState } from \"../store\";\nimport QueueMetricsChart from \"../components/QueueMetricsChart\";\nimport Tooltip from \"../components/Tooltip\";\nimport { currentUnixtime } from \"../utils\";\nimport MetricsFetchControls from \"../components/MetricsFetchControls\";\nimport { useQuery } from \"../hooks\";\nimport { PrometheusMetricsResponse } from \"../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 30,\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  controlsContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    position: \"fixed\",\n    background: theme.palette.background.paper,\n    zIndex: theme.zIndex.appBar,\n    right: 0,\n    top: 64, // app-bar height\n    width: \"100%\",\n    padding: theme.spacing(2),\n  },\n  chartInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  infoIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.grey[500],\n    cursor: \"pointer\",\n  },\n  errorMessage: {\n    marginLeft: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  warningIcon: {\n    color: \"#ff6700\",\n    marginRight: 6,\n  },\n}));\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    loading: state.metrics.loading,\n    error: state.metrics.error,\n    data: state.metrics.data,\n    pollInterval: state.settings.pollInterval,\n    queues: state.queues.data.map((q) => q.name),\n  };\n}\n\nconst connector = connect(mapStateToProps, {\n  getMetricsAsync,\n  listQueuesAsync,\n});\ntype Props = ConnectedProps<typeof connector>;\n\nconst ENDTIME_URL_PARAM_KEY = \"end\";\nconst DURATION_URL_PARAM_KEY = \"duration\";\n\nfunction MetricsView(props: Props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const query = useQuery();\n\n  const endTimeStr = query.get(ENDTIME_URL_PARAM_KEY);\n  const endTime = endTimeStr ? parseFloat(endTimeStr) : currentUnixtime(); // default to now\n\n  const durationStr = query.get(DURATION_URL_PARAM_KEY);\n  const duration = durationStr ? parseFloat(durationStr) : 60 * 60; // default to 1h\n\n  const { pollInterval, getMetricsAsync, listQueuesAsync, data } = props;\n\n  const [endTimeSec, setEndTimeSec] = React.useState(endTime);\n  const [durationSec, setDurationSec] = React.useState(duration);\n  const [selectedQueues, setSelectedQueues] = React.useState<string[]>([]);\n\n  const handleEndTimeChange = (endTime: number, isEndTimeFixed: boolean) => {\n    const urlQuery = isEndTimeFixed\n      ? {\n          [ENDTIME_URL_PARAM_KEY]: endTime,\n          [DURATION_URL_PARAM_KEY]: durationSec,\n        }\n      : {\n          [DURATION_URL_PARAM_KEY]: durationSec,\n        };\n    history.push({\n      ...history.location,\n      search: queryString.stringify(urlQuery),\n    });\n    setEndTimeSec(endTime);\n  };\n\n  const handleDurationChange = (duration: number, isEndTimeFixed: boolean) => {\n    const urlQuery = isEndTimeFixed\n      ? {\n          [ENDTIME_URL_PARAM_KEY]: endTimeSec,\n          [DURATION_URL_PARAM_KEY]: duration,\n        }\n      : {\n          [DURATION_URL_PARAM_KEY]: duration,\n        };\n    history.push({\n      ...history.location,\n      search: queryString.stringify(urlQuery),\n    });\n    setDurationSec(duration);\n  };\n\n  const handleAddQueue = (qname: string) => {\n    if (selectedQueues.includes(qname)) {\n      return;\n    }\n    setSelectedQueues(selectedQueues.concat(qname));\n  };\n\n  const handleRemoveQueue = (qname: string) => {\n    if (selectedQueues.length === 1) {\n      return; // ensure that selected queues doesn't go down to zero once user selected\n    }\n    if (selectedQueues.length === 0) {\n      // when user first select filter (remove once of the queues),\n      // we need to lazily initialize the selectedQueues with the rest (all queues but the selected one).\n      setSelectedQueues(props.queues.filter((q) => q !== qname));\n      return;\n    }\n    setSelectedQueues(selectedQueues.filter((q) => q !== qname));\n  };\n\n  React.useEffect(() => {\n    listQueuesAsync();\n  }, [listQueuesAsync]);\n\n  React.useEffect(() => {\n    getMetricsAsync(endTimeSec, durationSec, selectedQueues);\n  }, [pollInterval, getMetricsAsync, durationSec, endTimeSec, selectedQueues]);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <div className={classes.controlsContainer}>\n        <MetricsFetchControls\n          endTimeSec={endTimeSec}\n          onEndTimeChange={handleEndTimeChange}\n          durationSec={durationSec}\n          onDurationChange={handleDurationChange}\n          queues={props.queues}\n          selectedQueues={\n            // If none are selected (e.g. initial state), no filters should apply.\n            selectedQueues.length === 0 ? props.queues : selectedQueues\n          }\n          addQueue={handleAddQueue}\n          removeQueue={handleRemoveQueue}\n        />\n      </div>\n      <Grid container spacing={3}>\n        {data?.tasks_processed_per_second && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Tasks Processed\"\n              description=\"Number of tasks processed (both succeeded and failed) per second.\"\n              metrics={data.tasks_processed_per_second}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.tasks_failed_per_second && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Tasks Failed\"\n              description=\"Number of tasks failed per second.\"\n              metrics={data.tasks_failed_per_second}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.error_rate && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Error Rate\"\n              description=\"Rate of task failures\"\n              metrics={data.error_rate}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.queue_size && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Queue Size\"\n              description=\"Total number of tasks in a given queue.\"\n              metrics={data.queue_size}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.queue_latency_seconds && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Queue Latency\"\n              description=\"Latency of queue, measured by the oldest pending task in the queue.\"\n              metrics={data.queue_latency_seconds}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n              yAxisTickFormatter={(val: number) => val + \"s\"}\n            />\n          </Grid>\n        )}\n        {data?.queue_size && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Queue Memory Usage (approx)\"\n              description=\"Memory usage by queue. Approximate value by sampling a few tasks in a queue.\"\n              metrics={data.queue_memory_usage_approx_bytes}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n              yAxisTickFormatter={(val: number) => {\n                try {\n                  return prettyBytes(val);\n                } catch (error) {\n                  return val + \"B\";\n                }\n              }}\n            />\n          </Grid>\n        )}\n        {data?.pending_tasks_by_queue && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Pending Tasks\"\n              description=\"Number of pending tasks in a given queue.\"\n              metrics={data.pending_tasks_by_queue}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.retry_tasks_by_queue && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Retry Tasks\"\n              description=\"Number of retry tasks in a given queue.\"\n              metrics={data.retry_tasks_by_queue}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n        {data?.archived_tasks_by_queue && (\n          <Grid item xs={12}>\n            <ChartRow\n              title=\"Archived Tasks\"\n              description=\"Number of archived tasks in a given queue.\"\n              metrics={data.archived_tasks_by_queue}\n              endTime={endTimeSec}\n              startTime={endTimeSec - durationSec}\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default connector(MetricsView);\n\n/******** Helper components ********/\n\ninterface ChartRowProps {\n  title: string;\n  description: string;\n  metrics: PrometheusMetricsResponse;\n  endTime: number;\n  startTime: number;\n  yAxisTickFormatter?: (val: number) => string;\n}\n\nfunction ChartRow(props: ChartRowProps) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.chartInfo}>\n        <Typography color=\"textPrimary\">{props.title}</Typography>\n        <Tooltip title={<div>{props.description}</div>}>\n          <InfoIcon fontSize=\"small\" className={classes.infoIcon} />\n        </Tooltip>\n        {props.metrics.status === \"error\" && (\n          <div className={classes.errorMessage}>\n            <WarningIcon fontSize=\"small\" className={classes.warningIcon} />\n            <Typography color=\"textSecondary\">\n              Failed to get metrics data: {props.metrics.error}\n            </Typography>\n          </div>\n        )}\n      </div>\n      <QueueMetricsChart\n        data={\n          props.metrics.status === \"error\"\n            ? []\n            : props.metrics.data?.result || []\n        }\n        endTime={props.endTime}\n        startTime={props.startTime}\n        yAxisTickFormatter={props.yAxisTickFormatter}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  headingText: {\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default function PageNotFoundView() {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            className={classes.headingText}\n          >\n            Oops!\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"center\">\n            404 - Page Not Found\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#2f80ed\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m206.548 169.585c-.557-23.718 13.058-45.343 34.682-55.094 29.6-13.347 64.54-.124 77.887 29.477l15.238 12.411.787-19.637c-17.331-38.4361-62.701-55.6064-101.137-38.2754-28.077 12.6594-45.753 40.7374-45.031 71.5204l.722 32.337 7.225 16.025 10.183-23.874z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m107.46 139.032c2.407 5.339 5.56 10.213 9.32 14.511-5.737 1.125-11.386 2.914-16.8471 5.377-38.4362 17.331-55.6065 62.701-38.2754 101.137l15.2377 12.412.7867-19.637c-13.3469-29.601-.1238-64.541 29.4761-77.888 13.93-6.281 29.44-6.923 43.805-1.844l-4.244 11.213 42.371-6.199-27.65-32.7-4.255 11.246c-2.446-.879-4.918-1.63-7.408-2.253-11.712-3.279-21.294-11.514-26.294-22.6-9.274-20.57-.085-44.85 20.484-54.1248 20.57-9.2749 44.85-.0862 54.125 20.4834l16.024-7.2255c-13.259-29.4054-47.969-42.5414-77.374-29.2824s-42.5414 47.9693-29.282 77.3743z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m162.795 298.333c28.076-12.66 45.753-40.737 45.03-71.521l-.721-32.337-17.408 7.85.555 24.89c.557 23.717-13.057 45.343-34.682 55.093-29.6 13.347-64.5399.124-77.8868-29.476l-16.0244 7.225c17.331 38.437 62.7012 55.607 101.1372 38.276z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m289.641 221.854c-13.93 6.281-29.439 6.924-43.805 1.845l4.244-11.213-42.371 6.199 27.65 32.699 4.256-11.245c2.446.879 4.917 1.63 7.407 2.253 11.713 3.278 21.295 11.513 26.294 22.6 9.274 20.57.086 44.85-20.484 54.125-20.569 9.275-44.849.086-54.124-20.484l-16.025 7.226c13.259 29.405 47.969 42.541 77.375 29.282 29.405-13.259 42.541-47.969 29.282-77.374-2.407-5.339-5.561-10.213-9.321-14.511 5.738-1.125 11.386-2.915 16.847-5.377 38.437-17.331 55.607-62.701 38.276-101.137l-16.024 7.225c13.346 29.601.123 64.541-29.477 77.887z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m517.32 233.008h-80.896l-20.992 52.992h-13.568l67.584-168.96h15.104l67.584 168.96h-13.568zm-4.608-11.776-29.44-73.728-6.144-17.92h-.256l-6.144 17.408-29.44 74.24zm108.05 67.328c-12.971 0-24.235-2.56-33.792-7.68s-16.128-12.544-19.712-22.272l10.496-6.912c2.56 8.533 7.765 14.933 15.616 19.2s17.493 6.4 28.928 6.4c11.605 0 20.651-2.219 27.136-6.656 6.656-4.437 9.984-10.325 9.984-17.664 0-6.315-2.816-11.349-8.448-15.104s-15.531-6.912-29.696-9.472c-17.92-3.243-30.549-7.595-37.888-13.056s-11.008-13.227-11.008-23.296c0-6.656 2.048-12.8 6.144-18.432s9.899-10.069 17.408-13.312 16.043-4.864 25.6-4.864c13.483 0 24.235 2.56 32.256 7.68 8.192 5.12 13.824 12.971 16.896 23.552l-11.008 6.4c-4.779-17.579-17.493-26.368-38.144-26.368-6.827 0-13.056 1.109-18.688 3.328-5.461 2.219-9.813 5.205-13.056 8.96-3.072 3.584-4.608 7.509-4.608 11.776 0 6.997 2.901 12.459 8.704 16.384s16.043 7.168 30.72 9.728c17.408 2.901 29.696 7.083 36.864 12.544s10.752 13.141 10.752 23.04c0 10.923-4.693 19.712-14.08 26.368-9.216 6.485-21.675 9.728-37.376 9.728zm122.732 20.992c-4.779 11.605-10.069 19.712-15.872 24.32-5.803 4.779-13.141 7.168-22.016 7.168-10.581 0-18.688-3.157-24.32-9.472l4.864-11.008c4.096 6.144 10.581 9.216 19.456 9.216 5.973 0 11.008-1.707 15.104-5.12 4.267-3.243 8.192-9.301 11.776-18.176l8.192-20.48-13.312-31.744-40.704-96.256h14.592l39.168 97.024 6.4 17.152 6.912-18.432 37.632-95.744h13.824zm149.444-154.112c14.677 0 26.453 4.096 35.328 12.288 9.045 8.192 13.568 19.968 13.568 35.328v82.944h-12.8v-78.848c0-13.653-3.328-23.808-9.984-30.464s-15.787-9.984-27.392-9.984c-8.192 0-15.787 1.877-22.784 5.632s-12.629 9.216-16.896 16.384c-4.096 7.168-6.144 15.531-6.144 25.088v72.192h-12.8v-128h11.52l.512 25.856c4.096-9.216 10.325-16.213 18.688-20.992 8.533-4.949 18.261-7.424 29.184-7.424zm203.692 2.56v181.76h-12.8v-80.896c-3.93 9.216-9.99 16.469-18.18 21.76s-17.83 7.936-28.93 7.936c-18.09 0-32.42-5.888-43.006-17.664-10.411-11.776-15.616-28.075-15.616-48.896s5.205-37.12 15.616-48.896c10.586-11.776 24.916-17.664 43.006-17.664 11.44 0 21.34 2.816 29.7 8.448 8.36 5.461 14.33 13.056 17.92 22.784l.77-28.672zm-58.37 119.296c13.31 0 23.98-4.437 32-13.312 8.19-9.045 12.71-21.248 13.57-36.608v-10.752c-.69-15.36-5.12-27.477-13.32-36.352-8.19-9.045-18.94-13.568-32.25-13.568-14.85 0-26.46 4.949-34.82 14.848-8.361 9.728-12.542 23.211-12.542 40.448s4.181 30.805 12.542 40.704c8.36 9.728 19.97 14.592 34.82 14.592zm259.93-122.368c14.5 0 26.11 4.096 34.81 12.288 8.71 8.192 13.06 19.712 13.06 34.56v83.712h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464s-17.67-10.752-30.47-10.752c-9.21 0-17.66 2.219-25.34 6.656-7.51 4.267-13.48 10.155-17.92 17.664-4.27 7.339-6.4 15.36-6.4 24.064v76.288h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464-7.51-7.339-17.67-11.008-30.47-11.008-9.04 0-17.4 2.219-25.08 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.531-6.66 24.576v75.52h-7.17v-128h6.66l.25 30.464c3.59-10.069 9.99-18.091 19.2-24.064 9.22-5.973 19.8-8.96 31.75-8.96 12.29 0 22.53 2.987 30.72 8.96 8.36 5.973 13.65 14.507 15.87 25.6 3.07-10.411 9.39-18.859 18.94-25.344 9.56-6.485 20.57-9.728 33.03-9.728zm142.29.512c18.61 0 33.2 5.888 43.78 17.664 10.75 11.776 16.13 28.075 16.13 48.896s-5.38 37.12-16.13 48.896c-10.58 11.776-25.17 17.664-43.78 17.664-18.77 0-33.53-5.888-44.28-17.664-10.76-11.947-16.13-28.245-16.13-48.896s5.37-36.864 16.13-48.64c10.75-11.947 25.51-17.92 44.28-17.92zm0 6.144c-16.55 0-29.61 5.376-39.16 16.128-9.39 10.752-14.08 25.515-14.08 44.288s4.69 33.536 14.08 44.288c9.55 10.752 22.61 16.128 39.16 16.128 16.39 0 29.27-5.376 38.66-16.128s14.08-25.515 14.08-44.288-4.69-33.536-14.08-44.288-22.27-16.128-38.66-16.128zm153.9-6.144c14.85 0 26.54 4.096 35.08 12.288 8.7 8.192 13.05 19.712 13.05 34.56v83.712h-7.17v-81.92c0-13.653-3.75-24.149-11.26-31.488s-17.75-11.008-30.72-11.008c-9.22 0-17.66 2.219-25.34 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.616-6.66 24.832v75.264h-7.17v-128h6.66v30.72c3.58-10.24 9.98-18.347 19.2-24.32 9.21-5.973 19.97-8.96 32.25-8.96z\",\n  fill: \"#828282\"\n});\n\nfunction SvgLogoColor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    height: 397,\n    viewBox: \"0 0 1663 397\",\n    width: 1663,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoColor);\nexport default __webpack_public_path__ + \"static/media/logo-color.c2b0c1f3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#f2f2f2\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m206.548 169.585c-.556-23.718 13.058-45.343 34.682-55.094 29.6-13.347 64.54-.124 77.887 29.477l15.238 12.411.787-19.637c-17.331-38.4361-62.701-55.6064-101.137-38.2754-28.077 12.6594-45.753 40.7374-45.031 71.5204l.722 32.337 7.225 16.025 10.183-23.874z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m107.46 139.032c2.407 5.339 5.56 10.213 9.321 14.511-5.738 1.125-11.387 2.914-16.8479 5.377-38.4363 17.331-55.6066 62.701-38.2755 101.137l15.2377 12.412.7867-19.637c-13.3469-29.601-.1238-64.541 29.477-77.888 13.929-6.281 29.439-6.923 43.804-1.844l-4.244 11.213 42.371-6.199-27.649-32.7-4.256 11.246c-2.446-.879-4.917-1.63-7.407-2.253-11.713-3.279-21.295-11.514-26.294-22.6-9.275-20.57-.086-44.85 20.484-54.1248 20.569-9.2749 44.849-.0862 54.124 20.4834l16.024-7.2255c-13.259-29.4054-47.969-42.5414-77.374-29.2824s-42.5413 47.9693-29.282 77.3743z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m162.795 298.333c28.076-12.66 45.753-40.737 45.03-71.521l-.721-32.337-17.408 7.85.555 24.89c.557 23.717-13.057 45.343-34.682 55.093-29.6 13.347-64.5399.124-77.8868-29.476l-16.0244 7.225c17.331 38.437 62.7012 55.607 101.1372 38.276z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m289.641 221.854c-13.929 6.281-29.439 6.924-43.804 1.845l4.243-11.213-42.371 6.199 27.65 32.699 4.256-11.245c2.446.879 4.917 1.63 7.407 2.253 11.713 3.278 21.295 11.513 26.294 22.6 9.274 20.57.086 44.85-20.484 54.125-20.569 9.275-44.849.086-54.124-20.484l-16.025 7.226c13.259 29.405 47.969 42.541 77.375 29.282 29.405-13.259 42.541-47.969 29.282-77.374-2.407-5.339-5.561-10.213-9.321-14.511 5.738-1.125 11.386-2.915 16.848-5.377 38.436-17.331 55.606-62.701 38.275-101.137l-16.024 7.225c13.346 29.601.123 64.541-29.477 77.887z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m517.32 233.008h-80.896l-20.992 52.992h-13.568l67.584-168.96h15.104l67.584 168.96h-13.568zm-4.608-11.776-29.44-73.728-6.144-17.92h-.256l-6.144 17.408-29.44 74.24zm108.05 67.328c-12.971 0-24.235-2.56-33.792-7.68s-16.128-12.544-19.712-22.272l10.496-6.912c2.56 8.533 7.765 14.933 15.616 19.2s17.493 6.4 28.928 6.4c11.605 0 20.651-2.219 27.136-6.656 6.656-4.437 9.984-10.325 9.984-17.664 0-6.315-2.816-11.349-8.448-15.104s-15.531-6.912-29.696-9.472c-17.92-3.243-30.549-7.595-37.888-13.056s-11.008-13.227-11.008-23.296c0-6.656 2.048-12.8 6.144-18.432s9.899-10.069 17.408-13.312 16.043-4.864 25.6-4.864c13.483 0 24.235 2.56 32.256 7.68 8.192 5.12 13.824 12.971 16.896 23.552l-11.008 6.4c-4.779-17.579-17.493-26.368-38.144-26.368-6.827 0-13.056 1.109-18.688 3.328-5.461 2.219-9.813 5.205-13.056 8.96-3.072 3.584-4.608 7.509-4.608 11.776 0 6.997 2.901 12.459 8.704 16.384s16.043 7.168 30.72 9.728c17.408 2.901 29.696 7.083 36.864 12.544s10.752 13.141 10.752 23.04c0 10.923-4.693 19.712-14.08 26.368-9.216 6.485-21.675 9.728-37.376 9.728zm122.732 20.992c-4.779 11.605-10.069 19.712-15.872 24.32-5.803 4.779-13.141 7.168-22.016 7.168-10.581 0-18.688-3.157-24.32-9.472l4.864-11.008c4.096 6.144 10.581 9.216 19.456 9.216 5.973 0 11.008-1.707 15.104-5.12 4.267-3.243 8.192-9.301 11.776-18.176l8.192-20.48-13.312-31.744-40.704-96.256h14.592l39.168 97.024 6.4 17.152 6.912-18.432 37.632-95.744h13.824zm149.444-154.112c14.677 0 26.453 4.096 35.328 12.288 9.045 8.192 13.568 19.968 13.568 35.328v82.944h-12.8v-78.848c0-13.653-3.328-23.808-9.984-30.464s-15.787-9.984-27.392-9.984c-8.192 0-15.787 1.877-22.784 5.632s-12.629 9.216-16.896 16.384c-4.096 7.168-6.144 15.531-6.144 25.088v72.192h-12.8v-128h11.52l.512 25.856c4.096-9.216 10.325-16.213 18.688-20.992 8.533-4.949 18.261-7.424 29.184-7.424zm203.692 2.56v181.76h-12.8v-80.896c-3.93 9.216-9.99 16.469-18.18 21.76s-17.83 7.936-28.93 7.936c-18.09 0-32.42-5.888-43.006-17.664-10.411-11.776-15.616-28.075-15.616-48.896s5.205-37.12 15.616-48.896c10.586-11.776 24.916-17.664 43.006-17.664 11.44 0 21.34 2.816 29.7 8.448 8.36 5.461 14.33 13.056 17.92 22.784l.77-28.672zm-58.37 119.296c13.31 0 23.98-4.437 32-13.312 8.19-9.045 12.71-21.248 13.57-36.608v-10.752c-.69-15.36-5.12-27.477-13.32-36.352-8.19-9.045-18.94-13.568-32.25-13.568-14.85 0-26.46 4.949-34.82 14.848-8.361 9.728-12.542 23.211-12.542 40.448s4.181 30.805 12.542 40.704c8.36 9.728 19.97 14.592 34.82 14.592zm259.93-122.368c14.5 0 26.11 4.096 34.81 12.288 8.71 8.192 13.06 19.712 13.06 34.56v83.712h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464s-17.67-10.752-30.47-10.752c-9.21 0-17.66 2.219-25.34 6.656-7.51 4.267-13.48 10.155-17.92 17.664-4.27 7.339-6.4 15.36-6.4 24.064v76.288h-7.17v-82.944c0-13.141-3.75-23.296-11.26-30.464-7.51-7.339-17.67-11.008-30.47-11.008-9.04 0-17.4 2.219-25.08 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.531-6.66 24.576v75.52h-7.17v-128h6.66l.25 30.464c3.59-10.069 9.99-18.091 19.2-24.064 9.22-5.973 19.8-8.96 31.75-8.96 12.29 0 22.53 2.987 30.72 8.96 8.36 5.973 13.65 14.507 15.87 25.6 3.07-10.411 9.39-18.859 18.94-25.344 9.56-6.485 20.57-9.728 33.03-9.728zm142.29.512c18.61 0 33.2 5.888 43.78 17.664 10.75 11.776 16.13 28.075 16.13 48.896s-5.38 37.12-16.13 48.896c-10.58 11.776-25.17 17.664-43.78 17.664-18.77 0-33.53-5.888-44.28-17.664-10.76-11.947-16.13-28.245-16.13-48.896s5.37-36.864 16.13-48.64c10.75-11.947 25.51-17.92 44.28-17.92zm0 6.144c-16.55 0-29.61 5.376-39.16 16.128-9.39 10.752-14.08 25.515-14.08 44.288s4.69 33.536 14.08 44.288c9.55 10.752 22.61 16.128 39.16 16.128 16.39 0 29.27-5.376 38.66-16.128s14.08-25.515 14.08-44.288-4.69-33.536-14.08-44.288-22.27-16.128-38.66-16.128zm153.9-6.144c14.85 0 26.54 4.096 35.08 12.288 8.7 8.192 13.05 19.712 13.05 34.56v83.712h-7.17v-81.92c0-13.653-3.75-24.149-11.26-31.488s-17.75-11.008-30.72-11.008c-9.22 0-17.66 2.219-25.34 6.656-7.51 4.267-13.49 10.155-17.92 17.664-4.44 7.339-6.66 15.616-6.66 24.832v75.264h-7.17v-128h6.66v30.72c3.58-10.24 9.98-18.347 19.2-24.32 9.21-5.973 19.97-8.96 32.25-8.96z\"\n}));\n\nfunction SvgLogoWhite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    height: 397,\n    viewBox: \"0 0 1663 397\",\n    width: 1663,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoWhite);\nexport default __webpack_public_path__ + \"static/media/logo-white.3fa2ac55.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles, Theme, ThemeProvider } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { AppState } from \"./store\";\nimport { paths as getPaths } from \"./paths\";\nimport { isDarkTheme, useTheme } from \"./theme\";\nimport { closeSnackbar } from \"./actions/snackbarActions\";\nimport { toggleDrawer } from \"./actions/settingsActions\";\nimport ListItemLink from \"./components/ListItemLink\";\nimport SchedulersView from \"./views/SchedulersView\";\nimport DashboardView from \"./views/DashboardView\";\nimport TasksView from \"./views/TasksView\";\nimport TaskDetailsView from \"./views/TaskDetailsView\";\nimport SettingsView from \"./views/SettingsView\";\nimport ServersView from \"./views/ServersView\";\nimport RedisInfoView from \"./views/RedisInfoView\";\nimport MetricsView from \"./views/MetricsView\";\nimport PageNotFoundView from \"./views/PageNotFoundView\";\nimport { ReactComponent as Logo } from \"./images/logo-color.svg\";\nimport { ReactComponent as LogoDarkTheme } from \"./images/logo-white.svg\";\n\nconst drawerWidth = 220;\n\n// FIXME: For some reason, the following code does not work:\n//     makeStyles(theme => ({ /* use theme here */}));\n// Using closure to work around this problem.\nconst useStyles = (theme: Theme) =>\n  makeStyles({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      backgroundColor: theme.palette.background.paper,\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(1),\n      color: isDarkTheme(theme)\n        ? theme.palette.grey[100]\n        : theme.palette.grey[700],\n    },\n    menuButtonHidden: {\n      display: \"none\",\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      border: \"none\",\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    },\n    snackbar: {\n      background: theme.palette.grey[\"A400\"],\n      color: \"#ffffff\",\n    },\n    snackbarCloseIcon: {\n      color: theme.palette.grey[400],\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContainer: {\n      display: \"flex\",\n      width: \"100vw\",\n    },\n    content: {\n      flex: 1,\n      height: \"100vh\",\n      overflow: \"hidden\",\n      background: theme.palette.background.paper,\n    },\n    contentWrapper: {\n      height: \"100%\",\n      display: \"flex\",\n      paddingTop: \"64px\", // app-bar height\n      overflow: \"scroll\",\n    },\n    sidebarContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      height: \"100%\",\n      flexDirection: \"column\",\n    },\n    listItem: {\n      borderTopRightRadius: \"24px\",\n      borderBottomRightRadius: \"24px\",\n    },\n  });\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    snackbar: state.snackbar,\n    themePreference: state.settings.themePreference,\n    isDrawerOpen: state.settings.isDrawerOpen,\n  };\n}\n\nconst mapDispatchToProps = {\n  closeSnackbar,\n  toggleDrawer,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nfunction SlideUpTransition(props: TransitionProps) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction App(props: ConnectedProps<typeof connector>) {\n  const theme = useTheme(props.themePreference);\n  const classes = useStyles(theme)();\n  const paths = getPaths();\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className={classes.root}>\n          <AppBar\n            position=\"absolute\"\n            className={classes.appBar}\n            variant=\"outlined\"\n          >\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={props.toggleDrawer}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              {isDarkTheme(theme) ? (\n                <LogoDarkTheme width={200} height={48} />\n              ) : (\n                <Logo width={200} height={48} />\n              )}\n            </Toolbar>\n          </AppBar>\n          <div className={classes.mainContainer}>\n            <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !props.isDrawerOpen && classes.drawerPaperClose\n                ),\n              }}\n              open={props.isDrawerOpen}\n            >\n              <Snackbar\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n                open={props.snackbar.isOpen}\n                autoHideDuration={6000}\n                onClose={props.closeSnackbar}\n                TransitionComponent={SlideUpTransition}\n              >\n                <SnackbarContent\n                  message={props.snackbar.message}\n                  className={classes.snackbar}\n                  action={\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      onClick={props.closeSnackbar}\n                    >\n                      <CloseIcon\n                        className={classes.snackbarCloseIcon}\n                        fontSize=\"small\"\n                      />\n                    </IconButton>\n                  }\n                />\n              </Snackbar>\n              <div className={classes.appBarSpacer} />\n              <div className={classes.sidebarContainer}>\n                <List>\n                  <div>\n                    <ListItemLink\n                      to={paths.HOME}\n                      primary=\"Queues\"\n                      icon={<BarChartIcon />}\n                    />\n                    <ListItemLink\n                      to={paths.SERVERS}\n                      primary=\"Servers\"\n                      icon={<DoubleArrowIcon />}\n                    />\n                    <ListItemLink\n                      to={paths.SCHEDULERS}\n                      primary=\"Schedulers\"\n                      icon={<ScheduleIcon />}\n                    />\n                    <ListItemLink\n                      to={paths.REDIS}\n                      primary=\"Redis\"\n                      icon={<LayersIcon />}\n                    />\n                    {window.PROMETHEUS_SERVER_ADDRESS && (\n                      <ListItemLink\n                        to={paths.QUEUE_METRICS}\n                        primary=\"Metrics\"\n                        icon={<TimelineIcon />}\n                      />\n                    )}\n                  </div>\n                </List>\n                <List>\n                  <ListItemLink\n                    to={paths.SETTINGS}\n                    primary=\"Settings\"\n                    icon={<SettingsIcon />}\n                  />\n                  <ListItem\n                    button\n                    component=\"a\"\n                    className={classes.listItem}\n                    href=\"https://github.com/hibiken/asynqmon/issues\"\n                    target=\"_blank\"\n                  >\n                    <ListItemIcon>\n                      <FeedbackIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Send Feedback\" />\n                  </ListItem>\n                </List>\n              </div>\n            </Drawer>\n            <main className={classes.content}>\n              <div className={classes.contentWrapper}>\n                <Switch>\n                  <Route exact path={paths.TASK_DETAILS}>\n                    <TaskDetailsView />\n                  </Route>\n                  <Route exact path={paths.QUEUE_DETAILS}>\n                    <TasksView />\n                  </Route>\n                  <Route exact path={paths.SCHEDULERS}>\n                    <SchedulersView />\n                  </Route>\n                  <Route exact path={paths.SERVERS}>\n                    <ServersView />\n                  </Route>\n                  <Route exact path={paths.REDIS}>\n                    <RedisInfoView />\n                  </Route>\n                  <Route exact path={paths.SETTINGS}>\n                    <SettingsView />\n                  </Route>\n                  <Route exact path={paths.HOME}>\n                    <DashboardView />\n                  </Route>\n                  <Route exact path={paths.QUEUE_METRICS}>\n                    <MetricsView />\n                  </Route>\n                  <Route path=\"*\">\n                    <PageNotFoundView />\n                  </Route>\n                </Switch>\n              </div>\n            </main>\n          </div>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default connector(App);\n","import {\n  GroupsActionTypes,\n  LIST_GROUPS_SUCCESS,\n} from \"../actions/groupsActions\";\nimport {\n  DELETE_QUEUE_BEGIN,\n  DELETE_QUEUE_ERROR,\n  DELETE_QUEUE_SUCCESS,\n  LIST_QUEUES_BEGIN,\n  LIST_QUEUES_ERROR,\n  LIST_QUEUES_SUCCESS,\n  PAUSE_QUEUE_BEGIN,\n  PAUSE_QUEUE_ERROR,\n  PAUSE_QUEUE_SUCCESS,\n  QueuesActionTypes,\n  RESUME_QUEUE_BEGIN,\n  RESUME_QUEUE_ERROR,\n  RESUME_QUEUE_SUCCESS,\n} from \"../actions/queuesActions\";\nimport {\n  ARCHIVE_AGGREGATING_TASK_SUCCESS,\n  ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS,\n  ARCHIVE_ALL_PENDING_TASKS_SUCCESS,\n  ARCHIVE_ALL_RETRY_TASKS_SUCCESS,\n  ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS,\n  ARCHIVE_PENDING_TASK_SUCCESS,\n  ARCHIVE_RETRY_TASK_SUCCESS,\n  ARCHIVE_SCHEDULED_TASK_SUCCESS,\n  BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_DELETE_AGGREGATING_TASKS_SUCCESS,\n  BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n  BATCH_DELETE_PENDING_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_SUCCESS,\n  BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_RUN_AGGREGATING_TASKS_SUCCESS,\n  BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n  BATCH_RUN_RETRY_TASKS_SUCCESS,\n  BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n  DELETE_AGGREGATING_TASK_SUCCESS,\n  DELETE_ALL_AGGREGATING_TASKS_SUCCESS,\n  DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n  DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n  DELETE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_ALL_RETRY_TASKS_SUCCESS,\n  DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n  DELETE_ARCHIVED_TASK_SUCCESS,\n  DELETE_COMPLETED_TASK_SUCCESS,\n  DELETE_PENDING_TASK_SUCCESS,\n  DELETE_RETRY_TASK_SUCCESS,\n  DELETE_SCHEDULED_TASK_SUCCESS,\n  FILTER_TASKS_PROGRESS,\n  LIST_ACTIVE_TASKS_SUCCESS,\n  LIST_AGGREGATING_TASKS_SUCCESS,\n  LIST_ARCHIVED_TASKS_SUCCESS,\n  LIST_PENDING_TASKS_SUCCESS,\n  LIST_RETRY_TASKS_SUCCESS,\n  LIST_SCHEDULED_TASKS_SUCCESS,\n  RUN_AGGREGATING_TASK_SUCCESS,\n  RUN_ALL_AGGREGATING_TASKS_SUCCESS,\n  RUN_ALL_ARCHIVED_TASKS_SUCCESS,\n  RUN_ALL_RETRY_TASKS_SUCCESS,\n  RUN_ALL_SCHEDULED_TASKS_SUCCESS,\n  RUN_ARCHIVED_TASK_SUCCESS,\n  RUN_RETRY_TASK_SUCCESS,\n  RUN_SCHEDULED_TASK_SUCCESS,\n  TasksActionTypes,\n} from \"../actions/tasksActions\";\nimport { Queue } from \"../api\";\n\ninterface QueuesState {\n  loading: boolean;\n  data: QueueInfo[];\n  error: string;\n}\n\nexport interface QueueInfo {\n  name: string; // name of the queue.\n  currentStats: Queue;\n  requestPending: boolean; // indicates pause/resume/delete action is pending on this queue\n}\n\nconst initialState: QueuesState = { data: [], loading: false, error: \"\" };\n\nfunction queuesReducer(\n  state = initialState,\n  action: QueuesActionTypes | TasksActionTypes | GroupsActionTypes\n): QueuesState {\n  switch (action.type) {\n    case LIST_QUEUES_BEGIN:\n      return { ...state, loading: true };\n\n    case LIST_QUEUES_SUCCESS:\n      const { queues } = action.payload;\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n        data: queues.map((q: Queue) => ({\n          name: q.queue,\n          currentStats: q,\n          requestPending: false,\n        })),\n      };\n\n    case LIST_QUEUES_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case DELETE_QUEUE_BEGIN:\n    case PAUSE_QUEUE_BEGIN:\n    case RESUME_QUEUE_BEGIN: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return { ...queueInfo, requestPending: true };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_QUEUE_SUCCESS: {\n      const newData = state.data.filter(\n        (queueInfo) => queueInfo.name !== action.queue\n      );\n      return { ...state, data: newData };\n    }\n\n    case PAUSE_QUEUE_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          requestPending: false,\n          currentStats: { ...queueInfo.currentStats, paused: true },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RESUME_QUEUE_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          requestPending: false,\n          currentStats: { ...queueInfo.currentStats, paused: false },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_QUEUE_ERROR:\n    case PAUSE_QUEUE_ERROR:\n    case RESUME_QUEUE_ERROR: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          requestPending: false,\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case LIST_ACTIVE_TASKS_SUCCESS:\n    case LIST_PENDING_TASKS_SUCCESS:\n    case LIST_AGGREGATING_TASKS_SUCCESS:\n    case LIST_SCHEDULED_TASKS_SUCCESS:\n    case LIST_RETRY_TASKS_SUCCESS:\n    case LIST_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data\n        .filter((queueInfo) => queueInfo.name !== action.queue)\n        .concat({\n          name: action.queue,\n          currentStats: action.payload.stats,\n          requestPending: false,\n        });\n      return { ...state, data: newData };\n    }\n\n    case FILTER_TASKS_PROGRESS: {\n      const newData = state.data\n        .filter((queueInfo) => queueInfo.name !== action.newStats.queue)\n        .concat({\n          name: action.newStats.queue,\n          currentStats: action.newStats,\n          requestPending: false,\n        });\n      return { ...state, data: newData };\n    }\n\n    case RUN_AGGREGATING_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending: queueInfo.currentStats.pending + 1,\n            aggregating: queueInfo.currentStats.aggregating - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_SCHEDULED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending: queueInfo.currentStats.pending + 1,\n            scheduled: queueInfo.currentStats.scheduled - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_RETRY_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending: queueInfo.currentStats.pending + 1,\n            retry: queueInfo.currentStats.retry - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ARCHIVED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending: queueInfo.currentStats.pending + 1,\n            archived: queueInfo.currentStats.archived - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_PENDING_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived: queueInfo.currentStats.archived + 1,\n            pending: queueInfo.currentStats.pending - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_AGGREGATING_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived: queueInfo.currentStats.archived + 1,\n            aggregating: queueInfo.currentStats.aggregating - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_SCHEDULED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived: queueInfo.currentStats.archived + 1,\n            scheduled: queueInfo.currentStats.scheduled - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_RETRY_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived: queueInfo.currentStats.archived + 1,\n            retry: queueInfo.currentStats.retry - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_PENDING_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            pending: queueInfo.currentStats.pending - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_SCHEDULED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            scheduled: queueInfo.currentStats.scheduled - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_AGGREGATING_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            aggregating: queueInfo.currentStats.aggregating - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_ARCHIVE_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived +\n              action.payload.archived_ids.length,\n            pending:\n              queueInfo.currentStats.pending -\n              action.payload.archived_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            pending:\n              queueInfo.currentStats.pending -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_ALL_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived + queueInfo.currentStats.pending,\n            pending: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            groups: queueInfo.currentStats.groups - 1,\n            archived: queueInfo.currentStats.archived + action.archived,\n            aggregating: queueInfo.currentStats.aggregating - action.archived,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_PENDING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            pending: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_RUN_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending +\n              action.payload.pending_ids.length,\n            scheduled:\n              queueInfo.currentStats.scheduled -\n              action.payload.pending_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived +\n              action.payload.archived_ids.length,\n            scheduled:\n              queueInfo.currentStats.scheduled -\n              action.payload.archived_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            scheduled:\n              queueInfo.currentStats.scheduled -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ALL_AGGREGATING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            groups: queueInfo.currentStats.groups - 1,\n            pending: queueInfo.currentStats.pending + action.scheduled,\n            aggregating: queueInfo.currentStats.aggregating - action.scheduled,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ALL_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending + queueInfo.currentStats.scheduled,\n            scheduled: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived +\n              queueInfo.currentStats.scheduled,\n            scheduled: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_AGGREGATING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            groups: queueInfo.currentStats.groups - 1,\n            aggregating: queueInfo.currentStats.aggregating - action.deleted,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            scheduled: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_RETRY_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            retry: queueInfo.currentStats.retry - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_RUN_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending +\n              action.payload.pending_ids.length,\n            retry:\n              queueInfo.currentStats.retry - action.payload.pending_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_ARCHIVE_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.pending +\n              action.payload.archived_ids.length,\n            retry:\n              queueInfo.currentStats.retry - action.payload.archived_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            retry:\n              queueInfo.currentStats.retry - action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_RUN_AGGREGATING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending +\n              action.payload.pending_ids.length,\n            aggregating:\n              queueInfo.currentStats.aggregating -\n              action.payload.pending_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived +\n              action.payload.archived_ids.length,\n            aggregating:\n              queueInfo.currentStats.aggregating -\n              action.payload.archived_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_AGGREGATING_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            aggregating:\n              queueInfo.currentStats.aggregating -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ALL_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending + queueInfo.currentStats.retry,\n            retry: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case ARCHIVE_ALL_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            archived:\n              queueInfo.currentStats.archived + queueInfo.currentStats.retry,\n            retry: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_RETRY_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            retry: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ARCHIVED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            archived: queueInfo.currentStats.archived - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_COMPLETED_TASK_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - 1,\n            completed: queueInfo.currentStats.completed - 1,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_RUN_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending +\n              action.payload.pending_ids.length,\n            archived:\n              queueInfo.currentStats.archived -\n              action.payload.pending_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            archived:\n              queueInfo.currentStats.archived -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case BATCH_DELETE_COMPLETED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size:\n              queueInfo.currentStats.size - action.payload.deleted_ids.length,\n            completed:\n              queueInfo.currentStats.completed -\n              action.payload.deleted_ids.length,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case RUN_ALL_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            pending:\n              queueInfo.currentStats.pending + queueInfo.currentStats.archived,\n            archived: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            archived: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case DELETE_ALL_COMPLETED_TASKS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: {\n            ...queueInfo.currentStats,\n            size: queueInfo.currentStats.size - action.deleted,\n            completed: 0,\n          },\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    case LIST_GROUPS_SUCCESS: {\n      const newData = state.data.map((queueInfo) => {\n        if (queueInfo.name !== action.queue) {\n          return queueInfo;\n        }\n        return {\n          ...queueInfo,\n          currentStats: action.payload.stats,\n        };\n      });\n      return { ...state, data: newData };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default queuesReducer;\n","import {\n  ARCHIVE_AGGREGATING_TASK_SUCCESS,\n  ARCHIVE_PENDING_TASK_SUCCESS,\n  ARCHIVE_RETRY_TASK_SUCCESS,\n  ARCHIVE_SCHEDULED_TASK_SUCCESS,\n  BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_DELETE_AGGREGATING_TASKS_SUCCESS,\n  BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n  BATCH_DELETE_PENDING_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_SUCCESS,\n  BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_RUN_AGGREGATING_TASKS_SUCCESS,\n  BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n  BATCH_RUN_RETRY_TASKS_SUCCESS,\n  BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n  DELETE_AGGREGATING_TASK_SUCCESS,\n  DELETE_ARCHIVED_TASK_SUCCESS,\n  DELETE_COMPLETED_TASK_SUCCESS,\n  DELETE_PENDING_TASK_SUCCESS,\n  DELETE_RETRY_TASK_SUCCESS,\n  DELETE_SCHEDULED_TASK_SUCCESS,\n  FILTER_TASKS_BEGIN,\n  FILTER_TASKS_CANCEL,\n  FILTER_TASKS_PROGRESS,\n  FILTER_TASKS_SUCCESS,\n  RUN_AGGREGATING_TASK_SUCCESS,\n  RUN_ARCHIVED_TASK_SUCCESS,\n  RUN_RETRY_TASK_SUCCESS,\n  RUN_SCHEDULED_TASK_SUCCESS,\n  TasksActionTypes,\n} from \"../actions/tasksActions\";\nimport { TasksState } from \"./tasksReducer\";\nimport { TaskInfo } from \"../api\";\n\nfunction modifyFilterResults(\n  state: TasksState,\n  action: (tasks: TaskInfo[]) => TaskInfo[]\n): TasksState {\n  const filterOp = state.filterOp;\n  if (filterOp == null || !filterOp.done) return state;\n\n  return {\n    ...state,\n    filterOp: {\n      ...filterOp,\n      result: action(filterOp.result),\n    },\n  };\n}\n\nexport function filterReducer(\n  state: TasksState,\n  action: TasksActionTypes\n): TasksState {\n  switch (action.type) {\n    case FILTER_TASKS_BEGIN:\n      return {\n        ...state,\n        filterOp: {\n          done: false,\n          processedTasks: 0,\n          result: [],\n        },\n      };\n\n    case FILTER_TASKS_PROGRESS: {\n      const filterOp = state.filterOp;\n      if (filterOp == null) return state;\n      return {\n        ...state,\n        filterOp: {\n          done: false,\n          processedTasks: filterOp.processedTasks + action.processedTasks,\n          result: filterOp.result.concat(action.filterResults),\n        },\n      };\n    }\n\n    case FILTER_TASKS_SUCCESS: {\n      const filterOp = state.filterOp;\n      if (filterOp == null) return state;\n      return {\n        ...state,\n        filterOp: {\n          ...filterOp,\n          done: true,\n        },\n      };\n    }\n\n    case FILTER_TASKS_CANCEL: {\n      const { filterOp, ...newState } = state;\n      return newState;\n    }\n\n    // Replicate actions made to queues to filter results\n\n    case ARCHIVE_PENDING_TASK_SUCCESS:\n    case DELETE_PENDING_TASK_SUCCESS:\n    case DELETE_COMPLETED_TASK_SUCCESS:\n    case RUN_SCHEDULED_TASK_SUCCESS:\n    case ARCHIVE_SCHEDULED_TASK_SUCCESS:\n    case DELETE_SCHEDULED_TASK_SUCCESS:\n    case RUN_AGGREGATING_TASK_SUCCESS:\n    case ARCHIVE_AGGREGATING_TASK_SUCCESS:\n    case DELETE_AGGREGATING_TASK_SUCCESS:\n    case RUN_RETRY_TASK_SUCCESS:\n    case ARCHIVE_RETRY_TASK_SUCCESS:\n    case DELETE_RETRY_TASK_SUCCESS:\n    case RUN_ARCHIVED_TASK_SUCCESS:\n    case DELETE_ARCHIVED_TASK_SUCCESS:\n      return modifyFilterResults(state, (tasks) =>\n        tasks.filter((task) => task.id !== action.taskId)\n      );\n\n    case BATCH_ARCHIVE_PENDING_TASKS_SUCCESS:\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS:\n    case BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS:\n    case BATCH_ARCHIVE_RETRY_TASKS_SUCCESS:\n      return modifyFilterResults(state, (tasks) =>\n        tasks.filter((task) => !action.payload.archived_ids.includes(task.id))\n      );\n\n    case BATCH_DELETE_COMPLETED_TASKS_SUCCESS:\n    case BATCH_DELETE_PENDING_TASKS_SUCCESS:\n    case BATCH_DELETE_SCHEDULED_TASKS_SUCCESS:\n    case BATCH_DELETE_AGGREGATING_TASKS_SUCCESS:\n    case BATCH_DELETE_RETRY_TASKS_SUCCESS:\n    case BATCH_DELETE_ARCHIVED_TASKS_SUCCESS:\n      return modifyFilterResults(state, (tasks) =>\n        tasks.filter((task) => !action.payload.deleted_ids.includes(task.id))\n      );\n\n    case BATCH_RUN_SCHEDULED_TASKS_SUCCESS:\n    case BATCH_RUN_AGGREGATING_TASKS_SUCCESS:\n    case BATCH_RUN_RETRY_TASKS_SUCCESS:\n    case BATCH_RUN_ARCHIVED_TASKS_SUCCESS:\n      return modifyFilterResults(state, (tasks) =>\n        tasks.filter((task) => !action.payload.pending_ids.includes(task.id))\n      );\n\n    default:\n      return state;\n  }\n}\n","import {\n  ARCHIVE_AGGREGATING_TASK_BEGIN,\n  ARCHIVE_AGGREGATING_TASK_ERROR,\n  ARCHIVE_AGGREGATING_TASK_SUCCESS,\n  ARCHIVE_ALL_AGGREGATING_TASKS_BEGIN,\n  ARCHIVE_ALL_AGGREGATING_TASKS_ERROR,\n  ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS,\n  ARCHIVE_ALL_PENDING_TASKS_BEGIN,\n  ARCHIVE_ALL_PENDING_TASKS_ERROR,\n  ARCHIVE_ALL_PENDING_TASKS_SUCCESS,\n  ARCHIVE_ALL_RETRY_TASKS_BEGIN,\n  ARCHIVE_ALL_RETRY_TASKS_ERROR,\n  ARCHIVE_ALL_RETRY_TASKS_SUCCESS,\n  ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN,\n  ARCHIVE_ALL_SCHEDULED_TASKS_ERROR,\n  ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS,\n  ARCHIVE_PENDING_TASK_BEGIN,\n  ARCHIVE_PENDING_TASK_ERROR,\n  ARCHIVE_PENDING_TASK_SUCCESS,\n  ARCHIVE_RETRY_TASK_BEGIN,\n  ARCHIVE_RETRY_TASK_ERROR,\n  ARCHIVE_RETRY_TASK_SUCCESS,\n  ARCHIVE_SCHEDULED_TASK_BEGIN,\n  ARCHIVE_SCHEDULED_TASK_ERROR,\n  ARCHIVE_SCHEDULED_TASK_SUCCESS,\n  BATCH_ARCHIVE_AGGREGATING_TASKS_BEGIN,\n  BATCH_ARCHIVE_AGGREGATING_TASKS_ERROR,\n  BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_PENDING_TASKS_BEGIN,\n  BATCH_ARCHIVE_PENDING_TASKS_ERROR,\n  BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_RETRY_TASKS_BEGIN,\n  BATCH_ARCHIVE_RETRY_TASKS_ERROR,\n  BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_CANCEL_ACTIVE_TASKS_BEGIN,\n  BATCH_CANCEL_ACTIVE_TASKS_ERROR,\n  BATCH_CANCEL_ACTIVE_TASKS_SUCCESS,\n  BATCH_DELETE_AGGREGATING_TASKS_BEGIN,\n  BATCH_DELETE_AGGREGATING_TASKS_ERROR,\n  BATCH_DELETE_AGGREGATING_TASKS_SUCCESS,\n  BATCH_DELETE_ARCHIVED_TASKS_BEGIN,\n  BATCH_DELETE_ARCHIVED_TASKS_ERROR,\n  BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_COMPLETED_TASKS_BEGIN,\n  BATCH_DELETE_COMPLETED_TASKS_ERROR,\n  BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n  BATCH_DELETE_PENDING_TASKS_BEGIN,\n  BATCH_DELETE_PENDING_TASKS_ERROR,\n  BATCH_DELETE_PENDING_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_BEGIN,\n  BATCH_DELETE_RETRY_TASKS_ERROR,\n  BATCH_DELETE_RETRY_TASKS_SUCCESS,\n  BATCH_DELETE_SCHEDULED_TASKS_BEGIN,\n  BATCH_DELETE_SCHEDULED_TASKS_ERROR,\n  BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_RUN_AGGREGATING_TASKS_BEGIN,\n  BATCH_RUN_AGGREGATING_TASKS_ERROR,\n  BATCH_RUN_AGGREGATING_TASKS_SUCCESS,\n  BATCH_RUN_ARCHIVED_TASKS_BEGIN,\n  BATCH_RUN_ARCHIVED_TASKS_ERROR,\n  BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n  BATCH_RUN_RETRY_TASKS_BEGIN,\n  BATCH_RUN_RETRY_TASKS_ERROR,\n  BATCH_RUN_RETRY_TASKS_SUCCESS,\n  BATCH_RUN_SCHEDULED_TASKS_BEGIN,\n  BATCH_RUN_SCHEDULED_TASKS_ERROR,\n  BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n  CANCEL_ACTIVE_TASK_BEGIN,\n  CANCEL_ACTIVE_TASK_ERROR,\n  CANCEL_ACTIVE_TASK_SUCCESS,\n  CANCEL_ALL_ACTIVE_TASKS_BEGIN,\n  CANCEL_ALL_ACTIVE_TASKS_ERROR,\n  CANCEL_ALL_ACTIVE_TASKS_SUCCESS,\n  DELETE_AGGREGATING_TASK_BEGIN,\n  DELETE_AGGREGATING_TASK_ERROR,\n  DELETE_AGGREGATING_TASK_SUCCESS,\n  DELETE_ALL_AGGREGATING_TASKS_BEGIN,\n  DELETE_ALL_AGGREGATING_TASKS_ERROR,\n  DELETE_ALL_AGGREGATING_TASKS_SUCCESS,\n  DELETE_ALL_ARCHIVED_TASKS_BEGIN,\n  DELETE_ALL_ARCHIVED_TASKS_ERROR,\n  DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n  DELETE_ALL_COMPLETED_TASKS_BEGIN,\n  DELETE_ALL_COMPLETED_TASKS_ERROR,\n  DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n  DELETE_ALL_PENDING_TASKS_BEGIN,\n  DELETE_ALL_PENDING_TASKS_ERROR,\n  DELETE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_ALL_RETRY_TASKS_BEGIN,\n  DELETE_ALL_RETRY_TASKS_ERROR,\n  DELETE_ALL_RETRY_TASKS_SUCCESS,\n  DELETE_ALL_SCHEDULED_TASKS_BEGIN,\n  DELETE_ALL_SCHEDULED_TASKS_ERROR,\n  DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n  DELETE_ARCHIVED_TASK_BEGIN,\n  DELETE_ARCHIVED_TASK_ERROR,\n  DELETE_ARCHIVED_TASK_SUCCESS,\n  DELETE_COMPLETED_TASK_BEGIN,\n  DELETE_COMPLETED_TASK_ERROR,\n  DELETE_COMPLETED_TASK_SUCCESS,\n  DELETE_PENDING_TASK_BEGIN,\n  DELETE_PENDING_TASK_ERROR,\n  DELETE_PENDING_TASK_SUCCESS,\n  DELETE_RETRY_TASK_BEGIN,\n  DELETE_RETRY_TASK_ERROR,\n  DELETE_RETRY_TASK_SUCCESS,\n  DELETE_SCHEDULED_TASK_BEGIN,\n  DELETE_SCHEDULED_TASK_ERROR,\n  DELETE_SCHEDULED_TASK_SUCCESS,\n  GET_TASK_INFO_BEGIN,\n  GET_TASK_INFO_ERROR,\n  GET_TASK_INFO_SUCCESS,\n  LIST_ACTIVE_TASKS_BEGIN,\n  LIST_ACTIVE_TASKS_ERROR,\n  LIST_ACTIVE_TASKS_SUCCESS,\n  LIST_AGGREGATING_TASKS_BEGIN,\n  LIST_AGGREGATING_TASKS_ERROR,\n  LIST_AGGREGATING_TASKS_SUCCESS,\n  LIST_ARCHIVED_TASKS_BEGIN,\n  LIST_ARCHIVED_TASKS_ERROR,\n  LIST_ARCHIVED_TASKS_SUCCESS,\n  LIST_COMPLETED_TASKS_BEGIN,\n  LIST_COMPLETED_TASKS_ERROR,\n  LIST_COMPLETED_TASKS_SUCCESS,\n  LIST_PENDING_TASKS_BEGIN,\n  LIST_PENDING_TASKS_ERROR,\n  LIST_PENDING_TASKS_SUCCESS,\n  LIST_RETRY_TASKS_BEGIN,\n  LIST_RETRY_TASKS_ERROR,\n  LIST_RETRY_TASKS_SUCCESS,\n  LIST_SCHEDULED_TASKS_BEGIN,\n  LIST_SCHEDULED_TASKS_ERROR,\n  LIST_SCHEDULED_TASKS_SUCCESS,\n  RUN_AGGREGATING_TASK_BEGIN,\n  RUN_AGGREGATING_TASK_ERROR,\n  RUN_AGGREGATING_TASK_SUCCESS,\n  RUN_ALL_AGGREGATING_TASKS_BEGIN,\n  RUN_ALL_AGGREGATING_TASKS_ERROR,\n  RUN_ALL_AGGREGATING_TASKS_SUCCESS,\n  RUN_ALL_ARCHIVED_TASKS_BEGIN,\n  RUN_ALL_ARCHIVED_TASKS_ERROR,\n  RUN_ALL_ARCHIVED_TASKS_SUCCESS,\n  RUN_ALL_RETRY_TASKS_BEGIN,\n  RUN_ALL_RETRY_TASKS_ERROR,\n  RUN_ALL_RETRY_TASKS_SUCCESS,\n  RUN_ALL_SCHEDULED_TASKS_BEGIN,\n  RUN_ALL_SCHEDULED_TASKS_ERROR,\n  RUN_ALL_SCHEDULED_TASKS_SUCCESS,\n  RUN_ARCHIVED_TASK_BEGIN,\n  RUN_ARCHIVED_TASK_ERROR,\n  RUN_ARCHIVED_TASK_SUCCESS,\n  RUN_RETRY_TASK_BEGIN,\n  RUN_RETRY_TASK_ERROR,\n  RUN_RETRY_TASK_SUCCESS,\n  RUN_SCHEDULED_TASK_BEGIN,\n  RUN_SCHEDULED_TASK_ERROR,\n  RUN_SCHEDULED_TASK_SUCCESS,\n  TasksActionTypes,\n} from \"../actions/tasksActions\";\nimport { TaskInfo } from \"../api\";\nimport { filterReducer } from \"./filterReducer\";\n\nexport interface TaskInfoExtended extends TaskInfo {\n  // Indicates that a request has been sent for this\n  // task and awaiting for a response.\n  requestPending: boolean;\n\n  // Incidates that a cancelation signal has been\n  // published for this task.\n  //\n  // Only applies to active tasks\n  canceling?: boolean;\n}\n\nexport interface TasksState {\n  activeTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  pendingTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  scheduledTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  retryTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  archivedTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  completedTasks: {\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  aggregatingTasks: {\n    group: string;\n    loading: boolean;\n    batchActionPending: boolean;\n    allActionPending: boolean;\n    error: string;\n    data: TaskInfoExtended[];\n  };\n  taskInfo: {\n    loading: boolean;\n    error: string;\n    data?: TaskInfo;\n  };\n  filterOp?: {\n    done: boolean;\n    processedTasks: number;\n    result: TaskInfo[];\n    error?: string;\n  };\n}\n\nconst initialState: TasksState = {\n  activeTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  pendingTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  scheduledTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  retryTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  archivedTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  completedTasks: {\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  aggregatingTasks: {\n    group: \"\",\n    loading: false,\n    batchActionPending: false,\n    allActionPending: false,\n    error: \"\",\n    data: [],\n  },\n  taskInfo: {\n    loading: false,\n    error: \"\",\n  },\n};\n\nfunction tasksReducer(\n  state = initialState,\n  action: TasksActionTypes\n): TasksState {\n  state = filterReducer(state, action);\n  switch (action.type) {\n    case GET_TASK_INFO_BEGIN:\n      return {\n        ...state,\n        taskInfo: {\n          ...state.taskInfo,\n          loading: true,\n        },\n      };\n\n    case GET_TASK_INFO_ERROR:\n      return {\n        ...state,\n        taskInfo: {\n          loading: false,\n          error: action.error,\n        },\n      };\n\n    case GET_TASK_INFO_SUCCESS:\n      return {\n        ...state,\n        taskInfo: {\n          loading: false,\n          error: \"\",\n          data: action.payload,\n        },\n      };\n\n    case LIST_ACTIVE_TASKS_BEGIN:\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_ACTIVE_TASKS_SUCCESS:\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            canceling: false,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_ACTIVE_TASKS_ERROR:\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_PENDING_TASKS_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_PENDING_TASKS_SUCCESS:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_PENDING_TASKS_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_SCHEDULED_TASKS_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_SCHEDULED_TASKS_SUCCESS:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_SCHEDULED_TASKS_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_RETRY_TASKS_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_RETRY_TASKS_SUCCESS:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_RETRY_TASKS_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_ARCHIVED_TASKS_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_ARCHIVED_TASKS_SUCCESS:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_ARCHIVED_TASKS_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_COMPLETED_TASKS_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          loading: true,\n        },\n      };\n\n    case LIST_COMPLETED_TASKS_SUCCESS:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_COMPLETED_TASKS_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case LIST_AGGREGATING_TASKS_BEGIN:\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          group: action.group,\n          loading: true,\n        },\n      };\n\n    case LIST_AGGREGATING_TASKS_SUCCESS:\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          group: action.group,\n          loading: false,\n          error: \"\",\n          data: action.payload.tasks.map((task) => ({\n            ...task,\n            requestPending: false,\n          })),\n        },\n      };\n\n    case LIST_AGGREGATING_TASKS_ERROR:\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          group: action.group,\n          loading: false,\n          error: action.error,\n          data: [],\n        },\n      };\n\n    case DELETE_COMPLETED_TASK_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          data: state.completedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case DELETE_COMPLETED_TASK_SUCCESS:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          data: state.completedTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case DELETE_COMPLETED_TASK_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          data: state.completedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          allActionPending: true,\n        },\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_SUCCESS:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_DELETE_COMPLETED_TASKS_BEGIN:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          batchActionPending: true,\n          data: state.completedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_DELETE_COMPLETED_TASKS_SUCCESS: {\n      const newData = state.completedTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_COMPLETED_TASKS_ERROR:\n      return {\n        ...state,\n        completedTasks: {\n          ...state.completedTasks,\n          batchActionPending: false,\n          data: state.completedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case CANCEL_ACTIVE_TASK_BEGIN: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (task.id !== action.taskId) {\n          return task;\n        }\n        return { ...task, requestPending: true };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ACTIVE_TASK_SUCCESS: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (task.id !== action.taskId) {\n          return task;\n        }\n        return { ...task, requestPending: false, canceling: true };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ACTIVE_TASK_ERROR:\n      const newData = state.activeTasks.data.map((task) => {\n        if (task.id !== action.taskId) {\n          return task;\n        }\n        return { ...task, requestPending: false };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          data: newData,\n        },\n      };\n\n    case BATCH_CANCEL_ACTIVE_TASKS_BEGIN: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (!action.taskIds.includes(task.id)) {\n          return task;\n        }\n        return { ...task, requestPending: true };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          batchActionPending: true,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_CANCEL_ACTIVE_TASKS_SUCCESS: {\n      const newData = state.activeTasks.data.map((task) => {\n        if (action.payload.canceled_ids.includes(task.id)) {\n          return { ...task, canceling: true, requestPending: false };\n        }\n        if (action.payload.error_ids.includes(task.id)) {\n          return { ...task, requestPending: false };\n        }\n        return task;\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_CANCEL_ACTIVE_TASKS_ERROR: {\n      const newData = state.activeTasks.data.map((task) => {\n        return { ...task, requestPending: false };\n      });\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_BEGIN: {\n      const newData = state.activeTasks.data.map((task) => ({\n        ...task,\n        requestPending: true,\n      }));\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          allActionPending: true,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_SUCCESS: {\n      const newData = state.activeTasks.data.map((task) => ({\n        ...task,\n        requestPending: false,\n        canceling: true,\n      }));\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          allActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_ERROR: {\n      const newData = state.activeTasks.data.map((task) => ({\n        ...task,\n        requestPending: false,\n      }));\n      return {\n        ...state,\n        activeTasks: {\n          ...state.activeTasks,\n          allActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case ARCHIVE_PENDING_TASK_BEGIN:\n    case DELETE_PENDING_TASK_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          data: state.pendingTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case ARCHIVE_PENDING_TASK_SUCCESS:\n    case DELETE_PENDING_TASK_SUCCESS:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          data: state.pendingTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case ARCHIVE_PENDING_TASK_ERROR:\n    case DELETE_PENDING_TASK_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          data: state.pendingTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case ARCHIVE_ALL_PENDING_TASKS_BEGIN:\n    case DELETE_ALL_PENDING_TASKS_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          allActionPending: true,\n        },\n      };\n\n    case ARCHIVE_ALL_PENDING_TASKS_SUCCESS:\n    case DELETE_ALL_PENDING_TASKS_SUCCESS:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case ARCHIVE_ALL_PENDING_TASKS_ERROR:\n    case DELETE_ALL_PENDING_TASKS_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_ARCHIVE_PENDING_TASKS_BEGIN:\n    case BATCH_DELETE_PENDING_TASKS_BEGIN:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: true,\n          data: state.pendingTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_ARCHIVE_PENDING_TASKS_SUCCESS: {\n      const newData = state.pendingTasks.data.filter(\n        (task) => !action.payload.archived_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_PENDING_TASKS_SUCCESS: {\n      const newData = state.pendingTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_ARCHIVE_PENDING_TASKS_ERROR:\n    case BATCH_DELETE_PENDING_TASKS_ERROR:\n      return {\n        ...state,\n        pendingTasks: {\n          ...state.pendingTasks,\n          batchActionPending: false,\n          data: state.pendingTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case RUN_SCHEDULED_TASK_BEGIN:\n    case ARCHIVE_SCHEDULED_TASK_BEGIN:\n    case DELETE_SCHEDULED_TASK_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          data: state.scheduledTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case RUN_SCHEDULED_TASK_SUCCESS:\n    case ARCHIVE_SCHEDULED_TASK_SUCCESS:\n    case DELETE_SCHEDULED_TASK_SUCCESS:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          data: state.scheduledTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case RUN_SCHEDULED_TASK_ERROR:\n    case ARCHIVE_SCHEDULED_TASK_ERROR:\n    case DELETE_SCHEDULED_TASK_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          data: state.scheduledTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_BEGIN:\n    case ARCHIVE_ALL_SCHEDULED_TASKS_BEGIN:\n    case DELETE_ALL_SCHEDULED_TASKS_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          allActionPending: true,\n        },\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_SUCCESS:\n    case ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS:\n    case DELETE_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_ERROR:\n    case ARCHIVE_ALL_SCHEDULED_TASKS_ERROR:\n    case DELETE_ALL_SCHEDULED_TASKS_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_RUN_SCHEDULED_TASKS_BEGIN:\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_BEGIN:\n    case BATCH_DELETE_SCHEDULED_TASKS_BEGIN:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: true,\n          data: state.scheduledTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_RUN_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.scheduledTasks.data.filter(\n        (task) => !action.payload.pending_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.scheduledTasks.data.filter(\n        (task) => !action.payload.archived_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_SCHEDULED_TASKS_SUCCESS: {\n      const newData = state.scheduledTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_RUN_SCHEDULED_TASKS_ERROR:\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_ERROR:\n    case BATCH_DELETE_SCHEDULED_TASKS_ERROR:\n      return {\n        ...state,\n        scheduledTasks: {\n          ...state.scheduledTasks,\n          batchActionPending: false,\n          data: state.scheduledTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case RUN_AGGREGATING_TASK_BEGIN:\n    case ARCHIVE_AGGREGATING_TASK_BEGIN:\n    case DELETE_AGGREGATING_TASK_BEGIN:\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          data: state.aggregatingTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case RUN_AGGREGATING_TASK_ERROR:\n    case ARCHIVE_AGGREGATING_TASK_ERROR:\n    case DELETE_AGGREGATING_TASK_ERROR:\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          data: state.aggregatingTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case RUN_AGGREGATING_TASK_SUCCESS:\n    case ARCHIVE_AGGREGATING_TASK_SUCCESS:\n    case DELETE_AGGREGATING_TASK_SUCCESS:\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          data: state.aggregatingTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case BATCH_RUN_AGGREGATING_TASKS_BEGIN:\n    case BATCH_ARCHIVE_AGGREGATING_TASKS_BEGIN:\n    case BATCH_DELETE_AGGREGATING_TASKS_BEGIN:\n      if (action.group !== state.aggregatingTasks.group) {\n        return state;\n      }\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          batchActionPending: true,\n          data: state.aggregatingTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_RUN_AGGREGATING_TASKS_ERROR:\n    case BATCH_ARCHIVE_AGGREGATING_TASKS_ERROR:\n    case BATCH_DELETE_AGGREGATING_TASKS_ERROR:\n      if (action.group !== state.aggregatingTasks.group) {\n        return state;\n      }\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          batchActionPending: false,\n          data: state.scheduledTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case BATCH_DELETE_AGGREGATING_TASKS_SUCCESS: {\n      if (action.group !== state.aggregatingTasks.group) {\n        return state;\n      }\n      const newData = state.aggregatingTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_RUN_AGGREGATING_TASKS_SUCCESS: {\n      if (action.group !== state.aggregatingTasks.group) {\n        return state;\n      }\n      const newData = state.aggregatingTasks.data.filter(\n        (task) => !action.payload.pending_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS: {\n      if (action.group !== state.aggregatingTasks.group) {\n        return state;\n      }\n      const newData = state.aggregatingTasks.data.filter(\n        (task) => !action.payload.archived_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case RUN_RETRY_TASK_BEGIN:\n    case ARCHIVE_RETRY_TASK_BEGIN:\n    case DELETE_RETRY_TASK_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          data: state.retryTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case RUN_RETRY_TASK_SUCCESS:\n    case ARCHIVE_RETRY_TASK_SUCCESS:\n    case DELETE_RETRY_TASK_SUCCESS:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          data: state.retryTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case RUN_RETRY_TASK_ERROR:\n    case ARCHIVE_RETRY_TASK_ERROR:\n    case DELETE_RETRY_TASK_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          data: state.retryTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case RUN_ALL_RETRY_TASKS_BEGIN:\n    case ARCHIVE_ALL_RETRY_TASKS_BEGIN:\n    case DELETE_ALL_RETRY_TASKS_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          allActionPending: true,\n        },\n      };\n\n    case RUN_ALL_RETRY_TASKS_SUCCESS:\n    case ARCHIVE_ALL_RETRY_TASKS_SUCCESS:\n    case DELETE_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case RUN_ALL_RETRY_TASKS_ERROR:\n    case ARCHIVE_ALL_RETRY_TASKS_ERROR:\n    case DELETE_ALL_RETRY_TASKS_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_RUN_RETRY_TASKS_BEGIN:\n    case BATCH_ARCHIVE_RETRY_TASKS_BEGIN:\n    case BATCH_DELETE_RETRY_TASKS_BEGIN:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: true,\n          data: state.retryTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_RUN_RETRY_TASKS_SUCCESS: {\n      const newData = state.retryTasks.data.filter(\n        (task) => !action.payload.pending_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_ARCHIVE_RETRY_TASKS_SUCCESS: {\n      const newData = state.retryTasks.data.filter(\n        (task) => !action.payload.archived_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_RETRY_TASKS_SUCCESS: {\n      const newData = state.retryTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_RUN_RETRY_TASKS_ERROR:\n    case BATCH_ARCHIVE_RETRY_TASKS_ERROR:\n    case BATCH_DELETE_RETRY_TASKS_ERROR:\n      return {\n        ...state,\n        retryTasks: {\n          ...state.retryTasks,\n          batchActionPending: false,\n          data: state.retryTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case RUN_ARCHIVED_TASK_BEGIN:\n    case DELETE_ARCHIVED_TASK_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          data: state.archivedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: true };\n          }),\n        },\n      };\n\n    case RUN_ARCHIVED_TASK_SUCCESS:\n    case DELETE_ARCHIVED_TASK_SUCCESS:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          data: state.archivedTasks.data.filter(\n            (task) => task.id !== action.taskId\n          ),\n        },\n      };\n\n    case RUN_ARCHIVED_TASK_ERROR:\n    case DELETE_ARCHIVED_TASK_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          data: state.archivedTasks.data.map((task) => {\n            if (task.id !== action.taskId) {\n              return task;\n            }\n            return { ...task, requestPending: false };\n          }),\n        },\n      };\n\n    case RUN_ALL_ARCHIVED_TASKS_BEGIN:\n    case DELETE_ALL_ARCHIVED_TASKS_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          allActionPending: true,\n        },\n      };\n\n    case RUN_ALL_ARCHIVED_TASKS_SUCCESS:\n    case DELETE_ALL_ARCHIVED_TASKS_SUCCESS:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case RUN_ALL_ARCHIVED_TASKS_ERROR:\n    case DELETE_ALL_ARCHIVED_TASKS_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          allActionPending: false,\n        },\n      };\n\n    case BATCH_RUN_ARCHIVED_TASKS_BEGIN:\n    case BATCH_DELETE_ARCHIVED_TASKS_BEGIN:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: true,\n          data: state.archivedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: true,\n            };\n          }),\n        },\n      };\n\n    case BATCH_RUN_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.archivedTasks.data.filter(\n        (task) => !action.payload.pending_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_DELETE_ARCHIVED_TASKS_SUCCESS: {\n      const newData = state.archivedTasks.data.filter(\n        (task) => !action.payload.deleted_ids.includes(task.id)\n      );\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: false,\n          data: newData,\n        },\n      };\n    }\n\n    case BATCH_RUN_ARCHIVED_TASKS_ERROR:\n    case BATCH_DELETE_ARCHIVED_TASKS_ERROR:\n      return {\n        ...state,\n        archivedTasks: {\n          ...state.archivedTasks,\n          batchActionPending: false,\n          data: state.archivedTasks.data.map((task) => {\n            if (!action.taskIds.includes(task.id)) {\n              return task;\n            }\n            return {\n              ...task,\n              requestPending: false,\n            };\n          }),\n        },\n      };\n\n    case RUN_ALL_AGGREGATING_TASKS_BEGIN:\n    case ARCHIVE_ALL_AGGREGATING_TASKS_BEGIN:\n    case DELETE_ALL_AGGREGATING_TASKS_BEGIN:\n      if (state.aggregatingTasks.group !== action.group) {\n        return state;\n      }\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          allActionPending: true,\n        },\n      };\n\n    case RUN_ALL_AGGREGATING_TASKS_SUCCESS:\n    case ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS:\n    case DELETE_ALL_AGGREGATING_TASKS_SUCCESS:\n      if (state.aggregatingTasks.group !== action.group) {\n        return state;\n      }\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          allActionPending: false,\n          data: [],\n        },\n      };\n\n    case RUN_ALL_AGGREGATING_TASKS_ERROR:\n    case ARCHIVE_ALL_AGGREGATING_TASKS_ERROR:\n    case DELETE_ALL_AGGREGATING_TASKS_ERROR:\n      if (state.aggregatingTasks.group !== action.group) {\n        return state;\n      }\n      return {\n        ...state,\n        aggregatingTasks: {\n          ...state.aggregatingTasks,\n          allActionPending: false,\n          error: action.error,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default tasksReducer;\n","import {\n  GroupsActionTypes,\n  LIST_GROUPS_BEGIN,\n  LIST_GROUPS_ERROR,\n  LIST_GROUPS_SUCCESS,\n} from \"../actions/groupsActions\";\nimport {\n  LIST_AGGREGATING_TASKS_SUCCESS,\n  TasksActionTypes,\n} from \"../actions/tasksActions\";\nimport { GroupInfo } from \"../api\";\n\ninterface GroupsState {\n  loading: boolean;\n  data: GroupInfo[];\n  error: string;\n}\n\nconst initialState: GroupsState = {\n  data: [],\n  loading: false,\n  error: \"\",\n};\n\nfunction groupsReducer(\n  state = initialState,\n  action: GroupsActionTypes | TasksActionTypes\n): GroupsState {\n  switch (action.type) {\n    case LIST_GROUPS_BEGIN:\n      return { ...state, loading: true };\n\n    case LIST_GROUPS_ERROR:\n      return { ...state, loading: false, error: action.error };\n\n    case LIST_GROUPS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: \"\",\n        data: action.payload.groups,\n      };\n\n    case LIST_AGGREGATING_TASKS_SUCCESS:\n      return {\n        ...state,\n        data: action.payload.groups,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default groupsReducer;\n","import {\n  LIST_SERVERS_BEGIN,\n  LIST_SERVERS_ERROR,\n  LIST_SERVERS_SUCCESS,\n  ServersActionTypes,\n} from \"../actions/serversActions\";\nimport { ServerInfo } from \"../api\";\n\ninterface ServersState {\n  loading: boolean;\n  error: string;\n  data: ServerInfo[];\n}\n\nconst initialState: ServersState = {\n  loading: false,\n  error: \"\",\n  data: [],\n};\n\nexport default function serversReducer(\n  state = initialState,\n  action: ServersActionTypes\n): ServersState {\n  switch (action.type) {\n    case LIST_SERVERS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LIST_SERVERS_SUCCESS:\n      return {\n        loading: false,\n        error: \"\",\n        data: action.payload.servers,\n      };\n\n    case LIST_SERVERS_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  CLOSE_SNACKBAR,\n  SnackbarActionTypes,\n} from \"../actions/snackbarActions\";\nimport {\n  BATCH_CANCEL_ACTIVE_TASKS_SUCCESS,\n  BATCH_DELETE_ARCHIVED_TASKS_SUCCESS,\n  BATCH_DELETE_RETRY_TASKS_SUCCESS,\n  BATCH_DELETE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_ARCHIVE_RETRY_TASKS_SUCCESS,\n  BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS,\n  BATCH_RUN_ARCHIVED_TASKS_SUCCESS,\n  BATCH_RUN_RETRY_TASKS_SUCCESS,\n  BATCH_RUN_SCHEDULED_TASKS_SUCCESS,\n  CANCEL_ALL_ACTIVE_TASKS_SUCCESS,\n  DELETE_ALL_ARCHIVED_TASKS_SUCCESS,\n  DELETE_ALL_RETRY_TASKS_SUCCESS,\n  DELETE_ALL_SCHEDULED_TASKS_SUCCESS,\n  DELETE_ARCHIVED_TASK_SUCCESS,\n  DELETE_RETRY_TASK_SUCCESS,\n  DELETE_SCHEDULED_TASK_SUCCESS,\n  ARCHIVE_ALL_RETRY_TASKS_SUCCESS,\n  ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS,\n  ARCHIVE_RETRY_TASK_SUCCESS,\n  ARCHIVE_SCHEDULED_TASK_SUCCESS,\n  RUN_ALL_ARCHIVED_TASKS_SUCCESS,\n  RUN_ALL_RETRY_TASKS_SUCCESS,\n  RUN_ALL_SCHEDULED_TASKS_SUCCESS,\n  RUN_ARCHIVED_TASK_SUCCESS,\n  RUN_RETRY_TASK_SUCCESS,\n  RUN_SCHEDULED_TASK_SUCCESS,\n  TasksActionTypes,\n  ARCHIVE_PENDING_TASK_SUCCESS,\n  DELETE_PENDING_TASK_SUCCESS,\n  BATCH_ARCHIVE_PENDING_TASKS_SUCCESS,\n  BATCH_DELETE_PENDING_TASKS_SUCCESS,\n  ARCHIVE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_ALL_PENDING_TASKS_SUCCESS,\n  DELETE_COMPLETED_TASK_SUCCESS,\n  DELETE_ALL_COMPLETED_TASKS_SUCCESS,\n  BATCH_DELETE_COMPLETED_TASKS_SUCCESS,\n  RUN_AGGREGATING_TASK_SUCCESS,\n  ARCHIVE_AGGREGATING_TASK_SUCCESS,\n  DELETE_AGGREGATING_TASK_SUCCESS,\n  BATCH_RUN_AGGREGATING_TASKS_SUCCESS,\n  BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS,\n  BATCH_DELETE_AGGREGATING_TASKS_SUCCESS,\n  RUN_ALL_AGGREGATING_TASKS_SUCCESS,\n  ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS,\n  DELETE_ALL_AGGREGATING_TASKS_SUCCESS,\n} from \"../actions/tasksActions\";\n\ninterface SnackbarState {\n  isOpen: boolean;\n  message: string;\n}\n\nconst initialState: SnackbarState = {\n  isOpen: false,\n  message: \"\",\n};\n\nfunction snackbarReducer(\n  state = initialState,\n  action: TasksActionTypes | SnackbarActionTypes\n): SnackbarState {\n  switch (action.type) {\n    case CLOSE_SNACKBAR:\n      return {\n        // Note: We keep the message state unchanged for\n        // smoother transition animation.\n        ...state,\n        isOpen: false,\n      };\n\n    case BATCH_CANCEL_ACTIVE_TASKS_SUCCESS: {\n      const n = action.payload.canceled_ids.length;\n      return {\n        isOpen: true,\n        message: `Cancelation signal sent to ${n} ${\n          n === 1 ? \"task\" : \"tasks\"\n        }`,\n      };\n    }\n\n    case CANCEL_ALL_ACTIVE_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Cancelation signal sent to all tasks in ${action.queue} queue`,\n      };\n\n    case RUN_SCHEDULED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Scheduled task is now pending`,\n      };\n\n    case RUN_RETRY_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Retry task is now pending`,\n      };\n\n    case RUN_ARCHIVED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Archived task is now pending`,\n      };\n\n    case RUN_AGGREGATING_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Aggregating task is now pending`,\n      };\n\n    case ARCHIVE_PENDING_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Pending task is now archived`,\n      };\n\n    case ARCHIVE_SCHEDULED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Scheduled task is now archived`,\n      };\n\n    case ARCHIVE_RETRY_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Retry task is now archived`,\n      };\n\n    case ARCHIVE_AGGREGATING_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Aggregating task is now archived`,\n      };\n\n    case DELETE_PENDING_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Pending task deleted`,\n      };\n\n    case DELETE_SCHEDULED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Scheduled task deleted`,\n      };\n\n    case DELETE_AGGREGATING_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Aggregating task deleted`,\n      };\n\n    case BATCH_RUN_SCHEDULED_TASKS_SUCCESS: {\n      const n = action.payload.pending_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} scheduled ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now pending`,\n      };\n    }\n\n    case BATCH_RUN_AGGREGATING_TASKS_SUCCESS: {\n      const n = action.payload.pending_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} aggregating ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now pending`,\n      };\n    }\n\n    case BATCH_ARCHIVE_AGGREGATING_TASKS_SUCCESS: {\n      const n = action.payload.archived_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} aggregating ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now archived`,\n      };\n    }\n\n    case BATCH_DELETE_AGGREGATING_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} aggregating ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case BATCH_ARCHIVE_PENDING_TASKS_SUCCESS: {\n      const n = action.payload.archived_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} pending ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now archived`,\n      };\n    }\n\n    case BATCH_DELETE_PENDING_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} pending ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case BATCH_ARCHIVE_SCHEDULED_TASKS_SUCCESS: {\n      const n = action.payload.archived_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} scheduled ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now archived`,\n      };\n    }\n\n    case BATCH_DELETE_SCHEDULED_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} scheduled ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case ARCHIVE_ALL_PENDING_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All pending tasks are now archived\",\n      };\n\n    case DELETE_ALL_PENDING_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All pending tasks deleted\",\n      };\n\n    case RUN_ALL_AGGREGATING_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: `All tasks in group ${action.group}  are now pending`,\n      };\n\n    case ARCHIVE_ALL_AGGREGATING_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: `All tasks in group ${action.group} are now archived`,\n      };\n\n    case DELETE_ALL_AGGREGATING_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: `All tasks in group ${action.group} deleted`,\n      };\n\n    case RUN_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All scheduled tasks are now pending\",\n      };\n\n    case ARCHIVE_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All scheduled tasks are now archived\",\n      };\n\n    case DELETE_ALL_SCHEDULED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All scheduled tasks deleted\",\n      };\n\n    case DELETE_RETRY_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Retry task deleted`,\n      };\n\n    case BATCH_RUN_RETRY_TASKS_SUCCESS: {\n      const n = action.payload.pending_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} retry ${n === 1 ? \"task is\" : \"tasks are\"} now pending`,\n      };\n    }\n\n    case BATCH_ARCHIVE_RETRY_TASKS_SUCCESS: {\n      const n = action.payload.archived_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} retry ${n === 1 ? \"task is\" : \"tasks are\"} now archived`,\n      };\n    }\n\n    case BATCH_DELETE_RETRY_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} retry ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case RUN_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All retry tasks are now pending\",\n      };\n\n    case ARCHIVE_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All retry tasks are now archived\",\n      };\n\n    case DELETE_ALL_RETRY_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All retry tasks deleted\",\n      };\n\n    case DELETE_ARCHIVED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Archived task deleted`,\n      };\n\n    case BATCH_RUN_ARCHIVED_TASKS_SUCCESS: {\n      const n = action.payload.pending_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} archived ${\n          n === 1 ? \"task is\" : \"tasks are\"\n        } now pending`,\n      };\n    }\n\n    case BATCH_DELETE_ARCHIVED_TASKS_SUCCESS: {\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} archived ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n    }\n\n    case RUN_ALL_ARCHIVED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All archived tasks are now pending\",\n      };\n\n    case DELETE_ALL_ARCHIVED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All archived tasks deleted\",\n      };\n\n    case DELETE_COMPLETED_TASK_SUCCESS:\n      return {\n        isOpen: true,\n        message: `Completed task deleted`,\n      };\n\n    case DELETE_ALL_COMPLETED_TASKS_SUCCESS:\n      return {\n        isOpen: true,\n        message: \"All completed tasks deleted\",\n      };\n\n    case BATCH_DELETE_COMPLETED_TASKS_SUCCESS:\n      const n = action.payload.deleted_ids.length;\n      return {\n        isOpen: true,\n        message: `${n} completed ${n === 1 ? \"task\" : \"tasks\"} deleted`,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default snackbarReducer;\n","import {\n  LIST_QUEUES_SUCCESS,\n  QueuesActionTypes,\n} from \"../actions/queuesActions\";\nimport {\n  LIST_QUEUE_STATS_BEGIN,\n  LIST_QUEUE_STATS_ERROR,\n  LIST_QUEUE_STATS_SUCCESS,\n  QueueStatsActionTypes,\n} from \"../actions/queueStatsActions\";\nimport { DailyStat } from \"../api\";\n\ninterface QueueStatsState {\n  loading: boolean;\n  data: { [qname: string]: DailyStat[] };\n}\n\nconst initialState: QueueStatsState = {\n  loading: false,\n  data: {},\n};\n\nexport default function queueStatsReducer(\n  state = initialState,\n  action: QueueStatsActionTypes | QueuesActionTypes\n): QueueStatsState {\n  switch (action.type) {\n    case LIST_QUEUE_STATS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LIST_QUEUE_STATS_SUCCESS:\n      return {\n        data: action.payload.stats,\n        loading: false,\n      };\n\n    case LIST_QUEUE_STATS_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case LIST_QUEUES_SUCCESS: {\n      // Copy to avoid mutation.\n      let newData = { ...state.data };\n      // Update today's stats with most up-to-date data.\n      for (const q of action.payload.queues) {\n        const stats = newData[q.queue];\n        if (!stats) {\n          continue;\n        }\n        const newStats = stats.map((stat) => {\n          if (isSameDate(stat.date, q.timestamp)) {\n            return {\n              ...stat,\n              processed: q.processed,\n              failed: q.failed,\n            };\n          }\n          return stat;\n        });\n        newData[q.queue] = newStats;\n      }\n      return { ...state, data: newData };\n    }\n\n    default:\n      return state;\n  }\n}\n\n// Returns true if two timestamps are from the same date.\nfunction isSameDate(ts1: string, ts2: string): boolean {\n  const date1 = new Date(ts1);\n  const date2 = new Date(ts2);\n  return (\n    date1.getUTCDate() === date2.getUTCDate() &&\n    date1.getUTCMonth() === date2.getUTCMonth() &&\n    date1.getUTCFullYear() === date2.getUTCFullYear()\n  );\n}\n","import {\n  GET_REDIS_INFO_BEGIN,\n  GET_REDIS_INFO_ERROR,\n  GET_REDIS_INFO_SUCCESS,\n  RedisInfoActionTypes,\n} from \"../actions/redisInfoActions\";\nimport { QueueLocation, RedisInfo } from \"../api\";\n\ninterface RedisInfoState {\n  loading: boolean;\n  error: string;\n  address: string;\n  data: RedisInfo | null;\n  rawData: string | null;\n  cluster: boolean;\n  rawClusterNodes: string | null;\n  queueLocations: QueueLocation[] | null;\n}\n\nconst initialState: RedisInfoState = {\n  loading: false,\n  error: \"\",\n  address: \"\",\n  data: null,\n  rawData: null,\n  cluster: false,\n  rawClusterNodes: null,\n  queueLocations: null,\n};\n\nexport default function redisInfoReducer(\n  state = initialState,\n  action: RedisInfoActionTypes\n): RedisInfoState {\n  switch (action.type) {\n    case GET_REDIS_INFO_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case GET_REDIS_INFO_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case GET_REDIS_INFO_SUCCESS:\n      return {\n        loading: false,\n        error: \"\",\n        address: action.payload.address,\n        data: action.payload.info,\n        rawData: action.payload.raw_info,\n        cluster: action.payload.cluster,\n        rawClusterNodes: action.payload.raw_cluster_nodes,\n        queueLocations: action.payload.queue_locations,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_METRICS_BEGIN,\n  GET_METRICS_ERROR,\n  GET_METRICS_SUCCESS,\n  MetricsActionTypes,\n} from \"../actions/metricsActions\";\nimport { MetricsResponse } from \"../api\";\n\ninterface MetricsState {\n  loading: boolean;\n  error: string;\n  data: MetricsResponse | null;\n}\n\nconst initialState: MetricsState = {\n  loading: false,\n  error: \"\",\n  data: null,\n};\n\nexport default function metricsReducer(\n  state = initialState,\n  action: MetricsActionTypes\n): MetricsState {\n  switch (action.type) {\n    case GET_METRICS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case GET_METRICS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n\n    case GET_METRICS_SUCCESS:\n      return {\n        loading: false,\n        error: \"\",\n        data: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { initialState as settingsInitialState } from \"./reducers/settingsReducer\"\nimport { AppState } from \"./store\";\n\nconst LOCAL_STORAGE_KEY = \"asynqmon:state\";\n\nexport function loadState(): Partial<AppState> {\n  try {\n    const serializedState = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (serializedState === null) {\n      return {};\n    }\n    const savedState = JSON.parse(serializedState);\n    return {\n      settings: {\n        ...settingsInitialState,\n        ...(savedState.settings || {}),\n      }\n    }\n  } catch (err) {\n    console.log(\"loadState: could not load state \", err)\n    return {};\n  }\n}\n\nexport function saveState(state: AppState) {\n  try {\n    const serializedState = JSON.stringify({ settings: state.settings });\n    localStorage.setItem(LOCAL_STORAGE_KEY, serializedState);\n  } catch (err) {\n    console.error(\"saveState: could not save state: \", err);\n  }\n}\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport settingsReducer from \"./reducers/settingsReducer\";\nimport queuesReducer from \"./reducers/queuesReducer\";\nimport tasksReducer from \"./reducers/tasksReducer\";\nimport groupsReducer from \"./reducers/groupsReducer\";\nimport serversReducer from \"./reducers/serversReducer\";\nimport schedulerEntriesReducer from \"./reducers/schedulerEntriesReducer\";\nimport snackbarReducer from \"./reducers/snackbarReducer\";\nimport queueStatsReducer from \"./reducers/queueStatsReducer\";\nimport redisInfoReducer from \"./reducers/redisInfoReducer\";\nimport metricsReducer from \"./reducers/metricsReducer\";\nimport { loadState } from \"./localStorage\";\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer,\n  queues: queuesReducer,\n  tasks: tasksReducer,\n  groups: groupsReducer,\n  servers: serversReducer,\n  schedulerEntries: schedulerEntriesReducer,\n  snackbar: snackbarReducer,\n  queueStats: queueStatsReducer,\n  redis: redisInfoReducer,\n  metrics: metricsReducer,\n});\n\nconst preloadedState = loadState();\n\n// AppState is the top-level application state maintained by redux store.\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n  middleware: (getDefaultMiddleware) =>\n    // Disable debug middleware for tasks.filterOp as it may contain large state\n    getDefaultMiddleware({\n      immutableCheck: { ignoredPaths: [\"tasks.filterOp\"] },\n      serializableCheck: { ignoredPaths: [\"tasks.filterOp\"] },\n    }),\n});\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Prefix used for go template\nconst goTmplActionPrefix = \"/[[\";\n\n// paseses flags (string values) assigned under the window objects by server.\nexport default function parseFlagsUnderWindow() {\n  // ROOT_PATH\n  if (window.FLAG_ROOT_PATH === undefined) {\n    console.log(\"ROOT_PATH is not defined. Falling back to emtpy string\");\n    window.ROOT_PATH = \"\";\n  } else {\n    window.ROOT_PATH = window.FLAG_ROOT_PATH;\n  }\n\n  // PROMETHEUS_SERVER_ADDRESS\n  if (window.FLAG_PROMETHEUS_SERVER_ADDRESS === undefined) {\n    console.log(\n      \"PROMETHEUS_SERVER_ADDRESS is not defined. Falling back to emtpy string\"\n    );\n    window.PROMETHEUS_SERVER_ADDRESS = \"\";\n  } else if (\n    window.FLAG_PROMETHEUS_SERVER_ADDRESS.startsWith(goTmplActionPrefix)\n  ) {\n    console.log(\n      \"PROMETHEUS_SERVER_ADDRESS was not evaluated by the server. Falling back to empty string\"\n    );\n    window.PROMETHEUS_SERVER_ADDRESS = \"\";\n  } else {\n      window.PROMETHEUS_SERVER_ADDRESS = window.FLAG_PROMETHEUS_SERVER_ADDRESS;\n  }\n\n  // READ_ONLY\n  if (window.FLAG_READ_ONLY === undefined) {\n    console.log(\"READ_ONLY is not defined. Falling back to false\");\n    window.READ_ONLY = false;\n  } else if (window.FLAG_READ_ONLY.startsWith(goTmplActionPrefix)) {\n    console.log(\n      \"READ_ONLY was not evaluated by the server. Falling back to false\"\n    );\n    window.READ_ONLY = false;\n  } else {\n    window.READ_ONLY = window.FLAG_READ_ONLY === \"true\";\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport parseFlagsUnderWindow from \"./parseFlags\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { saveState } from \"./localStorage\";\nimport { SettingsState } from \"./reducers/settingsReducer\";\n\nparseFlagsUnderWindow();\n\nlet currentSettings: SettingsState | undefined = undefined;\nstore.subscribe(() => {\n  const prevSettings = currentSettings;\n  currentSettings = store.getState().settings;\n\n  // Write to local-storage only when settings have changed.\n  if (prevSettings !== currentSettings) {\n    saveState(store.getState());\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// TODO(hibiken): Look into this.\nserviceWorker.unregister();\n","import { AxiosError } from \"axios\";\n\n// toErrorStringWithHttpStatus returns a string representaion of axios error with HTTP status.\nexport function toErrorStringWithHttpStatus(error: AxiosError<string>): string {\n  const { response } = error;\n  if (!response) {\n    return \"error: no error response data available\";\n  }\n  return `${response.status} (${response.statusText}): ${response.data}`;\n}\n\n// toErrorString returns a string representaion of axios error.\nexport function toErrorString(error: AxiosError<string>): string {\n  const { response } = error;\n  if (!response) {\n    return \"Unknown error occurred. See the logs for details.\";\n  }\n  return response.data;\n}\n\ninterface Duration {\n  hour: number;\n  minute: number;\n  second: number;\n  totalSeconds: number;\n}\n\n// Returns a duration from the number of seconds provided.\nexport function durationFromSeconds(totalSeconds: number): Duration {\n  const hour = Math.floor(totalSeconds / 3600);\n  const minute = Math.floor((totalSeconds - 3600 * hour) / 60);\n  const second = totalSeconds - 3600 * hour - 60 * minute;\n  return { hour, minute, second, totalSeconds };\n}\n\n// start and end are in milliseconds.\nfunction durationBetween(start: number, end: number): Duration {\n  const durationInMillisec = start - end;\n  const totalSeconds = Math.floor(durationInMillisec / 1000);\n  return durationFromSeconds(totalSeconds);\n}\n\nexport function stringifyDuration(d: Duration): string {\n  if (d.hour > 24) {\n    const n = Math.floor(d.hour / 24);\n    return n + (n === 1 ? \" day\" : \" days\");\n  }\n  return (\n    (d.hour !== 0 ? `${d.hour}h` : \"\") +\n    (d.minute !== 0 ? `${d.minute}m` : \"\") +\n    `${d.second}s`\n  );\n}\n\nexport function durationBefore(timestamp: string): string {\n  try {\n    const duration = durationBetween(Date.parse(timestamp), Date.now());\n    if (duration.totalSeconds < 1) {\n      return \"now\";\n    }\n    return \"in \" + stringifyDuration(duration);\n  } catch {\n    return \"-\";\n  }\n}\n\nconst zeroTimestamp = \"0001-01-01T00:00:00Z\";\nexport function timeAgo(timestamp: string): string {\n  if (timestamp === zeroTimestamp) {\n    return \"-\";\n  }\n  try {\n    return timeAgoUnix(Date.parse(timestamp) / 1000);\n  } catch (error) {\n    console.error(\"Could not parse timestamp: \", timestamp, error);\n    return \"-\";\n  }\n}\n\nexport function timeAgoUnix(unixtime: number): string {\n  if (unixtime === 0) {\n    return \"\";\n  }\n  const duration = durationBetween(Date.now(), unixtime * 1000);\n  return stringifyDuration(duration) + \" ago\";\n}\n\nexport function getCurrentUTCDate(): string {\n  const today = new Date();\n  const dd = today.getUTCDate().toString().padStart(2, \"0\");\n  const mm = (today.getMonth() + 1).toString().padStart(2, \"0\");\n  const yyyy = today.getFullYear();\n  return `${yyyy}-${mm}-${dd}`;\n}\n\nexport function uuidPrefix(uuid: string): string {\n  const idx = uuid.indexOf(\"-\");\n  if (idx === -1) {\n    return uuid;\n  }\n  return uuid.substr(0, idx);\n}\n\nexport function percentage(numerator: number, denominator: number): string {\n  if (denominator === 0) return \"0.00%\";\n  const perc = ((numerator / denominator) * 100).toFixed(2);\n  return `${perc} %`;\n}\n\nexport function isJsonPayload(p: string) {\n  try {\n    JSON.parse(p);\n  } catch (error) {\n    return false;\n  }\n  return true;\n}\n\nexport function prettifyPayload(p: string) {\n  if (isJsonPayload(p)) {\n    return JSON.stringify(JSON.parse(p), null, 2);\n  }\n  return p;\n}\n\n// Returns the number of seconds elapsed since January 1, 1970 00:00:00 UTC.\nexport function currentUnixtime(): number {\n  return Math.floor(Date.now() / 1000);\n}\n\nconst durationRegex = /([0-9]*(\\.[0-9]*)?)[s|m|h]/;\n// Parses the given string and returns the number of seconds if the input is valid.\n// Otherwise, it throws an error\n// Supported time units are \"s\", \"m\", \"h\"\nexport function parseDuration(s: string): number {\n  if (!durationRegex.test(s)) {\n    throw new Error(\"invalid duration\");\n  }\n  const val = parseFloat(s.slice(0, -1));\n  switch (s.slice(-1)) {\n    case \"s\":\n      return val;\n    case \"m\":\n      return val * 60;\n    case \"h\":\n      return val * 60 * 60;\n    default:\n      throw new Error(\"invalid duration unit\");\n  }\n}\n"],"sourceRoot":""}